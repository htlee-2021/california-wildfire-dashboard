{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import*as d3 from'd3';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export const TemperatureFireCorrelation=_ref=>{let{onRefresh}=_ref;const[data,setData]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[correlationValue,setCorrelationValue]=useState(null);const scatterplotRef=useRef(null);const heatmapRef=useRef(null);useEffect(()=>{fetchData();},[]);const fetchData=async()=>{setLoading(true);setError(null);try{// Get data from the server API\nconst response=await fetch(`${process.env.PUBLIC_URL}/data/temperature-fire-correlation.json`);if(!response.ok){if(response.status===404){setError(\"Temperature-fire correlation data not found. Please run the temperature-fire-processor.js script on the server first.\");}else{throw new Error(`Failed to fetch data: ${response.statusText}`);}setLoading(false);return;}const responseData=await response.json();// Check if we have valid data\nif(responseData&&responseData.scatterplotData&&responseData.scatterplotData.length>0){// Set the data for visualization\nsetData(responseData.scatterplotData);// Set correlation value\nif(responseData.correlations&&responseData.correlations.temperatureToFires){setCorrelationValue(responseData.correlations.temperatureToFires.value);}setLoading(false);}else{setError(\"No valid temperature and fire count data found in the server response\");setLoading(false);}}catch(error){console.error(\"Error loading data from server:\",error);setError(\"Failed to load temperature and fire count data. Please check your server connection.\");setLoading(false);}};useEffect(()=>{if(data.length>0){createScatterplot();createHeatmap();}},[data]);const createScatterplot=()=>{if(!scatterplotRef.current)return;// Clear previous chart\nd3.select(scatterplotRef.current).selectAll(\"*\").remove();// Set dimensions and margins\nconst margin={top:40,right:30,bottom:60,left:60};const width=scatterplotRef.current.clientWidth||600;const height=400;const chartWidth=width-margin.left-margin.right;const chartHeight=height-margin.top-margin.bottom;// Create SVG\nconst svg=d3.select(scatterplotRef.current).attr(\"width\",width).attr(\"height\",height).append(\"g\").attr(\"transform\",`translate(${margin.left},${margin.top})`);// Add background grid\nsvg.append(\"g\").attr(\"class\",\"grid-lines\").selectAll(\"line\").data(d3.range(0,chartWidth,50)).enter().append(\"line\").attr(\"x1\",d=>d).attr(\"y1\",0).attr(\"x2\",d=>d).attr(\"y2\",chartHeight).attr(\"stroke\",\"#e5e7eb\").attr(\"stroke-dasharray\",\"3,3\");svg.append(\"g\").attr(\"class\",\"grid-lines\").selectAll(\"line\").data(d3.range(0,chartHeight,50)).enter().append(\"line\").attr(\"x1\",0).attr(\"y1\",d=>d).attr(\"x2\",chartWidth).attr(\"y2\",d=>d).attr(\"stroke\",\"#e5e7eb\").attr(\"stroke-dasharray\",\"3,3\");// Calculate domains for scales\nconst xExtent=d3.extent(data,d=>d.tempValue);const yExtent=d3.extent(data,d=>d.fireCount);// Add some padding to the domains\nconst xPadding=(xExtent[1]-xExtent[0])*0.1;const yPadding=(yExtent[1]-yExtent[0])*0.1;// Create scales\nconst xScale=d3.scaleLinear().domain([xExtent[0]-xPadding,xExtent[1]+xPadding]).range([0,chartWidth]);const yScale=d3.scaleLinear().domain([yExtent[0]-yPadding,yExtent[1]+yPadding]).range([chartHeight,0]);// Create and add axes\nconst xAxis=d3.axisBottom(xScale);const yAxis=d3.axisLeft(yScale);svg.append(\"g\").attr(\"transform\",`translate(0,${chartHeight})`).call(xAxis);svg.append(\"g\").call(yAxis);// Add regression line if we have enough data points\nif(data.length>2){// Calculate regression line\nconst xSeries=data.map(d=>d.tempValue);const ySeries=data.map(d=>d.fireCount);const xMean=d3.mean(xSeries);const yMean=d3.mean(ySeries);let numerator=0;let denominator=0;for(let i=0;i<data.length;i++){numerator+=(xSeries[i]-xMean)*(ySeries[i]-yMean);denominator+=Math.pow(xSeries[i]-xMean,2);}const slope=numerator/denominator;const intercept=yMean-slope*xMean;// Function to calculate y-value for regression line\nconst regressionLine=x=>slope*x+intercept;// Draw regression line\nsvg.append(\"line\").attr(\"x1\",xScale(xExtent[0]-xPadding)).attr(\"y1\",yScale(regressionLine(xExtent[0]-xPadding))).attr(\"x2\",xScale(xExtent[1]+xPadding)).attr(\"y2\",yScale(regressionLine(xExtent[1]+xPadding))).attr(\"stroke\",\"#f43f5e\").attr(\"stroke-width\",2).attr(\"stroke-dasharray\",\"5,5\");}// Create a color scale for points based on year\nconst yearExtent=d3.extent(data,d=>d.year);const colorScale=d3.scaleSequential().domain(yearExtent).interpolator(d3.interpolateViridis);// Add data points\nsvg.selectAll(\"circle\").data(data).enter().append(\"circle\").attr(\"cx\",d=>xScale(d.tempValue)).attr(\"cy\",d=>yScale(d.fireCount)).attr(\"r\",5).attr(\"fill\",d=>colorScale(d.year)).attr(\"stroke\",\"#fff\").attr(\"stroke-width\",1).attr(\"opacity\",0.7);// Add tooltip\nconst tooltip=d3.select(\"body\").append(\"div\").attr(\"class\",\"tooltip\").style(\"position\",\"absolute\").style(\"background\",\"rgba(0, 0, 0, 0.8)\").style(\"color\",\"white\").style(\"padding\",\"8px\").style(\"border-radius\",\"4px\").style(\"font-size\",\"12px\").style(\"pointer-events\",\"none\").style(\"opacity\",0).style(\"z-index\",1000);// Add tooltip behavior\nsvg.selectAll(\"circle\").on(\"mouseover\",function(event,d){d3.select(this).transition().duration(200).attr(\"r\",8).attr(\"opacity\",1);tooltip.transition().duration(200).style(\"opacity\",0.9);tooltip.html(`\n          <strong>Year: ${d.year}</strong><br>\n          Temperature: ${d.tempValue.toFixed(2)}<br>\n          Fire Count: ${d.fireCount.toFixed(2)}\n        `).style(\"left\",event.pageX+10+\"px\").style(\"top\",event.pageY-28+\"px\");}).on(\"mouseout\",function(){d3.select(this).transition().duration(200).attr(\"r\",5).attr(\"opacity\",0.7);tooltip.transition().duration(500).style(\"opacity\",0);});// Add axis labels\nsvg.append(\"text\").attr(\"x\",chartWidth/2).attr(\"y\",chartHeight+40).attr(\"text-anchor\",\"middle\").attr(\"fill\",\"#4b5563\").text(\"Temperature (Normalized)\");svg.append(\"text\").attr(\"transform\",\"rotate(-90)\").attr(\"x\",-chartHeight/2).attr(\"y\",-40).attr(\"text-anchor\",\"middle\").attr(\"fill\",\"#4b5563\").text(\"Count of Fires (Normalized)\");// Add title\nsvg.append(\"text\").attr(\"x\",chartWidth/2).attr(\"y\",-10).attr(\"text-anchor\",\"middle\").attr(\"font-size\",\"16px\").attr(\"font-weight\",\"bold\").text(\"Temperature vs. Fire Count Correlation\");};const createHeatmap=()=>{if(!heatmapRef.current||data.length<5)return;// Clear previous chart\nd3.select(heatmapRef.current).selectAll(\"*\").remove();// Get min and max values - use the same ranges as the scatterplot for consistency\nconst xExtent=d3.extent(data,d=>d.tempValue);const yExtent=d3.extent(data,d=>d.fireCount);const tempMin=xExtent[0];const tempMax=xExtent[1];const fireMin=yExtent[0];const fireMax=yExtent[1];// Add some padding to the domains, matching the scatterplot\nconst xPadding=(tempMax-tempMin)*0.1;const yPadding=(fireMax-fireMin)*0.1;// Create bins for temperature and fire counts\nconst tempBinCount=10;const fireBinCount=10;const tempStep=(tempMax+xPadding-(tempMin-xPadding))/tempBinCount;const fireStep=(fireMax+yPadding-(fireMin-yPadding))/fireBinCount;// Create bin ranges\nconst tempBins=Array.from({length:tempBinCount},(_,i)=>({min:tempMin-xPadding+i*tempStep,max:tempMin-xPadding+(i+1)*tempStep}));const fireBins=Array.from({length:fireBinCount},(_,i)=>({min:fireMin-yPadding+i*fireStep,max:fireMin-yPadding+(i+1)*fireStep}));console.log(\"Bins created:\",{tempBins,fireBins});// Create heatmap data with proper indexing\nconst heatmapData=[];for(let i=0;i<tempBinCount;i++){for(let j=0;j<fireBinCount;j++){// Find all data points in this bin\nconst pointsInBin=data.filter(d=>d.tempValue>=tempBins[i].min&&d.tempValue<tempBins[i].max&&d.fireCount>=fireBins[j].min&&d.fireCount<fireBins[j].max);const count=pointsInBin.length;// Add as a data point with y-index inverted to match scatterplot orientation\nheatmapData.push({tempIndex:i,fireIndex:fireBinCount-1-j,// Invert to match scatterplot orientation\ncount:count,tempMin:tempBins[i].min.toFixed(2),tempMax:tempBins[i].max.toFixed(2),fireMin:fireBins[j].min.toFixed(2),fireMax:fireBins[j].max.toFixed(2),points:pointsInBin});if(count>0){console.log(`Bin [${i},${j}]: temp=${tempBins[i].min.toFixed(2)}-${tempBins[i].max.toFixed(2)}, fire=${fireBins[j].min.toFixed(2)}-${fireBins[j].max.toFixed(2)}, count=${count}`);}}}// Set dimensions and margins\nconst margin={top:40,right:30,bottom:80,left:60};const width=heatmapRef.current.clientWidth||500;const height=400;const chartWidth=width-margin.left-margin.right;const chartHeight=height-margin.top-margin.bottom;// Cell size\nconst cellWidth=chartWidth/tempBinCount;const cellHeight=chartHeight/fireBinCount;// Create SVG\nconst svg=d3.select(heatmapRef.current).attr(\"width\",width).attr(\"height\",height).append(\"g\").attr(\"transform\",`translate(${margin.left},${margin.top})`);// Color scale - use a sequential scale that shows intensity well\nconst maxCount=d3.max(heatmapData,d=>d.count)||1;const colorScale=d3.scaleSequential().domain([0,maxCount]).interpolator(d3.interpolateYlOrRd);// Create heatmap cells\nsvg.selectAll(\"rect\").data(heatmapData).enter().append(\"rect\").attr(\"x\",d=>d.tempIndex*cellWidth).attr(\"y\",d=>d.fireIndex*cellHeight).attr(\"width\",cellWidth).attr(\"height\",cellHeight).attr(\"fill\",d=>d.count>0?colorScale(d.count):\"#f9fafb\").attr(\"stroke\",\"#fff\").attr(\"stroke-width\",1).append(\"title\").text(d=>`Temp: ${d.tempMin}-${d.tempMax}\\nFires: ${d.fireMin}-${d.fireMax}\\nCount: ${d.count}`);// Add text for counts\nsvg.selectAll(\"text.cell-text\").data(heatmapData.filter(d=>d.count>0)).enter().append(\"text\").attr(\"class\",\"cell-text\").attr(\"x\",d=>d.tempIndex*cellWidth+cellWidth/2).attr(\"y\",d=>d.fireIndex*cellHeight+cellHeight/2+4).attr(\"text-anchor\",\"middle\").attr(\"fill\",d=>d.count>maxCount/2?\"#fff\":\"#000\").attr(\"font-size\",\"10px\").text(d=>d.count);// Add diagonal correlation line to match the regression line in scatterplot\nif(data.length>2){// Get the same regression line parameters as used in scatterplot\nconst xSeries=data.map(d=>d.tempValue);const ySeries=data.map(d=>d.fireCount);const xMean=d3.mean(xSeries);const yMean=d3.mean(ySeries);let numerator=0;let denominator=0;for(let i=0;i<data.length;i++){numerator+=(xSeries[i]-xMean)*(ySeries[i]-yMean);denominator+=Math.pow(xSeries[i]-xMean,2);}const slope=numerator/denominator;const intercept=yMean-slope*xMean;// Function to calculate y-value for regression line\nconst regressionLine=x=>slope*x+intercept;// Convert the regression line to heatmap coordinates\nconst heatmapX1=0;const heatmapY1=chartHeight-chartHeight*(regressionLine(tempMin-xPadding)-(fireMin-yPadding))/(fireMax+yPadding-(fireMin-yPadding));const heatmapX2=chartWidth;const heatmapY2=chartHeight-chartHeight*(regressionLine(tempMax+xPadding)-(fireMin-yPadding))/(fireMax+yPadding-(fireMin-yPadding));// Draw regression line\nsvg.append(\"line\").attr(\"x1\",heatmapX1).attr(\"y1\",heatmapY1).attr(\"x2\",heatmapX2).attr(\"y2\",heatmapY2).attr(\"stroke\",\"#f43f5e\").attr(\"stroke-width\",2).attr(\"stroke-dasharray\",\"5,5\");}// Create axes with correct labeling\n// For x-axis (temperature), create labels at specific points for clarity\nconst tempTickValues=[];for(let i=0;i<=tempBinCount;i+=2){const value=tempMin-xPadding+i*tempStep;tempTickValues.push({value:i,label:value.toFixed(1)});}// For y-axis (fire count), create labels at specific points\nconst fireTickValues=[];for(let i=0;i<=fireBinCount;i+=2){const value=fireMin-yPadding+i*fireStep;fireTickValues.push({value:fireBinCount-i,// Invert to match the visual layout\nlabel:value.toFixed(1)});}// Create scale bands for the axes\nconst xScale=d3.scaleBand().domain(d3.range(tempBinCount+1)).range([0,chartWidth]);const yScale=d3.scaleBand().domain(d3.range(fireBinCount+1).reverse())// Reverse domain for correct orientation\n.range([0,chartHeight]);// Add axes\nconst xAxis=d3.axisBottom(xScale).tickValues(tempTickValues.map(t=>t.value)).tickFormat((d,i)=>{const tick=tempTickValues.find(t=>t.value===d);return tick?tick.label:'';});const yAxis=d3.axisLeft(yScale).tickValues(fireTickValues.map(t=>t.value)).tickFormat((d,i)=>{const tick=fireTickValues.find(t=>t.value===d);return tick?tick.label:'';});svg.append(\"g\").attr(\"transform\",`translate(0,${chartHeight})`).call(xAxis).selectAll(\"text\").attr(\"transform\",\"rotate(-45)\").style(\"text-anchor\",\"end\").attr(\"dx\",\"-.8em\").attr(\"dy\",\".15em\");svg.append(\"g\").call(yAxis);// Add axis labels\nsvg.append(\"text\").attr(\"x\",chartWidth/2).attr(\"y\",chartHeight+60).attr(\"text-anchor\",\"middle\").attr(\"fill\",\"#4b5563\").text(\"Temperature (Normalized)\");svg.append(\"text\").attr(\"transform\",\"rotate(-90)\").attr(\"x\",-chartHeight/2).attr(\"y\",-40).attr(\"text-anchor\",\"middle\").attr(\"fill\",\"#4b5563\").text(\"Count of Fires (Normalized)\");// Add title\nsvg.append(\"text\").attr(\"x\",chartWidth/2).attr(\"y\",-15).attr(\"text-anchor\",\"middle\").attr(\"font-size\",\"16px\").attr(\"font-weight\",\"bold\").text(\"Temperature vs. Fire Count Correlation\");};// Calculate the correlation interpretation\nconst getCorrelationInterpretation=correlation=>{const absCorrelation=Math.abs(correlation);if(absCorrelation>=0.8)return\"Very strong\";if(absCorrelation>=0.6)return\"Strong\";if(absCorrelation>=0.4)return\"Moderate\";if(absCorrelation>=0.2)return\"Weak\";return\"Very weak or no correlation\";};// Get correlation color based on strength\nconst getCorrelationColor=correlation=>{const absCorrelation=Math.abs(correlation);if(absCorrelation>=0.8)return\"#dc2626\";// Strong red\nif(absCorrelation>=0.6)return\"#ea580c\";// Orange\nif(absCorrelation>=0.4)return\"#eab308\";// Yellow\nif(absCorrelation>=0.2)return\"#84cc16\";// Light green\nreturn\"#22c55e\";// Green\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"temp-fire-correlation-dashboard\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-header\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"dashboard-title\",children:\"Temperature-Fire Correlation Analysis\"}),/*#__PURE__*/_jsx(\"p\",{className:\"dashboard-description\",children:\"Analysis of the relationship between normalized temperature values and wildfire counts\"})]}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading-spinner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading-text\",children:\"Loading data...\"})]})}):error?/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"ml-3\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"error-title\",children:\"Data Loading Error\"}),/*#__PURE__*/_jsx(\"div\",{className:\"error-details\",children:/*#__PURE__*/_jsx(\"p\",{children:error})})]})})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"key-stats-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"key-stat-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"key-stat-card primary\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"key-stat-title\",children:\"Correlation Coefficient\"}),/*#__PURE__*/_jsx(\"div\",{className:\"key-stat-value\",style:{color:getCorrelationColor(correlationValue)},children:correlationValue!==null?correlationValue.toFixed(3):\"N/A\"}),/*#__PURE__*/_jsx(\"div\",{className:\"key-stat-label\",children:correlationValue!==null?`${getCorrelationInterpretation(correlationValue)} ${correlationValue>0?\"positive\":\"negative\"} correlation`:\"Not enough data\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"key-stat-card info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"key-stat-title\",children:\"Data Points\"}),/*#__PURE__*/_jsx(\"div\",{className:\"key-stat-value\",children:data.length}),/*#__PURE__*/_jsx(\"div\",{className:\"key-stat-label\",children:\"Years of data analyzed\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"key-stat-card danger\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"key-stat-title\",children:\"Temperature Range\"}),/*#__PURE__*/_jsx(\"div\",{className:\"key-stat-value\",children:data.length>0?`${d3.min(data,d=>d.tempValue).toFixed(2)} to ${d3.max(data,d=>d.tempValue).toFixed(2)}`:\"N/A\"}),/*#__PURE__*/_jsx(\"div\",{className:\"key-stat-label\",children:\"Normalized scale\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"key-stat-card warning\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"key-stat-title\",children:\"Fire Count Range\"}),/*#__PURE__*/_jsx(\"div\",{className:\"key-stat-value\",children:data.length>0?`${d3.min(data,d=>d.fireCount).toFixed(2)} to ${d3.max(data,d=>d.fireCount).toFixed(2)}`:\"N/A\"}),/*#__PURE__*/_jsx(\"div\",{className:\"key-stat-label\",children:\"Normalized scale\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"two-column-chart-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container half-width\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"section-title\",children:[/*#__PURE__*/_jsxs(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"section-icon\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:[/*#__PURE__*/_jsx(\"path\",{d:\"M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z\"})]}),\"Temperature vs. Fire Count Scatterplot\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-description\",children:[\"Each point represents a year, showing the relationship between normalized temperature and fire counts.\",correlationValue!==null&&/*#__PURE__*/_jsxs(\"span\",{children:[\" The dashed line shows the trend with a correlation of \",correlationValue.toFixed(3),\".\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-canvas\",children:/*#__PURE__*/_jsx(\"svg\",{ref:scatterplotRef,width:\"100%\",height:\"400\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container half-width\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"section-title\",children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"section-icon\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm9 4a1 1 0 10-2 0v6a1 1 0 102 0V7zm-3 2a1 1 0 10-2 0v4a1 1 0 102 0V9zm-3 3a1 1 0 10-2 0v1a1 1 0 102 0v-1z\",clipRule:\"evenodd\"})}),\"Temperature-Fire Distribution Heatmap\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-description\",children:\"Shows the frequency distribution of data points across temperature and fire count ranges. Darker colors indicate more years with that combination.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-canvas\",children:/*#__PURE__*/_jsx(\"svg\",{ref:heatmapRef,width:\"100%\",height:\"400\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"data-source-container\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"data-source-title\",children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"data-source-icon\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\",clipRule:\"evenodd\"})}),\"Interpretation Guide\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"data-source-content\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"This dashboard visualizes the relationship between normalized temperature values and wildfire counts. The scatterplot shows each data point (year) with temperature on the x-axis and fire count on the y-axis. The Pearson correlation coefficient quantifies the strength and direction of this relationship:\"}),/*#__PURE__*/_jsxs(\"ul\",{style:{marginLeft:\"20px\",listStyleType:\"disc\"},children:[/*#__PURE__*/_jsx(\"li\",{children:\"Values close to +1 indicate a strong positive correlation (as temperature increases, fire count increases)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Values close to -1 indicate a strong negative correlation (as temperature increases, fire count decreases)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Values close to 0 indicate little to no correlation between the variables\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"data-source-note\",children:\"Note: Correlation does not necessarily imply causation. Other factors may influence wildfire occurrence.\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"refresh-button-container\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"refresh-button\",onClick:fetchData,children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"refresh-icon\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\",clipRule:\"evenodd\"})}),\"Update Temperature-Fire Data\"]})})]});};","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TemperatureFireCorrelation","_ref","onRefresh","data","setData","loading","setLoading","error","setError","correlationValue","setCorrelationValue","scatterplotRef","heatmapRef","fetchData","response","fetch","process","env","PUBLIC_URL","ok","status","Error","statusText","responseData","json","scatterplotData","length","correlations","temperatureToFires","value","console","createScatterplot","createHeatmap","current","select","selectAll","remove","margin","top","right","bottom","left","width","clientWidth","height","chartWidth","chartHeight","svg","attr","append","range","enter","d","xExtent","extent","tempValue","yExtent","fireCount","xPadding","yPadding","xScale","scaleLinear","domain","yScale","xAxis","axisBottom","yAxis","axisLeft","call","xSeries","map","ySeries","xMean","mean","yMean","numerator","denominator","i","Math","pow","slope","intercept","regressionLine","x","yearExtent","year","colorScale","scaleSequential","interpolator","interpolateViridis","tooltip","style","on","event","transition","duration","html","toFixed","pageX","pageY","text","tempMin","tempMax","fireMin","fireMax","tempBinCount","fireBinCount","tempStep","fireStep","tempBins","Array","from","_","min","max","fireBins","log","heatmapData","j","pointsInBin","filter","count","push","tempIndex","fireIndex","points","cellWidth","cellHeight","maxCount","interpolateYlOrRd","heatmapX1","heatmapY1","heatmapX2","heatmapY2","tempTickValues","label","fireTickValues","scaleBand","reverse","tickValues","t","tickFormat","tick","find","getCorrelationInterpretation","correlation","absCorrelation","abs","getCorrelationColor","className","children","color","xmlns","viewBox","fill","ref","fillRule","clipRule","marginLeft","listStyleType","onClick"],"sources":["/Users/hongtenglee/Documents/geoviz-dashboard -frontend/california-wildfire-dashboard/client/src/components/TemperatureFireCorrelation.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\n\nexport const TemperatureFireCorrelation = ({ onRefresh }) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [correlationValue, setCorrelationValue] = useState(null);\n  \n  const scatterplotRef = useRef(null);\n  const heatmapRef = useRef(null);\n  \n  useEffect(() => {\n    fetchData();\n  }, []);\n  \n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Get data from the server API\n      const response = await fetch(`${process.env.PUBLIC_URL}/data/temperature-fire-correlation.json`);\n      \n      if (!response.ok) {\n        if (response.status === 404) {\n          setError(\"Temperature-fire correlation data not found. Please run the temperature-fire-processor.js script on the server first.\");\n        } else {\n          throw new Error(`Failed to fetch data: ${response.statusText}`);\n        }\n        setLoading(false);\n        return;\n      }\n      \n      const responseData = await response.json();\n      \n      // Check if we have valid data\n      if (responseData && responseData.scatterplotData && responseData.scatterplotData.length > 0) {\n        // Set the data for visualization\n        setData(responseData.scatterplotData);\n        \n        // Set correlation value\n        if (responseData.correlations && responseData.correlations.temperatureToFires) {\n          setCorrelationValue(responseData.correlations.temperatureToFires.value);\n        }\n        \n        setLoading(false);\n      } else {\n        setError(\"No valid temperature and fire count data found in the server response\");\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error(\"Error loading data from server:\", error);\n      setError(\"Failed to load temperature and fire count data. Please check your server connection.\");\n      setLoading(false);\n    }\n  };\n\n  \n  useEffect(() => {\n    if (data.length > 0) {\n      createScatterplot();\n      createHeatmap();\n    }\n  }, [data]);\n  \n  const createScatterplot = () => {\n    if (!scatterplotRef.current) return;\n    \n    // Clear previous chart\n    d3.select(scatterplotRef.current).selectAll(\"*\").remove();\n    \n    // Set dimensions and margins\n    const margin = { top: 40, right: 30, bottom: 60, left: 60 };\n    const width = scatterplotRef.current.clientWidth || 600;\n    const height = 400;\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n    \n    // Create SVG\n    const svg = d3.select(scatterplotRef.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n    \n    // Add background grid\n    svg.append(\"g\")\n      .attr(\"class\", \"grid-lines\")\n      .selectAll(\"line\")\n      .data(d3.range(0, chartWidth, 50))\n      .enter()\n      .append(\"line\")\n      .attr(\"x1\", d => d)\n      .attr(\"y1\", 0)\n      .attr(\"x2\", d => d)\n      .attr(\"y2\", chartHeight)\n      .attr(\"stroke\", \"#e5e7eb\")\n      .attr(\"stroke-dasharray\", \"3,3\");\n    \n    svg.append(\"g\")\n      .attr(\"class\", \"grid-lines\")\n      .selectAll(\"line\")\n      .data(d3.range(0, chartHeight, 50))\n      .enter()\n      .append(\"line\")\n      .attr(\"x1\", 0)\n      .attr(\"y1\", d => d)\n      .attr(\"x2\", chartWidth)\n      .attr(\"y2\", d => d)\n      .attr(\"stroke\", \"#e5e7eb\")\n      .attr(\"stroke-dasharray\", \"3,3\");\n    \n    // Calculate domains for scales\n    const xExtent = d3.extent(data, d => d.tempValue);\n    const yExtent = d3.extent(data, d => d.fireCount);\n    \n    // Add some padding to the domains\n    const xPadding = (xExtent[1] - xExtent[0]) * 0.1;\n    const yPadding = (yExtent[1] - yExtent[0]) * 0.1;\n    \n    // Create scales\n    const xScale = d3.scaleLinear()\n      .domain([xExtent[0] - xPadding, xExtent[1] + xPadding])\n      .range([0, chartWidth]);\n    \n    const yScale = d3.scaleLinear()\n      .domain([yExtent[0] - yPadding, yExtent[1] + yPadding])\n      .range([chartHeight, 0]);\n    \n    // Create and add axes\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n    \n    svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${chartHeight})`)\n      .call(xAxis);\n    \n    svg.append(\"g\")\n      .call(yAxis);\n    \n    // Add regression line if we have enough data points\n    if (data.length > 2) {\n      // Calculate regression line\n      const xSeries = data.map(d => d.tempValue);\n      const ySeries = data.map(d => d.fireCount);\n      \n      const xMean = d3.mean(xSeries);\n      const yMean = d3.mean(ySeries);\n      \n      let numerator = 0;\n      let denominator = 0;\n      \n      for (let i = 0; i < data.length; i++) {\n        numerator += (xSeries[i] - xMean) * (ySeries[i] - yMean);\n        denominator += Math.pow(xSeries[i] - xMean, 2);\n      }\n      \n      const slope = numerator / denominator;\n      const intercept = yMean - slope * xMean;\n      \n      // Function to calculate y-value for regression line\n      const regressionLine = x => slope * x + intercept;\n      \n      // Draw regression line\n      svg.append(\"line\")\n        .attr(\"x1\", xScale(xExtent[0] - xPadding))\n        .attr(\"y1\", yScale(regressionLine(xExtent[0] - xPadding)))\n        .attr(\"x2\", xScale(xExtent[1] + xPadding))\n        .attr(\"y2\", yScale(regressionLine(xExtent[1] + xPadding)))\n        .attr(\"stroke\", \"#f43f5e\")\n        .attr(\"stroke-width\", 2)\n        .attr(\"stroke-dasharray\", \"5,5\");\n    }\n    \n    // Create a color scale for points based on year\n    const yearExtent = d3.extent(data, d => d.year);\n    const colorScale = d3.scaleSequential()\n      .domain(yearExtent)\n      .interpolator(d3.interpolateViridis);\n    \n    // Add data points\n    svg.selectAll(\"circle\")\n      .data(data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"cx\", d => xScale(d.tempValue))\n      .attr(\"cy\", d => yScale(d.fireCount))\n      .attr(\"r\", 5)\n      .attr(\"fill\", d => colorScale(d.year))\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"opacity\", 0.7);\n    \n    // Add tooltip\n    const tooltip = d3.select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"background\", \"rgba(0, 0, 0, 0.8)\")\n      .style(\"color\", \"white\")\n      .style(\"padding\", \"8px\")\n      .style(\"border-radius\", \"4px\")\n      .style(\"font-size\", \"12px\")\n      .style(\"pointer-events\", \"none\")\n      .style(\"opacity\", 0)\n      .style(\"z-index\", 1000);\n    \n    // Add tooltip behavior\n    svg.selectAll(\"circle\")\n      .on(\"mouseover\", function(event, d) {\n        d3.select(this)\n          .transition()\n          .duration(200)\n          .attr(\"r\", 8)\n          .attr(\"opacity\", 1);\n        \n        tooltip.transition()\n          .duration(200)\n          .style(\"opacity\", 0.9);\n        \n        tooltip.html(`\n          <strong>Year: ${d.year}</strong><br>\n          Temperature: ${d.tempValue.toFixed(2)}<br>\n          Fire Count: ${d.fireCount.toFixed(2)}\n        `)\n          .style(\"left\", (event.pageX + 10) + \"px\")\n          .style(\"top\", (event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function() {\n        d3.select(this)\n          .transition()\n          .duration(200)\n          .attr(\"r\", 5)\n          .attr(\"opacity\", 0.7);\n        \n        tooltip.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n      });\n    \n    // Add axis labels\n    svg.append(\"text\")\n      .attr(\"x\", chartWidth / 2)\n      .attr(\"y\", chartHeight + 40)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", \"#4b5563\")\n      .text(\"Temperature (Normalized)\");\n    \n    svg.append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"x\", -chartHeight / 2)\n      .attr(\"y\", -40)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", \"#4b5563\")\n      .text(\"Count of Fires (Normalized)\");\n    \n    // Add title\n    svg.append(\"text\")\n      .attr(\"x\", chartWidth / 2)\n      .attr(\"y\", -10)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", \"16px\")\n      .attr(\"font-weight\", \"bold\")\n      .text(\"Temperature vs. Fire Count Correlation\");\n  };\n  \n  const createHeatmap = () => {\n    if (!heatmapRef.current || data.length < 5) return;\n    \n    // Clear previous chart\n    d3.select(heatmapRef.current).selectAll(\"*\").remove();\n    \n    // Get min and max values - use the same ranges as the scatterplot for consistency\n    const xExtent = d3.extent(data, d => d.tempValue);\n    const yExtent = d3.extent(data, d => d.fireCount);\n    \n    const tempMin = xExtent[0];\n    const tempMax = xExtent[1];\n    const fireMin = yExtent[0];\n    const fireMax = yExtent[1];\n    \n    // Add some padding to the domains, matching the scatterplot\n    const xPadding = (tempMax - tempMin) * 0.1;\n    const yPadding = (fireMax - fireMin) * 0.1;\n    \n    // Create bins for temperature and fire counts\n    const tempBinCount = 10;\n    const fireBinCount = 10;\n    \n    const tempStep = ((tempMax + xPadding) - (tempMin - xPadding)) / tempBinCount;\n    const fireStep = ((fireMax + yPadding) - (fireMin - yPadding)) / fireBinCount;\n    \n    // Create bin ranges\n    const tempBins = Array.from({ length: tempBinCount }, (_, i) => ({\n      min: (tempMin - xPadding) + i * tempStep,\n      max: (tempMin - xPadding) + (i + 1) * tempStep\n    }));\n    \n    const fireBins = Array.from({ length: fireBinCount }, (_, i) => ({\n      min: (fireMin - yPadding) + i * fireStep,\n      max: (fireMin - yPadding) + (i + 1) * fireStep\n    }));\n    \n    console.log(\"Bins created:\", { tempBins, fireBins });\n    \n    // Create heatmap data with proper indexing\n    const heatmapData = [];\n    \n    for (let i = 0; i < tempBinCount; i++) {\n      for (let j = 0; j < fireBinCount; j++) {\n        // Find all data points in this bin\n        const pointsInBin = data.filter(d => \n          d.tempValue >= tempBins[i].min && \n          d.tempValue < tempBins[i].max && \n          d.fireCount >= fireBins[j].min && \n          d.fireCount < fireBins[j].max\n        );\n        \n        const count = pointsInBin.length;\n        \n        // Add as a data point with y-index inverted to match scatterplot orientation\n        heatmapData.push({\n          tempIndex: i,\n          fireIndex: fireBinCount - 1 - j, // Invert to match scatterplot orientation\n          count: count,\n          tempMin: tempBins[i].min.toFixed(2),\n          tempMax: tempBins[i].max.toFixed(2),\n          fireMin: fireBins[j].min.toFixed(2),\n          fireMax: fireBins[j].max.toFixed(2),\n          points: pointsInBin\n        });\n        \n        if (count > 0) {\n          console.log(`Bin [${i},${j}]: temp=${tempBins[i].min.toFixed(2)}-${tempBins[i].max.toFixed(2)}, fire=${fireBins[j].min.toFixed(2)}-${fireBins[j].max.toFixed(2)}, count=${count}`);\n        }\n      }\n    }\n    \n    // Set dimensions and margins\n    const margin = { top: 40, right: 30, bottom: 80, left: 60 };\n    const width = heatmapRef.current.clientWidth || 500;\n    const height = 400;\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n    \n    // Cell size\n    const cellWidth = chartWidth / tempBinCount;\n    const cellHeight = chartHeight / fireBinCount;\n    \n    // Create SVG\n    const svg = d3.select(heatmapRef.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n    \n    // Color scale - use a sequential scale that shows intensity well\n    const maxCount = d3.max(heatmapData, d => d.count) || 1;\n    const colorScale = d3.scaleSequential()\n      .domain([0, maxCount])\n      .interpolator(d3.interpolateYlOrRd);\n    \n    // Create heatmap cells\n    svg.selectAll(\"rect\")\n      .data(heatmapData)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", d => d.tempIndex * cellWidth)\n      .attr(\"y\", d => d.fireIndex * cellHeight)\n      .attr(\"width\", cellWidth)\n      .attr(\"height\", cellHeight)\n      .attr(\"fill\", d => d.count > 0 ? colorScale(d.count) : \"#f9fafb\")\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 1)\n      .append(\"title\")\n      .text(d => `Temp: ${d.tempMin}-${d.tempMax}\\nFires: ${d.fireMin}-${d.fireMax}\\nCount: ${d.count}`);\n    \n    // Add text for counts\n    svg.selectAll(\"text.cell-text\")\n      .data(heatmapData.filter(d => d.count > 0))\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"cell-text\")\n      .attr(\"x\", d => d.tempIndex * cellWidth + cellWidth / 2)\n      .attr(\"y\", d => d.fireIndex * cellHeight + cellHeight / 2 + 4)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", d => d.count > maxCount / 2 ? \"#fff\" : \"#000\")\n      .attr(\"font-size\", \"10px\")\n      .text(d => d.count);\n    \n    // Add diagonal correlation line to match the regression line in scatterplot\n    if (data.length > 2) {\n      // Get the same regression line parameters as used in scatterplot\n      const xSeries = data.map(d => d.tempValue);\n      const ySeries = data.map(d => d.fireCount);\n      \n      const xMean = d3.mean(xSeries);\n      const yMean = d3.mean(ySeries);\n      \n      let numerator = 0;\n      let denominator = 0;\n      \n      for (let i = 0; i < data.length; i++) {\n        numerator += (xSeries[i] - xMean) * (ySeries[i] - yMean);\n        denominator += Math.pow(xSeries[i] - xMean, 2);\n      }\n      \n      const slope = numerator / denominator;\n      const intercept = yMean - slope * xMean;\n      \n      // Function to calculate y-value for regression line\n      const regressionLine = x => slope * x + intercept;\n      \n      // Convert the regression line to heatmap coordinates\n      const heatmapX1 = 0;\n      const heatmapY1 = chartHeight - (chartHeight * (regressionLine(tempMin - xPadding) - (fireMin - yPadding)) / ((fireMax + yPadding) - (fireMin - yPadding)));\n      const heatmapX2 = chartWidth;\n      const heatmapY2 = chartHeight - (chartHeight * (regressionLine(tempMax + xPadding) - (fireMin - yPadding)) / ((fireMax + yPadding) - (fireMin - yPadding)));\n      \n      // Draw regression line\n      svg.append(\"line\")\n        .attr(\"x1\", heatmapX1)\n        .attr(\"y1\", heatmapY1)\n        .attr(\"x2\", heatmapX2)\n        .attr(\"y2\", heatmapY2)\n        .attr(\"stroke\", \"#f43f5e\")\n        .attr(\"stroke-width\", 2)\n        .attr(\"stroke-dasharray\", \"5,5\");\n    }\n    \n    // Create axes with correct labeling\n    // For x-axis (temperature), create labels at specific points for clarity\n    const tempTickValues = [];\n    for (let i = 0; i <= tempBinCount; i += 2) {\n      const value = (tempMin - xPadding) + (i * tempStep);\n      tempTickValues.push({\n        value: i,\n        label: value.toFixed(1)\n      });\n    }\n    \n    // For y-axis (fire count), create labels at specific points\n    const fireTickValues = [];\n    for (let i = 0; i <= fireBinCount; i += 2) {\n      const value = (fireMin - yPadding) + (i * fireStep);\n      fireTickValues.push({\n        value: fireBinCount - i, // Invert to match the visual layout\n        label: value.toFixed(1)\n      });\n    }\n    \n    // Create scale bands for the axes\n    const xScale = d3.scaleBand()\n      .domain(d3.range(tempBinCount + 1))\n      .range([0, chartWidth]);\n    \n    const yScale = d3.scaleBand()\n      .domain(d3.range(fireBinCount + 1).reverse()) // Reverse domain for correct orientation\n      .range([0, chartHeight]);\n    \n    // Add axes\n    const xAxis = d3.axisBottom(xScale)\n      .tickValues(tempTickValues.map(t => t.value))\n      .tickFormat((d, i) => {\n        const tick = tempTickValues.find(t => t.value === d);\n        return tick ? tick.label : '';\n      });\n    \n    const yAxis = d3.axisLeft(yScale)\n      .tickValues(fireTickValues.map(t => t.value))\n      .tickFormat((d, i) => {\n        const tick = fireTickValues.find(t => t.value === d);\n        return tick ? tick.label : '';\n      });\n    \n    svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${chartHeight})`)\n      .call(xAxis)\n      .selectAll(\"text\")\n      .attr(\"transform\", \"rotate(-45)\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \".15em\");\n    \n    svg.append(\"g\")\n      .call(yAxis);\n    \n    // Add axis labels\n    svg.append(\"text\")\n      .attr(\"x\", chartWidth / 2)\n      .attr(\"y\", chartHeight + 60)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", \"#4b5563\")\n      .text(\"Temperature (Normalized)\");\n    \n    svg.append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"x\", -chartHeight / 2)\n      .attr(\"y\", -40)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", \"#4b5563\")\n      .text(\"Count of Fires (Normalized)\");\n    \n    // Add title\n    svg.append(\"text\")\n      .attr(\"x\", chartWidth / 2)\n      .attr(\"y\", -15)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", \"16px\")\n      .attr(\"font-weight\", \"bold\")\n      .text(\"Temperature vs. Fire Count Correlation\");\n      \n  };\n  \n  // Calculate the correlation interpretation\n  const getCorrelationInterpretation = (correlation) => {\n    const absCorrelation = Math.abs(correlation);\n    if (absCorrelation >= 0.8) return \"Very strong\";\n    if (absCorrelation >= 0.6) return \"Strong\";\n    if (absCorrelation >= 0.4) return \"Moderate\";\n    if (absCorrelation >= 0.2) return \"Weak\";\n    return \"Very weak or no correlation\";\n  };\n  \n  // Get correlation color based on strength\n  const getCorrelationColor = (correlation) => {\n    const absCorrelation = Math.abs(correlation);\n    if (absCorrelation >= 0.8) return \"#dc2626\"; // Strong red\n    if (absCorrelation >= 0.6) return \"#ea580c\"; // Orange\n    if (absCorrelation >= 0.4) return \"#eab308\"; // Yellow\n    if (absCorrelation >= 0.2) return \"#84cc16\"; // Light green\n    return \"#22c55e\"; // Green\n  };\n  \n  return (\n    <div className=\"temp-fire-correlation-dashboard\">\n      <div className=\"dashboard-header\">\n        <h2 className=\"dashboard-title\">Temperature-Fire Correlation Analysis</h2>\n        <p className=\"dashboard-description\">\n          Analysis of the relationship between normalized temperature values and wildfire counts\n        </p>\n      </div>\n      \n      {loading ? (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\">\n            <div className=\"spinner\"></div>\n            <div className=\"loading-text\">Loading data...</div>\n          </div>\n        </div>\n      ) : error ? (\n        <div className=\"error-message\">\n          <div className=\"flex\">\n            <div className=\"ml-3\">\n              <h3 className=\"error-title\">Data Loading Error</h3>\n              <div className=\"error-details\">\n                <p>{error}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <>\n          <div className=\"key-stats-container\">\n            <div className=\"key-stat-grid\">\n              <div className=\"key-stat-card primary\">\n                <div className=\"key-stat-title\">Correlation Coefficient</div>\n                <div className=\"key-stat-value\" style={{ color: getCorrelationColor(correlationValue) }}>\n                  {correlationValue !== null ? correlationValue.toFixed(3) : \"N/A\"}\n                </div>\n                <div className=\"key-stat-label\">\n                  {correlationValue !== null \n                    ? `${getCorrelationInterpretation(correlationValue)} ${correlationValue > 0 ? \"positive\" : \"negative\"} correlation` \n                    : \"Not enough data\"}\n                </div>\n              </div>\n              \n              <div className=\"key-stat-card info\">\n                <div className=\"key-stat-title\">Data Points</div>\n                <div className=\"key-stat-value\">{data.length}</div>\n                <div className=\"key-stat-label\">Years of data analyzed</div>\n              </div>\n              \n              <div className=\"key-stat-card danger\">\n                <div className=\"key-stat-title\">Temperature Range</div>\n                <div className=\"key-stat-value\">\n                  {data.length > 0 \n                    ? `${d3.min(data, d => d.tempValue).toFixed(2)} to ${d3.max(data, d => d.tempValue).toFixed(2)}` \n                    : \"N/A\"}\n                </div>\n                <div className=\"key-stat-label\">Normalized scale</div>\n              </div>\n              \n              <div className=\"key-stat-card warning\">\n                <div className=\"key-stat-title\">Fire Count Range</div>\n                <div className=\"key-stat-value\">\n                  {data.length > 0 \n                    ? `${d3.min(data, d => d.fireCount).toFixed(2)} to ${d3.max(data, d => d.fireCount).toFixed(2)}` \n                    : \"N/A\"}\n                </div>\n                <div className=\"key-stat-label\">Normalized scale</div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"two-column-chart-section\">\n            <div className=\"chart-container half-width\">\n              <h3 className=\"section-title\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path d=\"M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z\" />\n                  <path d=\"M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z\" />\n                </svg>\n                Temperature vs. Fire Count Scatterplot\n              </h3>\n              <div className=\"chart-description\">\n                Each point represents a year, showing the relationship between normalized temperature and fire counts.\n                {correlationValue !== null && (\n                  <span> The dashed line shows the trend with a correlation of {correlationValue.toFixed(3)}.</span>\n                )}\n              </div>\n              <div className=\"chart-canvas\">\n                <svg ref={scatterplotRef} width=\"100%\" height=\"400\"></svg>\n              </div>\n            </div>\n            \n            <div className=\"chart-container half-width\">\n              <h3 className=\"section-title\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm9 4a1 1 0 10-2 0v6a1 1 0 102 0V7zm-3 2a1 1 0 10-2 0v4a1 1 0 102 0V9zm-3 3a1 1 0 10-2 0v1a1 1 0 102 0v-1z\" clipRule=\"evenodd\" />\n                </svg>\n                Temperature-Fire Distribution Heatmap\n              </h3>\n              <div className=\"chart-description\">\n                Shows the frequency distribution of data points across temperature and fire count ranges.\n                Darker colors indicate more years with that combination.\n              </div>\n              <div className=\"chart-canvas\">\n                <svg ref={heatmapRef} width=\"100%\" height=\"400\"></svg>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"data-source-container\">\n            <h3 className=\"data-source-title\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"data-source-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n              </svg>\n              Interpretation Guide\n            </h3>\n            <div className=\"data-source-content\">\n              <p>\n                This dashboard visualizes the relationship between normalized temperature values and wildfire counts.\n                The scatterplot shows each data point (year) with temperature on the x-axis and fire count on the y-axis.\n                The Pearson correlation coefficient quantifies the strength and direction of this relationship:\n              </p>\n              <ul style={{ marginLeft: \"20px\", listStyleType: \"disc\" }}>\n                <li>Values close to +1 indicate a strong positive correlation (as temperature increases, fire count increases)</li>\n                <li>Values close to -1 indicate a strong negative correlation (as temperature increases, fire count decreases)</li>\n                <li>Values close to 0 indicate little to no correlation between the variables</li>\n              </ul>\n              <p className=\"data-source-note\">\n                Note: Correlation does not necessarily imply causation. Other factors may influence wildfire occurrence.\n              </p>\n            </div>\n          </div>\n        </>\n      )}\n      \n      <div className=\"refresh-button-container\">\n        <button className=\"refresh-button\" onClick={fetchData}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"refresh-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\" clipRule=\"evenodd\" />\n          </svg>\n          Update Temperature-Fire Data\n        </button>\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}