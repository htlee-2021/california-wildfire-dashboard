{"ast":null,"code":"var _jsxFileName = \"/Users/hongtenglee/Documents/geoviz-dashboard/client/src/components/RadialFireChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RadialFireChart = ({\n  yearlyData,\n  monthlyDataByYear,\n  availableYears,\n  selectedMetric = 'fires' // 'fires' or 'acres'\n}) => {\n  _s();\n  const radialChartRef = useRef(null);\n  useEffect(() => {\n    if (monthlyDataByYear && Object.keys(monthlyDataByYear).length > 0) {\n      createRadialChart();\n    }\n  }, [monthlyDataByYear, selectedMetric, availableYears]);\n  const formatLargeNumber = num => {\n    if (num >= 1000000) {\n      return `${(num / 1000000).toFixed(1)}M`;\n    } else if (num >= 1000) {\n      return `${(num / 1000).toFixed(1)}K`;\n    }\n    return num;\n  };\n  const createRadialChart = () => {\n    if (!radialChartRef.current) return;\n\n    // Clear previous chart\n    d3.select(radialChartRef.current).selectAll(\"*\").remove();\n\n    // Prepare data for the radial chart\n    const processedData = [];\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    // Get the last 10 years or all years if less than 10\n    const sortedYears = [...availableYears].sort((a, b) => b - a);\n    const yearsToShow = sortedYears.slice(0, 10);\n\n    // Create data structure for the radial chart\n    yearsToShow.forEach(year => {\n      if (monthlyDataByYear[year]) {\n        months.forEach((month, i) => {\n          const monthData = monthlyDataByYear[year].find(m => m.month === month);\n          if (monthData) {\n            processedData.push({\n              year: year,\n              month: month,\n              monthIndex: i,\n              angle: i / 12 * 2 * Math.PI,\n              // position in radians\n              value: selectedMetric === 'fires' ? monthData.fires : monthData.acres\n            });\n          }\n        });\n      }\n    });\n\n    // Set dimensions and margins\n    const margin = {\n      top: 50,\n      right: 50,\n      bottom: 50,\n      left: 50\n    };\n    const width = radialChartRef.current.clientWidth || 600;\n    const height = width; // Make it square for better radial visualization\n    const innerRadius = 80;\n    const outerRadius = Math.min(width, height) / 2 - margin.top;\n\n    // Create SVG\n    const svg = d3.select(radialChartRef.current).attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n\n    // Define scales\n    // Angle scale for months\n    const angleScale = d3.scaleLinear().domain([0, 12]).range([0, 2 * Math.PI]);\n\n    // Radius scale for values\n    const maxValue = d3.max(processedData, d => d.value);\n    const radiusScale = d3.scaleLinear().domain([0, maxValue]).range([innerRadius, outerRadius]);\n\n    // Year scale for color - use a more extensive color scheme for 10 years\n    const colorScale = d3.scaleOrdinal().domain(yearsToShow).range([...d3.schemeCategory10, ...d3.schemePaired.slice(0, 10)]); // Combined color schemes for more distinct colors\n\n    // Create month axis (circles and lines)\n    const monthCircles = svg.append(\"g\").attr(\"class\", \"month-circles\");\n\n    // Add circles for each month\n    monthCircles.selectAll(\"circle\").data(d3.range(1, 6)) // Create 5 concentric circles\n    .enter().append(\"circle\").attr(\"r\", d => innerRadius + d * (outerRadius - innerRadius) / 5).attr(\"fill\", \"none\").attr(\"stroke\", \"#e5e7eb\").attr(\"stroke-dasharray\", \"2,2\").attr(\"stroke-width\", 0.5);\n\n    // Add value labels to circles\n    monthCircles.selectAll(\".radius-label\").data(d3.range(1, 6)).enter().append(\"text\").attr(\"class\", \"radius-label\").attr(\"y\", d => -(innerRadius + d * (outerRadius - innerRadius) / 5)).attr(\"dy\", \"0.35em\").attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"10px\").attr(\"fill\", \"#6b7280\").text(d => {\n      const value = maxValue * (d / 5);\n      return formatLargeNumber(value);\n    });\n\n    // Add axis lines for months\n    const monthLines = svg.append(\"g\").attr(\"class\", \"month-lines\");\n    monthLines.selectAll(\"line\").data(months).enter().append(\"line\").attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", (d, i) => Math.cos(angleScale(i) - Math.PI / 2) * outerRadius).attr(\"y2\", (d, i) => Math.sin(angleScale(i) - Math.PI / 2) * outerRadius).attr(\"stroke\", \"#e5e7eb\").attr(\"stroke-width\", 0.5);\n\n    // Add month labels\n    svg.selectAll(\".month-label\").data(months).enter().append(\"text\").attr(\"class\", \"month-label\").attr(\"x\", (d, i) => Math.cos(angleScale(i) - Math.PI / 2) * (outerRadius + 20)).attr(\"y\", (d, i) => Math.sin(angleScale(i) - Math.PI / 2) * (outerRadius + 20)).attr(\"dy\", \"0.35em\").attr(\"text-anchor\", (d, i) => {\n      const angle = angleScale(i);\n      if (angle === 0 || angle === Math.PI) return \"middle\";\n      return angle < Math.PI ? \"start\" : \"end\";\n    }).attr(\"font-size\", \"12px\").attr(\"fill\", \"#4b5563\").text(d => d.substring(0, 3)); // Just show first 3 letters\n\n    // Group data by year for line generation\n    const dataByYear = d3.group(processedData, d => d.year);\n\n    // Create a line generator for each year\n    const lineGenerator = d3.lineRadial().angle(d => angleScale(d.monthIndex) - Math.PI / 2).radius(d => radiusScale(d.value)).curve(d3.curveCardinalClosed);\n\n    // Draw lines for each year\n    const yearLines = svg.append(\"g\").attr(\"class\", \"year-lines\");\n    dataByYear.forEach((yearData, year) => {\n      // Sort by month index for proper connection\n      yearData.sort((a, b) => a.monthIndex - b.monthIndex);\n\n      // Add the path (line)\n      yearLines.append(\"path\").datum(yearData).attr(\"d\", lineGenerator).attr(\"fill\", colorScale(year)).attr(\"fill-opacity\", 0.2).attr(\"stroke\", colorScale(year)).attr(\"stroke-width\", 2.5).attr(\"stroke-linejoin\", \"round\");\n\n      // Add dots for each month's data point\n      yearLines.selectAll(`circle-year-${year}`).data(yearData).enter().append(\"circle\").attr(\"cx\", d => Math.cos(angleScale(d.monthIndex) - Math.PI / 2) * radiusScale(d.value)).attr(\"cy\", d => Math.sin(angleScale(d.monthIndex) - Math.PI / 2) * radiusScale(d.value)).attr(\"r\", 4).attr(\"fill\", colorScale(year)).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 1.5);\n    });\n\n    // Add central label\n    svg.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"dy\", \"0.35em\").attr(\"font-size\", \"14px\").attr(\"font-weight\", \"bold\").text(selectedMetric === 'fires' ? \"Fire Count\" : \"Acres Burned\");\n\n    // Add legend - use two columns if more than 5 years\n    const legend = svg.append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", `translate(${-width / 2 + 20}, ${-height / 2 + 20})`);\n    yearsToShow.forEach((year, i) => {\n      // Calculate position - when more than 5 years, make two columns\n      const column = yearsToShow.length > 5 && i >= Math.ceil(yearsToShow.length / 2) ? 1 : 0;\n      const row = yearsToShow.length > 5 ? i % Math.ceil(yearsToShow.length / 2) : i;\n      const legendItem = legend.append(\"g\").attr(\"transform\", `translate(${column * 80}, ${row * 20})`);\n      legendItem.append(\"rect\").attr(\"width\", 15).attr(\"height\", 15).attr(\"fill\", colorScale(year));\n      legendItem.append(\"text\").attr(\"x\", 20).attr(\"y\", 12).text(year).attr(\"font-size\", \"12px\");\n    });\n\n    // Add title\n    svg.append(\"text\").attr(\"x\", 0).attr(\"y\", -height / 2 + 20).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"16px\").attr(\"font-weight\", \"bold\").text(`10-Year Monthly ${selectedMetric === 'fires' ? 'Fire Counts' : 'Acres Burned'} (${yearsToShow.length > 1 ? `${yearsToShow[yearsToShow.length - 1]}-${yearsToShow[0]}` : yearsToShow[0]})`);\n\n    // Create tooltip\n    const tooltip = d3.select(\"body\").selectAll(\".tooltip\").data([null]).join(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n\n    // Add hover effects for dots\n    svg.selectAll(\"circle\").on(\"mouseover\", function (event, d) {\n      if (!d || !d.value) return; // Skip if not a data point\n\n      d3.select(this).transition().duration(200).attr(\"r\", 6);\n      tooltip.transition().duration(200).style(\"opacity\", 0.9);\n      tooltip.html(`\n          <strong>${d.month} ${d.year}</strong><br/>\n          ${selectedMetric === 'fires' ? 'Fires' : 'Acres Burned'}: ${d.value.toLocaleString()}\n        `).style(\"left\", event.pageX + 10 + \"px\").style(\"top\", event.pageY - 28 + \"px\");\n    }).on(\"mouseout\", function (event, d) {\n      if (!d || !d.value) return; // Skip if not a data point\n\n      d3.select(this).transition().duration(200).attr(\"r\", 4);\n      tooltip.transition().duration(500).style(\"opacity\", 0);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"section-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        className: \"section-icon\",\n        viewBox: \"0 0 20 20\",\n        fill: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          fillRule: \"evenodd\",\n          d: \"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\",\n          clipRule: \"evenodd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), \"Seasonal Fire Patterns (Radial View)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-description\",\n      children: [\"This radial chart shows the seasonal pattern of \", selectedMetric === 'fires' ? 'fire occurrences' : 'acres burned', \"across the past 10 years. Each colored line represents a year, with months positioned clockwise around the circle. Compare annual cycles to identify recurring seasonal patterns and long-term trends in fire activity.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-canvas\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: radialChartRef,\n        width: \"100%\",\n        height: \"600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n};\n_s(RadialFireChart, \"TaFDfwLiw403gGmuo1N9NfhV7Vw=\");\n_c = RadialFireChart;\nexport default RadialFireChart;\nvar _c;\n$RefreshReg$(_c, \"RadialFireChart\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","RadialFireChart","yearlyData","monthlyDataByYear","availableYears","selectedMetric","_s","radialChartRef","Object","keys","length","createRadialChart","formatLargeNumber","num","toFixed","current","select","selectAll","remove","processedData","months","sortedYears","sort","a","b","yearsToShow","slice","forEach","year","month","i","monthData","find","m","push","monthIndex","angle","Math","PI","value","fires","acres","margin","top","right","bottom","left","width","clientWidth","height","innerRadius","outerRadius","min","svg","attr","append","angleScale","scaleLinear","domain","range","maxValue","max","d","radiusScale","colorScale","scaleOrdinal","schemeCategory10","schemePaired","monthCircles","data","enter","text","monthLines","cos","sin","substring","dataByYear","group","lineGenerator","lineRadial","radius","curve","curveCardinalClosed","yearLines","yearData","datum","legend","column","ceil","row","legendItem","tooltip","join","style","on","event","transition","duration","html","toLocaleString","pageX","pageY","className","children","xmlns","viewBox","fill","fillRule","clipRule","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","ref","_c","$RefreshReg$"],"sources":["/Users/hongtenglee/Documents/geoviz-dashboard/client/src/components/RadialFireChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nexport const RadialFireChart = ({ \n  yearlyData, \n  monthlyDataByYear,\n  availableYears,\n  selectedMetric = 'fires' // 'fires' or 'acres'\n}) => {\n  const radialChartRef = useRef(null);\n  \n  useEffect(() => {\n    if (monthlyDataByYear && Object.keys(monthlyDataByYear).length > 0) {\n      createRadialChart();\n    }\n  }, [monthlyDataByYear, selectedMetric, availableYears]);\n  \n  const formatLargeNumber = (num) => {\n    if (num >= 1000000) {\n      return `${(num / 1000000).toFixed(1)}M`;\n    } else if (num >= 1000) {\n      return `${(num / 1000).toFixed(1)}K`;\n    }\n    return num;\n  };\n  \n  const createRadialChart = () => {\n    if (!radialChartRef.current) return;\n    \n    // Clear previous chart\n    d3.select(radialChartRef.current).selectAll(\"*\").remove();\n    \n    // Prepare data for the radial chart\n    const processedData = [];\n    const months = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n    \n    // Get the last 10 years or all years if less than 10\n    const sortedYears = [...availableYears].sort((a, b) => b - a);\n    const yearsToShow = sortedYears.slice(0, 10);\n    \n    // Create data structure for the radial chart\n    yearsToShow.forEach(year => {\n      if (monthlyDataByYear[year]) {\n        months.forEach((month, i) => {\n          const monthData = monthlyDataByYear[year].find(m => m.month === month);\n          if (monthData) {\n            processedData.push({\n              year: year,\n              month: month,\n              monthIndex: i,\n              angle: (i / 12) * 2 * Math.PI, // position in radians\n              value: selectedMetric === 'fires' ? monthData.fires : monthData.acres\n            });\n          }\n        });\n      }\n    });\n    \n    // Set dimensions and margins\n    const margin = { top: 50, right: 50, bottom: 50, left: 50 };\n    const width = radialChartRef.current.clientWidth || 600;\n    const height = width; // Make it square for better radial visualization\n    const innerRadius = 80;\n    const outerRadius = Math.min(width, height) / 2 - margin.top;\n    \n    // Create SVG\n    const svg = d3.select(radialChartRef.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n    \n    // Define scales\n    // Angle scale for months\n    const angleScale = d3.scaleLinear()\n      .domain([0, 12])\n      .range([0, 2 * Math.PI]);\n    \n    // Radius scale for values\n    const maxValue = d3.max(processedData, d => d.value);\n    const radiusScale = d3.scaleLinear()\n      .domain([0, maxValue])\n      .range([innerRadius, outerRadius]);\n    \n    // Year scale for color - use a more extensive color scheme for 10 years\n    const colorScale = d3.scaleOrdinal()\n      .domain(yearsToShow)\n      .range([...d3.schemeCategory10, ...d3.schemePaired.slice(0, 10)]); // Combined color schemes for more distinct colors\n    \n    // Create month axis (circles and lines)\n    const monthCircles = svg.append(\"g\")\n      .attr(\"class\", \"month-circles\");\n    \n    // Add circles for each month\n    monthCircles.selectAll(\"circle\")\n      .data(d3.range(1, 6)) // Create 5 concentric circles\n      .enter()\n      .append(\"circle\")\n      .attr(\"r\", d => innerRadius + (d * (outerRadius - innerRadius) / 5))\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#e5e7eb\")\n      .attr(\"stroke-dasharray\", \"2,2\")\n      .attr(\"stroke-width\", 0.5);\n    \n    // Add value labels to circles\n    monthCircles.selectAll(\".radius-label\")\n      .data(d3.range(1, 6))\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"radius-label\")\n      .attr(\"y\", d => -(innerRadius + (d * (outerRadius - innerRadius) / 5)))\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", \"10px\")\n      .attr(\"fill\", \"#6b7280\")\n      .text(d => {\n        const value = maxValue * (d / 5);\n        return formatLargeNumber(value);\n      });\n    \n    // Add axis lines for months\n    const monthLines = svg.append(\"g\")\n      .attr(\"class\", \"month-lines\");\n    \n    monthLines.selectAll(\"line\")\n      .data(months)\n      .enter()\n      .append(\"line\")\n      .attr(\"x1\", 0)\n      .attr(\"y1\", 0)\n      .attr(\"x2\", (d, i) => Math.cos(angleScale(i) - Math.PI / 2) * outerRadius)\n      .attr(\"y2\", (d, i) => Math.sin(angleScale(i) - Math.PI / 2) * outerRadius)\n      .attr(\"stroke\", \"#e5e7eb\")\n      .attr(\"stroke-width\", 0.5);\n    \n    // Add month labels\n    svg.selectAll(\".month-label\")\n      .data(months)\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"month-label\")\n      .attr(\"x\", (d, i) => Math.cos(angleScale(i) - Math.PI / 2) * (outerRadius + 20))\n      .attr(\"y\", (d, i) => Math.sin(angleScale(i) - Math.PI / 2) * (outerRadius + 20))\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"text-anchor\", (d, i) => {\n        const angle = angleScale(i);\n        if (angle === 0 || angle === Math.PI) return \"middle\";\n        return angle < Math.PI ? \"start\" : \"end\";\n      })\n      .attr(\"font-size\", \"12px\")\n      .attr(\"fill\", \"#4b5563\")\n      .text(d => d.substring(0, 3)); // Just show first 3 letters\n    \n    // Group data by year for line generation\n    const dataByYear = d3.group(processedData, d => d.year);\n    \n    // Create a line generator for each year\n    const lineGenerator = d3.lineRadial()\n      .angle(d => angleScale(d.monthIndex) - Math.PI / 2)\n      .radius(d => radiusScale(d.value))\n      .curve(d3.curveCardinalClosed);\n    \n    // Draw lines for each year\n    const yearLines = svg.append(\"g\")\n      .attr(\"class\", \"year-lines\");\n    \n    dataByYear.forEach((yearData, year) => {\n      // Sort by month index for proper connection\n      yearData.sort((a, b) => a.monthIndex - b.monthIndex);\n      \n      // Add the path (line)\n      yearLines\n        .append(\"path\")\n        .datum(yearData)\n        .attr(\"d\", lineGenerator)\n        .attr(\"fill\", colorScale(year))\n        .attr(\"fill-opacity\", 0.2)\n        .attr(\"stroke\", colorScale(year))\n        .attr(\"stroke-width\", 2.5)\n        .attr(\"stroke-linejoin\", \"round\");\n      \n      // Add dots for each month's data point\n      yearLines\n        .selectAll(`circle-year-${year}`)\n        .data(yearData)\n        .enter()\n        .append(\"circle\")\n        .attr(\"cx\", d => Math.cos(angleScale(d.monthIndex) - Math.PI / 2) * radiusScale(d.value))\n        .attr(\"cy\", d => Math.sin(angleScale(d.monthIndex) - Math.PI / 2) * radiusScale(d.value))\n        .attr(\"r\", 4)\n        .attr(\"fill\", colorScale(year))\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"stroke-width\", 1.5);\n    });\n    \n    // Add central label\n    svg.append(\"text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"font-weight\", \"bold\")\n      .text(selectedMetric === 'fires' ? \"Fire Count\" : \"Acres Burned\");\n    \n    // Add legend - use two columns if more than 5 years\n    const legend = svg.append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", `translate(${-width/2 + 20}, ${-height/2 + 20})`);\n    \n    yearsToShow.forEach((year, i) => {\n      // Calculate position - when more than 5 years, make two columns\n      const column = yearsToShow.length > 5 && i >= Math.ceil(yearsToShow.length / 2) ? 1 : 0;\n      const row = yearsToShow.length > 5 ? i % Math.ceil(yearsToShow.length / 2) : i;\n      \n      const legendItem = legend.append(\"g\")\n        .attr(\"transform\", `translate(${column * 80}, ${row * 20})`);\n      \n      legendItem.append(\"rect\")\n        .attr(\"width\", 15)\n        .attr(\"height\", 15)\n        .attr(\"fill\", colorScale(year));\n      \n      legendItem.append(\"text\")\n        .attr(\"x\", 20)\n        .attr(\"y\", 12)\n        .text(year)\n        .attr(\"font-size\", \"12px\");\n    });\n    \n    // Add title\n    svg.append(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"y\", -height/2 + 20)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", \"16px\")\n      .attr(\"font-weight\", \"bold\")\n      .text(`10-Year Monthly ${selectedMetric === 'fires' ? 'Fire Counts' : 'Acres Burned'} (${yearsToShow.length > 1 ? `${yearsToShow[yearsToShow.length-1]}-${yearsToShow[0]}` : yearsToShow[0]})`);\n    \n    // Create tooltip\n    const tooltip = d3.select(\"body\")\n      .selectAll(\".tooltip\")\n      .data([null])\n      .join(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n    \n    // Add hover effects for dots\n    svg.selectAll(\"circle\")\n      .on(\"mouseover\", function(event, d) {\n        if (!d || !d.value) return; // Skip if not a data point\n        \n        d3.select(this)\n          .transition()\n          .duration(200)\n          .attr(\"r\", 6);\n        \n        tooltip.transition()\n          .duration(200)\n          .style(\"opacity\", 0.9);\n        \n        tooltip.html(`\n          <strong>${d.month} ${d.year}</strong><br/>\n          ${selectedMetric === 'fires' ? 'Fires' : 'Acres Burned'}: ${d.value.toLocaleString()}\n        `)\n          .style(\"left\", (event.pageX + 10) + \"px\")\n          .style(\"top\", (event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(event, d) {\n        if (!d || !d.value) return; // Skip if not a data point\n        \n        d3.select(this)\n          .transition()\n          .duration(200)\n          .attr(\"r\", 4);\n        \n        tooltip.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n      });\n  };\n  \n  return (\n    <div className=\"chart-container\">\n      <h3 className=\"section-title\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\" clipRule=\"evenodd\" />\n        </svg>\n        Seasonal Fire Patterns (Radial View)\n      </h3>\n      <div className=\"chart-description\">\n        This radial chart shows the seasonal pattern of {selectedMetric === 'fires' ? 'fire occurrences' : 'acres burned'} \n        across the past 10 years. Each colored line represents a year, with months positioned clockwise around the circle.\n        Compare annual cycles to identify recurring seasonal patterns and long-term trends in fire activity.\n      </div>\n      <div className=\"chart-canvas\" style={{ display: 'flex', justifyContent: 'center' }}>\n        <svg ref={radialChartRef} width=\"100%\" height=\"600\"></svg>\n      </div>\n    </div>\n  );\n};\n\nexport default RadialFireChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}