{"ast":null,"code":"var _jsxFileName = \"/Users/hongtenglee/Documents/geoviz-dashboard/client/src/components/Dashboard.jsx\",\n  _s = $RefreshSig$();\n// Dashboard.jsx - Main React component for the dashboard\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _data$metrics, _data$metrics$total, _data$metrics2, _data$metrics2$averag, _data$metrics3, _data$metrics3$maximu, _data$metrics4, _data$metrics4$minimu;\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedDataset, setSelectedDataset] = useState('default');\n  const [availableDatasets, setAvailableDatasets] = useState([{\n    id: 'default',\n    name: 'Default Dataset'\n  }]);\n  const [renderMethod, setRenderMethod] = useState('standard'); // 'standard' or 'simplified'\n  const mapRef = useRef(null);\n  const chartRef = useRef(null);\n  const backendBaseUrl = 'http://localhost:5000'; // Update to match your server port\n\n  useEffect(() => {\n    const fetchDatasets = async () => {\n      try {\n        const response = await fetch(`${backendBaseUrl}/api/datasets`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const datasets = await response.json();\n        setAvailableDatasets(datasets);\n      } catch (err) {\n        console.error('Error fetching datasets:', err);\n      }\n    };\n    fetchDatasets();\n  }, []);\n  useEffect(() => {\n    fetchData(selectedDataset);\n  }, [selectedDataset]);\n  const fetchData = async dataset => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${backendBaseUrl}/api/data/${dataset}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const result = await response.json();\n      setData(result);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  // Data preprocessing function\n  const preprocessData = () => {\n    if (!data) return;\n    console.log(\"Preprocessing data...\");\n\n    // 1. Check for GeoJSON data\n    if (data.geoData && data.geoData.features) {\n      const featureCount = data.geoData.features.length;\n      console.log(`GeoJSON contains ${featureCount} features`);\n      if (featureCount === 0) {\n        console.warn(\"No features found in GeoJSON data\");\n        return;\n      }\n\n      // 2. Analyze feature properties\n      const sampleFeature = data.geoData.features[0];\n      console.log(\"Sample feature properties:\", sampleFeature.properties);\n      const propertyStats = {};\n\n      // Count features with each property and check for NaN values\n      Object.keys(sampleFeature.properties || {}).forEach(prop => {\n        propertyStats[prop] = {\n          count: 0,\n          nanCount: 0,\n          numericCount: 0,\n          stringCount: 0,\n          otherCount: 0\n        };\n      });\n\n      // Analyze all features\n      data.geoData.features.forEach(feature => {\n        Object.entries(feature.properties || {}).forEach(([key, value]) => {\n          if (!propertyStats[key]) {\n            propertyStats[key] = {\n              count: 0,\n              nanCount: 0,\n              numericCount: 0,\n              stringCount: 0,\n              otherCount: 0\n            };\n          }\n          propertyStats[key].count++;\n          if (value === null || value === undefined) {\n            // Skip null/undefined values\n          } else if (typeof value === 'number') {\n            propertyStats[key].numericCount++;\n            if (isNaN(value)) propertyStats[key].nanCount++;\n          } else if (typeof value === 'string') {\n            propertyStats[key].stringCount++;\n            // Check if string can be parsed as number\n            const num = parseFloat(value);\n            if (!isNaN(num)) propertyStats[key].numericCount++;\n          } else {\n            propertyStats[key].otherCount++;\n          }\n        });\n      });\n      console.log(\"Property statistics:\", propertyStats);\n\n      // 3. Identify potential numeric fields for visualization\n      const numericFields = Object.entries(propertyStats).filter(([_, stats]) => stats.numericCount > 0).map(([field, stats]) => ({\n        field,\n        coverage: stats.numericCount / featureCount,\n        nanRate: stats.nanCount / stats.count\n      })).sort((a, b) => b.coverage - a.coverage);\n      console.log(\"Potential numeric fields for visualization:\", numericFields);\n\n      // 4. Check for potential geometry issues\n      let invalidGeometryCount = 0;\n      data.geoData.features.forEach(feature => {\n        if (!feature.geometry || !feature.geometry.coordinates) {\n          invalidGeometryCount++;\n        } else {\n          // Check for NaN in coordinates (simplified check)\n          try {\n            const coordStr = JSON.stringify(feature.geometry.coordinates);\n            if (coordStr.includes('NaN')) {\n              invalidGeometryCount++;\n            }\n          } catch (e) {\n            invalidGeometryCount++;\n          }\n        }\n      });\n      if (invalidGeometryCount > 0) {\n        console.warn(`Found ${invalidGeometryCount} features with potential geometry issues`);\n        if (invalidGeometryCount / featureCount > 0.1) {\n          console.warn(\"High proportion of invalid geometries, switching to simplified rendering\");\n          setRenderMethod('simplified');\n        }\n      }\n    } else {\n      console.warn(\"No GeoJSON data available\");\n    }\n\n    // 5. Analyze CSV data if available\n    if (data.csvData && data.csvData.length > 0) {\n      console.log(`CSV data contains ${data.csvData.length} rows`);\n      console.log(\"CSV columns:\", Object.keys(data.csvData[0]));\n    }\n  };\n  useEffect(() => {\n    if (data && !loading) {\n      preprocessData();\n    }\n  }, [data, loading]);\n  useEffect(() => {\n    if (data && mapRef.current) {\n      try {\n        if (renderMethod === 'standard') {\n          drawMap();\n        } else {\n          drawSimplifiedMap();\n        }\n      } catch (e) {\n        console.error(\"Error rendering map, falling back to simplified version:\", e);\n        drawSimplifiedMap();\n      }\n    }\n    if (data && chartRef.current) {\n      drawChart();\n    }\n  }, [data, renderMethod]);\n  const drawMap = () => {\n    const mapContainer = d3.select(mapRef.current);\n    mapContainer.selectAll(\"*\").remove();\n\n    // Check if we have valid GeoJSON data\n    if (!data.geoData || !data.geoData.features || data.geoData.features.length === 0) {\n      mapContainer.append(\"div\").attr(\"class\", \"no-data-message\").text(\"No geographic data available to display\");\n      return;\n    }\n    const width = mapContainer.node().getBoundingClientRect().width;\n    const height = 500;\n    const svg = mapContainer.append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n    try {\n      // Clean the features to ensure valid coordinates\n      const validFeatures = data.geoData.features.filter(feature => {\n        if (!feature.geometry || !feature.geometry.coordinates) return false;\n\n        // Check for NaN values in the coordinates\n        const hasValidCoords = (coords, isMulti = false) => {\n          if (Array.isArray(coords)) {\n            if (isMulti) return coords.every(c => hasValidCoords(c));\n            return coords.every(c => Array.isArray(c) ? hasValidCoords(c, false) : !isNaN(c));\n          }\n          return !isNaN(coords);\n        };\n\n        // Handle different geometry types\n        switch (feature.geometry.type) {\n          case 'Point':\n            return hasValidCoords(feature.geometry.coordinates);\n          case 'LineString':\n          case 'MultiPoint':\n            return hasValidCoords(feature.geometry.coordinates);\n          case 'Polygon':\n          case 'MultiLineString':\n            return hasValidCoords(feature.geometry.coordinates, true);\n          case 'MultiPolygon':\n            return feature.geometry.coordinates.every(polygon => hasValidCoords(polygon, true));\n          default:\n            return false;\n        }\n      });\n      if (validFeatures.length === 0) {\n        svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", height / 2).attr(\"text-anchor\", \"middle\").text(\"No valid geographic features found in the data\");\n        return;\n      }\n      const cleanedGeoData = {\n        type: 'FeatureCollection',\n        features: validFeatures\n      };\n\n      // Create a projection that works with the data\n      const projection = d3.geoMercator().fitSize([width, height], cleanedGeoData);\n      const path = d3.geoPath().projection(projection);\n\n      // Find a numeric property to use for coloring\n      let valueProperty = null;\n      if (cleanedGeoData.features.length > 0) {\n        const properties = cleanedGeoData.features[0].properties;\n        const numericProps = Object.keys(properties).filter(key => typeof properties[key] === 'number' || typeof properties[key] === 'string' && !isNaN(parseFloat(properties[key])));\n        if (numericProps.length > 0) {\n          valueProperty = numericProps[0];\n        }\n      }\n\n      // No numeric property found, use default coloring\n      if (!valueProperty) {\n        svg.selectAll(\"path\").data(cleanedGeoData.features).enter().append(\"path\").attr(\"d\", path).attr(\"fill\", \"#4682b4\").attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 0.5);\n        svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", 20).attr(\"text-anchor\", \"middle\").attr(\"class\", \"map-title\").text(\"Geographic Data (No numeric values for coloring)\");\n        return;\n      }\n\n      // Get min/max values for color scale\n      const values = cleanedGeoData.features.map(f => {\n        const val = f.properties[valueProperty];\n        return typeof val === 'number' ? val : parseFloat(val);\n      }).filter(val => !isNaN(val));\n      const minValue = values.length > 0 ? Math.min(...values) : 0;\n      const maxValue = values.length > 0 ? Math.max(...values) : 1;\n\n      // Create a color scale based on the property\n      const colorScale = d3.scaleSequential().domain([minValue, maxValue]).interpolator(d3.interpolateViridis);\n\n      // Draw map\n      svg.selectAll(\"path\").data(cleanedGeoData.features).enter().append(\"path\").attr(\"d\", feature => {\n        try {\n          return path(feature);\n        } catch (e) {\n          console.warn(\"Error rendering feature:\", e, feature);\n          return \"\";\n        }\n      }).attr(\"fill\", d => {\n        const val = d.properties[valueProperty];\n        const numericVal = typeof val === 'number' ? val : parseFloat(val);\n        return !isNaN(numericVal) ? colorScale(numericVal) : \"#ccc\";\n      }).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 0.5).on(\"mouseover\", function (event, d) {\n        d3.select(this).attr(\"stroke-width\", 1.5).attr(\"stroke\", \"#000\");\n\n        // Show tooltip with properties\n        const tooltip = d3.select(\".tooltip\");\n        let tooltipHTML = `<div style=\"font-weight:bold;border-bottom:1px solid #ccc;padding-bottom:3px;margin-bottom:3px\">\n            ${d.properties.name || d.properties.NAME || valueProperty + ': ' + d.properties[valueProperty] || 'Feature'}</div>`;\n\n        // Add all properties to tooltip\n        Object.entries(d.properties).forEach(([key, value]) => {\n          if (key !== 'name' && key !== 'NAME') {\n            tooltipHTML += `<div><strong>${key}:</strong> ${value}</div>`;\n          }\n        });\n        tooltip.style(\"left\", event.pageX + 10 + \"px\").style(\"top\", event.pageY - 20 + \"px\").style(\"display\", \"block\").html(tooltipHTML);\n      }).on(\"mouseout\", function () {\n        d3.select(this).attr(\"stroke-width\", 0.5).attr(\"stroke\", \"#fff\");\n\n        // Hide tooltip\n        d3.select(\".tooltip\").style(\"display\", \"none\");\n      });\n\n      // Add legend\n      const legendWidth = 20;\n      const legendHeight = 200;\n      const legendX = width - legendWidth - 20;\n      const legendY = (height - legendHeight) / 2;\n      const legend = svg.append(\"g\").attr(\"transform\", `translate(${legendX}, ${legendY})`);\n      const legendScale = d3.scaleLinear().domain(colorScale.domain()).range([legendHeight, 0]);\n      const legendAxis = d3.axisRight(legendScale).tickSize(legendWidth).ticks(5);\n      legend.append(\"g\").call(legendAxis);\n      const defs = svg.append(\"defs\");\n      const linearGradient = defs.append(\"linearGradient\").attr(\"id\", \"linear-gradient\").attr(\"x1\", \"0%\").attr(\"y1\", \"100%\").attr(\"x2\", \"0%\").attr(\"y2\", \"0%\");\n      const stops = [0, 0.2, 0.4, 0.6, 0.8, 1];\n      stops.forEach(stop => {\n        linearGradient.append(\"stop\").attr(\"offset\", `${stop * 100}%`).attr(\"stop-color\", colorScale(minValue + stop * (maxValue - minValue)));\n      });\n      legend.append(\"rect\").attr(\"width\", legendWidth).attr(\"height\", legendHeight).style(\"fill\", \"url(#linear-gradient)\");\n\n      // Add legend title\n      legend.append(\"text\").attr(\"x\", -10).attr(\"y\", -10).attr(\"text-anchor\", \"end\").style(\"font-size\", \"12px\").text(valueProperty);\n    } catch (err) {\n      console.error('Error rendering map:', err);\n      svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", height / 2).attr(\"text-anchor\", \"middle\").text(\"Error rendering map. See console for details.\");\n      throw err; // Re-throw to trigger the fallback\n    }\n  };\n\n  // A simplified version of the map drawing function that's more tolerant of issues\n  const drawSimplifiedMap = () => {\n    const mapContainer = d3.select(mapRef.current);\n    mapContainer.selectAll(\"*\").remove();\n\n    // Check if we have any GeoJSON data\n    if (!data.geoData || !data.geoData.features || data.geoData.features.length === 0) {\n      mapContainer.append(\"div\").attr(\"class\", \"no-data-message\").text(\"No geographic data available to display\");\n      return;\n    }\n    const width = mapContainer.node().getBoundingClientRect().width;\n    const height = 500;\n    const svg = mapContainer.append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n    try {\n      // 1. Create a filtered copy of the data with only valid features\n      const validFeatures = [];\n      data.geoData.features.forEach(feature => {\n        try {\n          // Skip features without geometry\n          if (!feature.geometry || !feature.geometry.coordinates) return;\n\n          // Simple validation based on geometry type\n          const isValid = (() => {\n            switch (feature.geometry.type) {\n              case 'Point':\n                return Array.isArray(feature.geometry.coordinates) && feature.geometry.coordinates.length >= 2 && !isNaN(feature.geometry.coordinates[0]) && !isNaN(feature.geometry.coordinates[1]);\n              case 'MultiPoint':\n              case 'LineString':\n                return Array.isArray(feature.geometry.coordinates) && feature.geometry.coordinates.length > 0;\n              case 'MultiLineString':\n              case 'Polygon':\n                return Array.isArray(feature.geometry.coordinates) && feature.geometry.coordinates.length > 0 && feature.geometry.coordinates.every(line => Array.isArray(line) && line.length > 0);\n              case 'MultiPolygon':\n                return Array.isArray(feature.geometry.coordinates) && feature.geometry.coordinates.length > 0;\n              default:\n                return false;\n            }\n          })();\n          if (isValid) validFeatures.push(feature);\n        } catch (e) {\n          // Skip features that cause errors\n          console.warn(\"Skipping invalid feature:\", e);\n        }\n      });\n      console.log(`Using ${validFeatures.length} of ${data.geoData.features.length} features for rendering`);\n      if (validFeatures.length === 0) {\n        svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", height / 2).attr(\"text-anchor\", \"middle\").text(\"No valid geographic features found in the data\");\n        return;\n      }\n\n      // 2. Create a simplified GeoJSON object with valid features\n      const simplifiedGeoData = {\n        type: 'FeatureCollection',\n        features: validFeatures\n      };\n\n      // 3. Try to create a projection that works\n      let projection;\n      try {\n        projection = d3.geoMercator().fitSize([width, height], simplifiedGeoData);\n      } catch (e) {\n        console.warn(\"Error creating Mercator projection, falling back to Equirectangular:\", e);\n        projection = d3.geoEquirectangular().fitSize([width, height], simplifiedGeoData);\n      }\n      const path = d3.geoPath().projection(projection);\n\n      // 4. Find a property to color the map\n      // Start with a default color\n      let fillColor = \"#4682b4\";\n      let colorScale = null;\n      let colorProperty = null;\n\n      // Try to find a numeric property to use for coloring\n      if (validFeatures.length > 0) {\n        const properties = validFeatures[0].properties || {};\n        const potentialProperties = Object.keys(properties).filter(key => {\n          const val = properties[key];\n          return typeof val === 'number' || typeof val === 'string' && !isNaN(parseFloat(val));\n        });\n        if (potentialProperties.length > 0) {\n          colorProperty = potentialProperties[0];\n\n          // Get values for the selected property\n          const values = validFeatures.map(f => {\n            const val = f.properties[colorProperty];\n            return typeof val === 'number' ? val : parseFloat(val);\n          }).filter(val => !isNaN(val));\n          if (values.length > 0) {\n            const minVal = Math.min(...values);\n            const maxVal = Math.max(...values);\n            colorScale = d3.scaleSequential().domain([minVal, maxVal]).interpolator(d3.interpolateViridis);\n          }\n        }\n      }\n\n      // 5. Draw features with simplified error handling\n      validFeatures.forEach(feature => {\n        try {\n          const pathData = path(feature);\n\n          // Skip if path generation fails\n          if (!pathData) return;\n          let fill = fillColor;\n\n          // Use color scale if available\n          if (colorScale && colorProperty) {\n            const val = feature.properties[colorProperty];\n            const numVal = typeof val === 'number' ? val : parseFloat(val);\n            if (!isNaN(numVal)) {\n              fill = colorScale(numVal);\n            }\n          }\n          svg.append(\"path\").attr(\"d\", pathData).attr(\"fill\", fill).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 0.5).on(\"mouseover\", function (event) {\n            d3.select(this).attr(\"stroke-width\", 1.5).attr(\"stroke\", \"#000\");\n\n            // Show tooltip with properties\n            const tooltip = d3.select(\".tooltip\");\n            let tooltipHTML = `<div style=\"font-weight:bold;border-bottom:1px solid #ccc;padding-bottom:3px;margin-bottom:3px\">\n                ${feature.properties.name || feature.properties.NAME || 'Feature'}</div>`;\n\n            // Add all properties to tooltip\n            Object.entries(feature.properties || {}).forEach(([key, value]) => {\n              if (key !== 'name' && key !== 'NAME') {\n                tooltipHTML += `<div><strong>${key}:</strong> ${value}</div>`;\n              }\n            });\n            tooltip.style(\"left\", event.pageX + 10 + \"px\").style(\"top\", event.pageY - 20 + \"px\").style(\"display\", \"block\").html(tooltipHTML);\n          }).on(\"mouseout\", function () {\n            d3.select(this).attr(\"stroke-width\", 0.5).attr(\"stroke\", \"#fff\");\n\n            // Hide tooltip\n            d3.select(\".tooltip\").style(\"display\", \"none\");\n          });\n        } catch (e) {\n          console.warn(\"Error drawing feature:\", e);\n        }\n      });\n\n      // 6. Add legend if using color scale\n      if (colorScale && colorProperty) {\n        const legendWidth = 20;\n        const legendHeight = 200;\n        const legendX = width - legendWidth - 20;\n        const legendY = (height - legendHeight) / 2;\n        const legend = svg.append(\"g\").attr(\"transform\", `translate(${legendX}, ${legendY})`);\n        const legendScale = d3.scaleLinear().domain(colorScale.domain()).range([legendHeight, 0]);\n        const legendAxis = d3.axisRight(legendScale).tickSize(legendWidth).ticks(5);\n        legend.append(\"g\").call(legendAxis);\n        const defs = svg.append(\"defs\");\n        const linearGradient = defs.append(\"linearGradient\").attr(\"id\", \"linear-gradient\").attr(\"x1\", \"0%\").attr(\"y1\", \"100%\").attr(\"x2\", \"0%\").attr(\"y2\", \"0%\");\n        const stops = [0, 0.2, 0.4, 0.6, 0.8, 1];\n        stops.forEach(stop => {\n          linearGradient.append(\"stop\").attr(\"offset\", `${stop * 100}%`).attr(\"stop-color\", colorScale(colorScale.domain()[0] + stop * (colorScale.domain()[1] - colorScale.domain()[0])));\n        });\n        legend.append(\"rect\").attr(\"width\", legendWidth).attr(\"height\", legendHeight).style(\"fill\", \"url(#linear-gradient)\");\n\n        // Add legend title\n        legend.append(\"text\").attr(\"x\", -10).attr(\"y\", -10).attr(\"text-anchor\", \"end\").style(\"font-size\", \"12px\").text(colorProperty);\n      }\n\n      // Add notice about simplified rendering\n      svg.append(\"text\").attr(\"x\", 10).attr(\"y\", 20).attr(\"class\", \"render-method\").style(\"font-size\", \"12px\").style(\"fill\", \"#666\").text(\"Using simplified rendering for improved stability\");\n    } catch (err) {\n      console.error('Error in simplified map rendering:', err);\n      svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", height / 2).attr(\"text-anchor\", \"middle\").text(\"Error rendering map. See console for details.\");\n    }\n  };\n  const drawChart = () => {\n    const chartContainer = d3.select(chartRef.current);\n    chartContainer.selectAll(\"*\").remove();\n    if (!data.csvData || data.csvData.length === 0) {\n      chartContainer.append(\"div\").attr(\"class\", \"no-data-message\").text(\"No chart data available to display\");\n      return;\n    }\n    const width = chartContainer.node().getBoundingClientRect().width;\n    const height = 300;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 50\n    };\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n    try {\n      // Find the category column\n      let categoryColumn = 'category';\n      let valueColumn = 'value';\n      if (data.csvData.length > 0) {\n        const firstRow = data.csvData[0];\n        const columns = Object.keys(firstRow);\n\n        // Find potential category and value columns\n        const stringColumns = columns.filter(col => typeof firstRow[col] === 'string' && firstRow[col] !== '');\n        const numericColumns = columns.filter(col => typeof firstRow[col] === 'number' || typeof firstRow[col] === 'string' && !isNaN(parseFloat(firstRow[col])));\n        if (stringColumns.length > 0) {\n          categoryColumn = stringColumns[0];\n        }\n        if (numericColumns.length > 0) {\n          valueColumn = numericColumns[0];\n        }\n      }\n\n      // Process data for bar chart\n      const chartData = data.csvData.filter(d => d[categoryColumn] && d[valueColumn] !== undefined).map(d => ({\n        category: d[categoryColumn],\n        value: typeof d[valueColumn] === 'number' ? d[valueColumn] : parseFloat(d[valueColumn])\n      })).filter(d => !isNaN(d.value)).sort((a, b) => b.value - a.value).slice(0, 10); // Limit to top 10 items for clarity\n\n      if (chartData.length === 0) {\n        chartContainer.append(\"div\").attr(\"class\", \"no-data-message\").text(\"No valid chart data to display\");\n        return;\n      }\n      const svg = chartContainer.append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n      const g = svg.append(\"g\").attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n      const x = d3.scaleBand().domain(chartData.map(d => d.category)).range([0, innerWidth]).padding(0.1);\n      const y = d3.scaleLinear().domain([0, d3.max(chartData, d => d.value) * 1.1]) // Add 10% padding\n      .nice().range([innerHeight, 0]);\n\n      // Add X axis\n      g.append(\"g\").attr(\"transform\", `translate(0, ${innerHeight})`).call(d3.axisBottom(x)).selectAll(\"text\").attr(\"y\", 10).attr(\"x\", -5).attr(\"dy\", \".35em\").attr(\"transform\", \"rotate(-45)\").style(\"text-anchor\", \"end\");\n\n      // Add Y axis\n      g.append(\"g\").call(d3.axisLeft(y));\n\n      // Add bars\n      g.selectAll(\".bar\").data(chartData).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", d => x(d.category)).attr(\"y\", d => y(d.value)).attr(\"width\", x.bandwidth()).attr(\"height\", d => innerHeight - y(d.value)).attr(\"fill\", \"#4682b4\").on(\"mouseover\", function (event, d) {\n        d3.select(this).attr(\"fill\", \"#1e5180\");\n\n        // Show tooltip\n        const tooltip = d3.select(\".tooltip\");\n        tooltip.style(\"left\", event.pageX + 10 + \"px\").style(\"top\", event.pageY - 20 + \"px\").style(\"display\", \"block\").html(`\n              <div><strong>${d.category}</strong></div>\n              <div>Value: ${d.value.toLocaleString()}</div>\n            `);\n      }).on(\"mouseout\", function () {\n        d3.select(this).attr(\"fill\", \"#4682b4\");\n        d3.select(\".tooltip\").style(\"display\", \"none\");\n      });\n\n      // Add title\n      svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", margin.top / 2).attr(\"text-anchor\", \"middle\").style(\"font-size\", \"16px\").text(`Top ${chartData.length} ${categoryColumn} by ${valueColumn}`);\n    } catch (error) {\n      console.error(\"Error rendering chart:\", error);\n      chartContainer.append(\"div\").attr(\"class\", \"error-message\").text(\"Error rendering chart. See console for details.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Data Visualization Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dataset-select\",\n          children: \"Select Dataset:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"dataset-select\",\n          value: selectedDataset,\n          onChange: e => setSelectedDataset(e.target.value),\n          children: availableDatasets.map(dataset => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: dataset.id,\n            children: dataset.name\n          }, dataset.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setRenderMethod(renderMethod === 'standard' ? 'simplified' : 'standard'),\n          style: {\n            marginLeft: '10px',\n            padding: '8px 12px',\n            backgroundColor: '#f0f0f0',\n            border: '1px solid #ddd',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: renderMethod === 'standard' ? 'Use Simplified Rendering' : 'Use Standard Rendering'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 5\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 15\n    }, this), data && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget full-width\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Geographic Data Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-container\",\n          ref: mapRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"widget\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Data Trends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            ref: chartRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"widget\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Key Metrics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metrics-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 882,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric-value\",\n                children: ((_data$metrics = data.metrics) === null || _data$metrics === void 0 ? void 0 : (_data$metrics$total = _data$metrics.total) === null || _data$metrics$total === void 0 ? void 0 : _data$metrics$total.toLocaleString()) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 883,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 881,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Average\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 886,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric-value\",\n                children: ((_data$metrics2 = data.metrics) === null || _data$metrics2 === void 0 ? void 0 : (_data$metrics2$averag = _data$metrics2.average) === null || _data$metrics2$averag === void 0 ? void 0 : _data$metrics2$averag.toFixed(2)) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 887,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Maximum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 890,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric-value\",\n                children: ((_data$metrics3 = data.metrics) === null || _data$metrics3 === void 0 ? void 0 : (_data$metrics3$maximu = _data$metrics3.maximum) === null || _data$metrics3$maximu === void 0 ? void 0 : _data$metrics3$maximu.toLocaleString()) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 891,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 889,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Minimum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 894,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric-value\",\n                children: ((_data$metrics4 = data.metrics) === null || _data$metrics4 === void 0 ? void 0 : (_data$metrics4$minimu = _data$metrics4.minimum) === null || _data$metrics4$minimu === void 0 ? void 0 : _data$metrics4$minimu.toLocaleString()) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 895,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 878,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 830,\n    columnNumber: 3\n  }, this);\n};\n_s(Dashboard, \"aWZYZCDvXi7Qt8oODXQ9bG4UrNc=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","jsxDEV","_jsxDEV","Dashboard","_s","_data$metrics","_data$metrics$total","_data$metrics2","_data$metrics2$averag","_data$metrics3","_data$metrics3$maximu","_data$metrics4","_data$metrics4$minimu","data","setData","loading","setLoading","error","setError","selectedDataset","setSelectedDataset","availableDatasets","setAvailableDatasets","id","name","renderMethod","setRenderMethod","mapRef","chartRef","backendBaseUrl","fetchDatasets","response","fetch","ok","Error","status","datasets","json","err","console","fetchData","dataset","result","message","preprocessData","log","geoData","features","featureCount","length","warn","sampleFeature","properties","propertyStats","Object","keys","forEach","prop","count","nanCount","numericCount","stringCount","otherCount","feature","entries","key","value","undefined","isNaN","num","parseFloat","numericFields","filter","_","stats","map","field","coverage","nanRate","sort","a","b","invalidGeometryCount","geometry","coordinates","coordStr","JSON","stringify","includes","e","csvData","current","drawMap","drawSimplifiedMap","drawChart","mapContainer","select","selectAll","remove","append","attr","text","width","node","getBoundingClientRect","height","svg","validFeatures","hasValidCoords","coords","isMulti","Array","isArray","every","c","type","polygon","cleanedGeoData","projection","geoMercator","fitSize","path","geoPath","valueProperty","numericProps","enter","values","f","val","minValue","Math","min","maxValue","max","colorScale","scaleSequential","domain","interpolator","interpolateViridis","d","numericVal","on","event","tooltip","tooltipHTML","NAME","style","pageX","pageY","html","legendWidth","legendHeight","legendX","legendY","legend","legendScale","scaleLinear","range","legendAxis","axisRight","tickSize","ticks","call","defs","linearGradient","stops","stop","isValid","line","push","simplifiedGeoData","geoEquirectangular","fillColor","colorProperty","potentialProperties","minVal","maxVal","pathData","fill","numVal","chartContainer","margin","top","right","bottom","left","innerWidth","innerHeight","categoryColumn","valueColumn","firstRow","columns","stringColumns","col","numericColumns","chartData","category","slice","g","x","scaleBand","padding","y","nice","axisBottom","axisLeft","bandwidth","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","target","onClick","marginLeft","backgroundColor","border","borderRadius","cursor","ref","metrics","total","average","toFixed","maximum","minimum","display","_c","$RefreshReg$"],"sources":["/Users/hongtenglee/Documents/geoviz-dashboard/client/src/components/Dashboard.jsx"],"sourcesContent":["// Dashboard.jsx - Main React component for the dashboard\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedDataset, setSelectedDataset] = useState('default');\n  const [availableDatasets, setAvailableDatasets] = useState([\n    { id: 'default', name: 'Default Dataset' }\n  ]);\n  const [renderMethod, setRenderMethod] = useState('standard'); // 'standard' or 'simplified'\n  const mapRef = useRef(null);\n  const chartRef = useRef(null);\n  const backendBaseUrl = 'http://localhost:5000'; // Update to match your server port\n\n  useEffect(() => {\n    const fetchDatasets = async () => {\n      try {\n        const response = await fetch(`${backendBaseUrl}/api/datasets`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const datasets = await response.json();\n        setAvailableDatasets(datasets);\n      } catch (err) {\n        console.error('Error fetching datasets:', err);\n      }\n    };\n    \n    fetchDatasets();\n  }, []);\n\n  useEffect(() => {\n    fetchData(selectedDataset);\n  }, [selectedDataset]);\n\n  const fetchData = async (dataset) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${backendBaseUrl}/api/data/${dataset}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const result = await response.json();\n      setData(result);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  // Data preprocessing function\n  const preprocessData = () => {\n    if (!data) return;\n\n    console.log(\"Preprocessing data...\");\n    \n    // 1. Check for GeoJSON data\n    if (data.geoData && data.geoData.features) {\n      const featureCount = data.geoData.features.length;\n      console.log(`GeoJSON contains ${featureCount} features`);\n      \n      if (featureCount === 0) {\n        console.warn(\"No features found in GeoJSON data\");\n        return;\n      }\n      \n      // 2. Analyze feature properties\n      const sampleFeature = data.geoData.features[0];\n      console.log(\"Sample feature properties:\", sampleFeature.properties);\n      \n      const propertyStats = {};\n      \n      // Count features with each property and check for NaN values\n      Object.keys(sampleFeature.properties || {}).forEach(prop => {\n        propertyStats[prop] = {\n          count: 0,\n          nanCount: 0,\n          numericCount: 0,\n          stringCount: 0,\n          otherCount: 0\n        };\n      });\n      \n      // Analyze all features\n      data.geoData.features.forEach(feature => {\n        Object.entries(feature.properties || {}).forEach(([key, value]) => {\n          if (!propertyStats[key]) {\n            propertyStats[key] = {\n              count: 0,\n              nanCount: 0,\n              numericCount: 0,\n              stringCount: 0,\n              otherCount: 0\n            };\n          }\n          \n          propertyStats[key].count++;\n          \n          if (value === null || value === undefined) {\n            // Skip null/undefined values\n          } else if (typeof value === 'number') {\n            propertyStats[key].numericCount++;\n            if (isNaN(value)) propertyStats[key].nanCount++;\n          } else if (typeof value === 'string') {\n            propertyStats[key].stringCount++;\n            // Check if string can be parsed as number\n            const num = parseFloat(value);\n            if (!isNaN(num)) propertyStats[key].numericCount++;\n          } else {\n            propertyStats[key].otherCount++;\n          }\n        });\n      });\n      \n      console.log(\"Property statistics:\", propertyStats);\n      \n      // 3. Identify potential numeric fields for visualization\n      const numericFields = Object.entries(propertyStats)\n        .filter(([_, stats]) => stats.numericCount > 0)\n        .map(([field, stats]) => ({\n          field,\n          coverage: stats.numericCount / featureCount,\n          nanRate: stats.nanCount / stats.count\n        }))\n        .sort((a, b) => b.coverage - a.coverage);\n      \n      console.log(\"Potential numeric fields for visualization:\", numericFields);\n      \n      // 4. Check for potential geometry issues\n      let invalidGeometryCount = 0;\n      data.geoData.features.forEach(feature => {\n        if (!feature.geometry || !feature.geometry.coordinates) {\n          invalidGeometryCount++;\n        } else {\n          // Check for NaN in coordinates (simplified check)\n          try {\n            const coordStr = JSON.stringify(feature.geometry.coordinates);\n            if (coordStr.includes('NaN')) {\n              invalidGeometryCount++;\n            }\n          } catch (e) {\n            invalidGeometryCount++;\n          }\n        }\n      });\n      \n      if (invalidGeometryCount > 0) {\n        console.warn(`Found ${invalidGeometryCount} features with potential geometry issues`);\n        if (invalidGeometryCount / featureCount > 0.1) {\n          console.warn(\"High proportion of invalid geometries, switching to simplified rendering\");\n          setRenderMethod('simplified');\n        }\n      }\n    } else {\n      console.warn(\"No GeoJSON data available\");\n    }\n    \n    // 5. Analyze CSV data if available\n    if (data.csvData && data.csvData.length > 0) {\n      console.log(`CSV data contains ${data.csvData.length} rows`);\n      console.log(\"CSV columns:\", Object.keys(data.csvData[0]));\n    }\n  };\n\n  useEffect(() => {\n    if (data && !loading) {\n      preprocessData();\n    }\n  }, [data, loading]);\n\n  useEffect(() => {\n    if (data && mapRef.current) {\n      try {\n        if (renderMethod === 'standard') {\n          drawMap();\n        } else {\n          drawSimplifiedMap();\n        }\n      } catch (e) {\n        console.error(\"Error rendering map, falling back to simplified version:\", e);\n        drawSimplifiedMap();\n      }\n    }\n    if (data && chartRef.current) {\n      drawChart();\n    }\n  }, [data, renderMethod]);\n\n  const drawMap = () => {\n    const mapContainer = d3.select(mapRef.current);\n    mapContainer.selectAll(\"*\").remove();\n\n    // Check if we have valid GeoJSON data\n    if (!data.geoData || !data.geoData.features || data.geoData.features.length === 0) {\n      mapContainer.append(\"div\")\n        .attr(\"class\", \"no-data-message\")\n        .text(\"No geographic data available to display\");\n      return;\n    }\n\n    const width = mapContainer.node().getBoundingClientRect().width;\n    const height = 500;\n\n    const svg = mapContainer\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    try {\n      // Clean the features to ensure valid coordinates\n      const validFeatures = data.geoData.features.filter(feature => {\n        if (!feature.geometry || !feature.geometry.coordinates) return false;\n        \n        // Check for NaN values in the coordinates\n        const hasValidCoords = (coords, isMulti = false) => {\n          if (Array.isArray(coords)) {\n            if (isMulti) return coords.every(c => hasValidCoords(c));\n            return coords.every(c => \n              (Array.isArray(c) ? hasValidCoords(c, false) : !isNaN(c))\n            );\n          }\n          return !isNaN(coords);\n        };\n\n        // Handle different geometry types\n        switch (feature.geometry.type) {\n          case 'Point': \n            return hasValidCoords(feature.geometry.coordinates);\n          case 'LineString': \n          case 'MultiPoint':\n            return hasValidCoords(feature.geometry.coordinates);\n          case 'Polygon': \n          case 'MultiLineString':\n            return hasValidCoords(feature.geometry.coordinates, true);\n          case 'MultiPolygon':\n            return feature.geometry.coordinates.every(polygon => \n              hasValidCoords(polygon, true)\n            );\n          default: \n            return false;\n        }\n      });\n\n      if (validFeatures.length === 0) {\n        svg.append(\"text\")\n          .attr(\"x\", width / 2)\n          .attr(\"y\", height / 2)\n          .attr(\"text-anchor\", \"middle\")\n          .text(\"No valid geographic features found in the data\");\n        return;\n      }\n\n      const cleanedGeoData = {\n        type: 'FeatureCollection',\n        features: validFeatures\n      };\n\n      // Create a projection that works with the data\n      const projection = d3.geoMercator()\n        .fitSize([width, height], cleanedGeoData);\n\n      const path = d3.geoPath().projection(projection);\n\n      // Find a numeric property to use for coloring\n      let valueProperty = null;\n      if (cleanedGeoData.features.length > 0) {\n        const properties = cleanedGeoData.features[0].properties;\n        const numericProps = Object.keys(properties).filter(key => \n          typeof properties[key] === 'number' || \n          (typeof properties[key] === 'string' && !isNaN(parseFloat(properties[key])))\n        );\n        \n        if (numericProps.length > 0) {\n          valueProperty = numericProps[0];\n        }\n      }\n\n      // No numeric property found, use default coloring\n      if (!valueProperty) {\n        svg.selectAll(\"path\")\n          .data(cleanedGeoData.features)\n          .enter()\n          .append(\"path\")\n          .attr(\"d\", path)\n          .attr(\"fill\", \"#4682b4\")\n          .attr(\"stroke\", \"#fff\")\n          .attr(\"stroke-width\", 0.5);\n        \n        svg.append(\"text\")\n          .attr(\"x\", width / 2)\n          .attr(\"y\", 20)\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"class\", \"map-title\")\n          .text(\"Geographic Data (No numeric values for coloring)\");\n        \n        return;\n      }\n\n      // Get min/max values for color scale\n      const values = cleanedGeoData.features.map(f => {\n        const val = f.properties[valueProperty];\n        return typeof val === 'number' ? val : parseFloat(val);\n      }).filter(val => !isNaN(val));\n\n      const minValue = values.length > 0 ? Math.min(...values) : 0;\n      const maxValue = values.length > 0 ? Math.max(...values) : 1;\n\n      // Create a color scale based on the property\n      const colorScale = d3.scaleSequential()\n        .domain([minValue, maxValue])\n        .interpolator(d3.interpolateViridis);\n\n      // Draw map\n      svg.selectAll(\"path\")\n        .data(cleanedGeoData.features)\n        .enter()\n        .append(\"path\")\n        .attr(\"d\", feature => {\n          try {\n            return path(feature);\n          } catch (e) {\n            console.warn(\"Error rendering feature:\", e, feature);\n            return \"\";\n          }\n        })\n        .attr(\"fill\", d => {\n          const val = d.properties[valueProperty];\n          const numericVal = typeof val === 'number' ? val : parseFloat(val);\n          return !isNaN(numericVal) ? colorScale(numericVal) : \"#ccc\";\n        })\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"stroke-width\", 0.5)\n        .on(\"mouseover\", function(event, d) {\n          d3.select(this)\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"stroke\", \"#000\");\n            \n          // Show tooltip with properties\n          const tooltip = d3.select(\".tooltip\");\n          let tooltipHTML = `<div style=\"font-weight:bold;border-bottom:1px solid #ccc;padding-bottom:3px;margin-bottom:3px\">\n            ${d.properties.name || d.properties.NAME || valueProperty + ': ' + d.properties[valueProperty] || 'Feature'}</div>`;\n          \n          // Add all properties to tooltip\n          Object.entries(d.properties).forEach(([key, value]) => {\n            if (key !== 'name' && key !== 'NAME') {\n              tooltipHTML += `<div><strong>${key}:</strong> ${value}</div>`;\n            }\n          });\n          \n          tooltip\n            .style(\"left\", (event.pageX + 10) + \"px\")\n            .style(\"top\", (event.pageY - 20) + \"px\")\n            .style(\"display\", \"block\")\n            .html(tooltipHTML);\n        })\n        .on(\"mouseout\", function() {\n          d3.select(this)\n            .attr(\"stroke-width\", 0.5)\n            .attr(\"stroke\", \"#fff\");\n            \n          // Hide tooltip\n          d3.select(\".tooltip\").style(\"display\", \"none\");\n        });\n\n      // Add legend\n      const legendWidth = 20;\n      const legendHeight = 200;\n      const legendX = width - legendWidth - 20;\n      const legendY = (height - legendHeight) / 2;\n\n      const legend = svg.append(\"g\")\n        .attr(\"transform\", `translate(${legendX}, ${legendY})`);\n\n      const legendScale = d3.scaleLinear()\n        .domain(colorScale.domain())\n        .range([legendHeight, 0]);\n\n      const legendAxis = d3.axisRight(legendScale)\n        .tickSize(legendWidth)\n        .ticks(5);\n\n      legend.append(\"g\")\n        .call(legendAxis);\n\n      const defs = svg.append(\"defs\");\n      const linearGradient = defs.append(\"linearGradient\")\n        .attr(\"id\", \"linear-gradient\")\n        .attr(\"x1\", \"0%\")\n        .attr(\"y1\", \"100%\")\n        .attr(\"x2\", \"0%\")\n        .attr(\"y2\", \"0%\");\n\n      const stops = [0, 0.2, 0.4, 0.6, 0.8, 1];\n      stops.forEach(stop => {\n        linearGradient.append(\"stop\")\n          .attr(\"offset\", `${stop * 100}%`)\n          .attr(\"stop-color\", colorScale(minValue + stop * (maxValue - minValue)));\n      });\n\n      legend.append(\"rect\")\n        .attr(\"width\", legendWidth)\n        .attr(\"height\", legendHeight)\n        .style(\"fill\", \"url(#linear-gradient)\");\n        \n      // Add legend title\n      legend.append(\"text\")\n        .attr(\"x\", -10)\n        .attr(\"y\", -10)\n        .attr(\"text-anchor\", \"end\")\n        .style(\"font-size\", \"12px\")\n        .text(valueProperty);\n    } catch (err) {\n      console.error('Error rendering map:', err);\n      svg.append(\"text\")\n        .attr(\"x\", width / 2)\n        .attr(\"y\", height / 2)\n        .attr(\"text-anchor\", \"middle\")\n        .text(\"Error rendering map. See console for details.\");\n      throw err; // Re-throw to trigger the fallback\n    }\n  };\n  \n  // A simplified version of the map drawing function that's more tolerant of issues\n  const drawSimplifiedMap = () => {\n    const mapContainer = d3.select(mapRef.current);\n    mapContainer.selectAll(\"*\").remove();\n\n    // Check if we have any GeoJSON data\n    if (!data.geoData || !data.geoData.features || data.geoData.features.length === 0) {\n      mapContainer.append(\"div\")\n        .attr(\"class\", \"no-data-message\")\n        .text(\"No geographic data available to display\");\n      return;\n    }\n\n    const width = mapContainer.node().getBoundingClientRect().width;\n    const height = 500;\n\n    const svg = mapContainer\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    try {\n      // 1. Create a filtered copy of the data with only valid features\n      const validFeatures = [];\n      \n      data.geoData.features.forEach(feature => {\n        try {\n          // Skip features without geometry\n          if (!feature.geometry || !feature.geometry.coordinates) return;\n          \n          // Simple validation based on geometry type\n          const isValid = (() => {\n            switch (feature.geometry.type) {\n              case 'Point':\n                return Array.isArray(feature.geometry.coordinates) && \n                       feature.geometry.coordinates.length >= 2 &&\n                       !isNaN(feature.geometry.coordinates[0]) && \n                       !isNaN(feature.geometry.coordinates[1]);\n              case 'MultiPoint':\n              case 'LineString':\n                return Array.isArray(feature.geometry.coordinates) && \n                       feature.geometry.coordinates.length > 0;\n              case 'MultiLineString':\n              case 'Polygon':\n                return Array.isArray(feature.geometry.coordinates) && \n                       feature.geometry.coordinates.length > 0 &&\n                       feature.geometry.coordinates.every(line => Array.isArray(line) && line.length > 0);\n              case 'MultiPolygon':\n                return Array.isArray(feature.geometry.coordinates) && \n                       feature.geometry.coordinates.length > 0;\n              default:\n                return false;\n            }\n          })();\n          \n          if (isValid) validFeatures.push(feature);\n        } catch (e) {\n          // Skip features that cause errors\n          console.warn(\"Skipping invalid feature:\", e);\n        }\n      });\n      \n      console.log(`Using ${validFeatures.length} of ${data.geoData.features.length} features for rendering`);\n      \n      if (validFeatures.length === 0) {\n        svg.append(\"text\")\n          .attr(\"x\", width / 2)\n          .attr(\"y\", height / 2)\n          .attr(\"text-anchor\", \"middle\")\n          .text(\"No valid geographic features found in the data\");\n        return;\n      }\n\n      // 2. Create a simplified GeoJSON object with valid features\n      const simplifiedGeoData = {\n        type: 'FeatureCollection',\n        features: validFeatures\n      };\n\n      // 3. Try to create a projection that works\n      let projection;\n      try {\n        projection = d3.geoMercator().fitSize([width, height], simplifiedGeoData);\n      } catch (e) {\n        console.warn(\"Error creating Mercator projection, falling back to Equirectangular:\", e);\n        projection = d3.geoEquirectangular().fitSize([width, height], simplifiedGeoData);\n      }\n\n      const path = d3.geoPath().projection(projection);\n\n      // 4. Find a property to color the map\n      // Start with a default color\n      let fillColor = \"#4682b4\";\n      let colorScale = null;\n      let colorProperty = null;\n      \n      // Try to find a numeric property to use for coloring\n      if (validFeatures.length > 0) {\n        const properties = validFeatures[0].properties || {};\n        const potentialProperties = Object.keys(properties).filter(key => {\n          const val = properties[key];\n          return typeof val === 'number' || \n                 (typeof val === 'string' && !isNaN(parseFloat(val)));\n        });\n        \n        if (potentialProperties.length > 0) {\n          colorProperty = potentialProperties[0];\n          \n          // Get values for the selected property\n          const values = validFeatures\n            .map(f => {\n              const val = f.properties[colorProperty];\n              return typeof val === 'number' ? val : parseFloat(val);\n            })\n            .filter(val => !isNaN(val));\n          \n          if (values.length > 0) {\n            const minVal = Math.min(...values);\n            const maxVal = Math.max(...values);\n            \n            colorScale = d3.scaleSequential()\n              .domain([minVal, maxVal])\n              .interpolator(d3.interpolateViridis);\n          }\n        }\n      }\n\n      // 5. Draw features with simplified error handling\n      validFeatures.forEach(feature => {\n        try {\n          const pathData = path(feature);\n          \n          // Skip if path generation fails\n          if (!pathData) return;\n          \n          let fill = fillColor;\n          \n          // Use color scale if available\n          if (colorScale && colorProperty) {\n            const val = feature.properties[colorProperty];\n            const numVal = typeof val === 'number' ? val : parseFloat(val);\n            if (!isNaN(numVal)) {\n              fill = colorScale(numVal);\n            }\n          }\n          \n          svg.append(\"path\")\n            .attr(\"d\", pathData)\n            .attr(\"fill\", fill)\n            .attr(\"stroke\", \"#fff\")\n            .attr(\"stroke-width\", 0.5)\n            .on(\"mouseover\", function(event) {\n              d3.select(this)\n                .attr(\"stroke-width\", 1.5)\n                .attr(\"stroke\", \"#000\");\n                \n              // Show tooltip with properties\n              const tooltip = d3.select(\".tooltip\");\n              let tooltipHTML = `<div style=\"font-weight:bold;border-bottom:1px solid #ccc;padding-bottom:3px;margin-bottom:3px\">\n                ${feature.properties.name || feature.properties.NAME || 'Feature'}</div>`;\n              \n              // Add all properties to tooltip\n              Object.entries(feature.properties || {}).forEach(([key, value]) => {\n                if (key !== 'name' && key !== 'NAME') {\n                  tooltipHTML += `<div><strong>${key}:</strong> ${value}</div>`;\n                }\n              });\n              \n              tooltip\n                .style(\"left\", (event.pageX + 10) + \"px\")\n                .style(\"top\", (event.pageY - 20) + \"px\")\n                .style(\"display\", \"block\")\n                .html(tooltipHTML);\n            })\n            .on(\"mouseout\", function() {\n              d3.select(this)\n                .attr(\"stroke-width\", 0.5)\n                .attr(\"stroke\", \"#fff\");\n                \n              // Hide tooltip\n              d3.select(\".tooltip\").style(\"display\", \"none\");\n            });\n        } catch (e) {\n          console.warn(\"Error drawing feature:\", e);\n        }\n      });\n\n      // 6. Add legend if using color scale\n      if (colorScale && colorProperty) {\n        const legendWidth = 20;\n        const legendHeight = 200;\n        const legendX = width - legendWidth - 20;\n        const legendY = (height - legendHeight) / 2;\n\n        const legend = svg.append(\"g\")\n          .attr(\"transform\", `translate(${legendX}, ${legendY})`);\n\n        const legendScale = d3.scaleLinear()\n          .domain(colorScale.domain())\n          .range([legendHeight, 0]);\n\n        const legendAxis = d3.axisRight(legendScale)\n          .tickSize(legendWidth)\n          .ticks(5);\n\n        legend.append(\"g\")\n          .call(legendAxis);\n\n        const defs = svg.append(\"defs\");\n        const linearGradient = defs.append(\"linearGradient\")\n          .attr(\"id\", \"linear-gradient\")\n          .attr(\"x1\", \"0%\")\n          .attr(\"y1\", \"100%\")\n          .attr(\"x2\", \"0%\")\n          .attr(\"y2\", \"0%\");\n\n        const stops = [0, 0.2, 0.4, 0.6, 0.8, 1];\n        stops.forEach(stop => {\n          linearGradient.append(\"stop\")\n            .attr(\"offset\", `${stop * 100}%`)\n            .attr(\"stop-color\", colorScale(colorScale.domain()[0] + stop * (colorScale.domain()[1] - colorScale.domain()[0])));\n        });\n\n        legend.append(\"rect\")\n          .attr(\"width\", legendWidth)\n          .attr(\"height\", legendHeight)\n          .style(\"fill\", \"url(#linear-gradient)\");\n          \n        // Add legend title\n        legend.append(\"text\")\n          .attr(\"x\", -10)\n          .attr(\"y\", -10)\n          .attr(\"text-anchor\", \"end\")\n          .style(\"font-size\", \"12px\")\n          .text(colorProperty);\n      }\n      \n      // Add notice about simplified rendering\n      svg.append(\"text\")\n        .attr(\"x\", 10)\n        .attr(\"y\", 20)\n        .attr(\"class\", \"render-method\")\n        .style(\"font-size\", \"12px\")\n        .style(\"fill\", \"#666\")\n        .text(\"Using simplified rendering for improved stability\");\n        \n    } catch (err) {\n      console.error('Error in simplified map rendering:', err);\n      svg.append(\"text\")\n        .attr(\"x\", width / 2)\n        .attr(\"y\", height / 2)\n        .attr(\"text-anchor\", \"middle\")\n        .text(\"Error rendering map. See console for details.\");\n    }\n  };\n\n  const drawChart = () => {\n    const chartContainer = d3.select(chartRef.current);\n    chartContainer.selectAll(\"*\").remove();\n\n    if (!data.csvData || data.csvData.length === 0) {\n      chartContainer.append(\"div\")\n        .attr(\"class\", \"no-data-message\")\n        .text(\"No chart data available to display\");\n      return;\n    }\n\n    const width = chartContainer.node().getBoundingClientRect().width;\n    const height = 300;\n    const margin = { top: 20, right: 30, bottom: 40, left: 50 };\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    try {\n      // Find the category column\n      let categoryColumn = 'category';\n      let valueColumn = 'value';\n      \n      if (data.csvData.length > 0) {\n        const firstRow = data.csvData[0];\n        const columns = Object.keys(firstRow);\n        \n        // Find potential category and value columns\n        const stringColumns = columns.filter(col => \n          typeof firstRow[col] === 'string' && firstRow[col] !== ''\n        );\n        \n        const numericColumns = columns.filter(col => \n          typeof firstRow[col] === 'number' || \n          (typeof firstRow[col] === 'string' && !isNaN(parseFloat(firstRow[col])))\n        );\n        \n        if (stringColumns.length > 0) {\n          categoryColumn = stringColumns[0];\n        }\n        \n        if (numericColumns.length > 0) {\n          valueColumn = numericColumns[0];\n        }\n      }\n      \n      // Process data for bar chart\n      const chartData = data.csvData\n        .filter(d => d[categoryColumn] && d[valueColumn] !== undefined)\n        .map(d => ({\n          category: d[categoryColumn],\n          value: typeof d[valueColumn] === 'number' ? \n                d[valueColumn] : \n                parseFloat(d[valueColumn])\n        }))\n        .filter(d => !isNaN(d.value))\n        .sort((a, b) => b.value - a.value)\n        .slice(0, 10); // Limit to top 10 items for clarity\n\n      if (chartData.length === 0) {\n        chartContainer.append(\"div\")\n          .attr(\"class\", \"no-data-message\")\n          .text(\"No valid chart data to display\");\n        return;\n      }\n\n      const svg = chartContainer\n        .append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n      const g = svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n      const x = d3.scaleBand()\n        .domain(chartData.map(d => d.category))\n        .range([0, innerWidth])\n        .padding(0.1);\n\n      const y = d3.scaleLinear()\n        .domain([0, d3.max(chartData, d => d.value) * 1.1]) // Add 10% padding\n        .nice()\n        .range([innerHeight, 0]);\n\n      // Add X axis\n      g.append(\"g\")\n        .attr(\"transform\", `translate(0, ${innerHeight})`)\n        .call(d3.axisBottom(x))\n        .selectAll(\"text\")\n        .attr(\"y\", 10)\n        .attr(\"x\", -5)\n        .attr(\"dy\", \".35em\")\n        .attr(\"transform\", \"rotate(-45)\")\n        .style(\"text-anchor\", \"end\");\n\n      // Add Y axis\n      g.append(\"g\")\n        .call(d3.axisLeft(y));\n\n      // Add bars\n      g.selectAll(\".bar\")\n        .data(chartData)\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", d => x(d.category))\n        .attr(\"y\", d => y(d.value))\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", d => innerHeight - y(d.value))\n        .attr(\"fill\", \"#4682b4\")\n        .on(\"mouseover\", function(event, d) {\n          d3.select(this).attr(\"fill\", \"#1e5180\");\n          \n          // Show tooltip\n          const tooltip = d3.select(\".tooltip\");\n          tooltip\n            .style(\"left\", (event.pageX + 10) + \"px\")\n            .style(\"top\", (event.pageY - 20) + \"px\")\n            .style(\"display\", \"block\")\n            .html(`\n              <div><strong>${d.category}</strong></div>\n              <div>Value: ${d.value.toLocaleString()}</div>\n            `);\n        })\n        .on(\"mouseout\", function() {\n          d3.select(this).attr(\"fill\", \"#4682b4\");\n          d3.select(\".tooltip\").style(\"display\", \"none\");\n        });\n\n      // Add title\n      svg.append(\"text\")\n        .attr(\"x\", width / 2)\n        .attr(\"y\", margin.top / 2)\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-size\", \"16px\")\n        .text(`Top ${chartData.length} ${categoryColumn} by ${valueColumn}`);\n    } catch (error) {\n      console.error(\"Error rendering chart:\", error);\n      chartContainer.append(\"div\")\n        .attr(\"class\", \"error-message\")\n        .text(\"Error rendering chart. See console for details.\");\n    }\n  };\n\n return (\n  <div className=\"dashboard-container\">\n    <header className=\"dashboard-header\">\n      <h1>Data Visualization Dashboard</h1>\n      <div className=\"controls\">\n        <label htmlFor=\"dataset-select\">Select Dataset:</label>\n        <select \n          id=\"dataset-select\" \n          value={selectedDataset}\n          onChange={(e) => setSelectedDataset(e.target.value)}\n        >\n          {availableDatasets.map(dataset => (\n            <option key={dataset.id} value={dataset.id}>\n              {dataset.name}\n            </option>\n          ))}\n        </select>\n        <button\n          onClick={() => setRenderMethod(renderMethod === 'standard' ? 'simplified' : 'standard')}\n          style={{\n            marginLeft: '10px',\n            padding: '8px 12px',\n            backgroundColor: '#f0f0f0',\n            border: '1px solid #ddd',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          }}\n        >\n          {renderMethod === 'standard' ? 'Use Simplified Rendering' : 'Use Standard Rendering'}\n        </button>\n      </div>\n    </header>\n\n    {loading && <div className=\"loading\">Loading data...</div>}\n    {error && <div className=\"error\">Error: {error}</div>}\n\n    {data && !loading && (\n      <div className=\"dashboard-content\">\n        <div className=\"widget full-width\">\n          <h2>Geographic Data Visualization</h2>\n          <div className=\"map-container\" ref={mapRef}></div>\n        </div>\n        \n        <div className=\"widget-row\">\n          <div className=\"widget\">\n            <h2>Data Trends</h2>\n            <div className=\"chart-container\" ref={chartRef}></div>\n          </div>\n          \n          <div className=\"widget\">\n            <h2>Key Metrics</h2>\n            <div className=\"metrics-container\">\n              <div className=\"metric-card\">\n                <h3>Total</h3>\n                <p className=\"metric-value\">{data.metrics?.total?.toLocaleString() || 'N/A'}</p>\n              </div>\n              <div className=\"metric-card\">\n                <h3>Average</h3>\n                <p className=\"metric-value\">{data.metrics?.average?.toFixed(2) || 'N/A'}</p>\n              </div>\n              <div className=\"metric-card\">\n                <h3>Maximum</h3>\n                <p className=\"metric-value\">{data.metrics?.maximum?.toLocaleString() || 'N/A'}</p>\n              </div>\n              <div className=\"metric-card\">\n                <h3>Minimum</h3>\n                <p className=\"metric-value\">{data.metrics?.minimum?.toLocaleString() || 'N/A'}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )}\n\n    <div className=\"tooltip\" style={{ display: 'none' }}></div>\n  </div>\n);\n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}