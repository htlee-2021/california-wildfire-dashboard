{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import*as d3 from'd3';import{RadialBarChart}from'./RadialBarChart';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const EnhancedYearlyAnalysisDashboard=_ref=>{let{yearlyData,monthlyData,monthlyDataByYear,selectedYear,availableYears,summaryStats,onYearChange,onRefresh}=_ref;const monthlyAcresChartRef=useRef(null);const monthlyFiresChartRef=useRef(null);const[selectedMetric,setSelectedMetric]=useState('fires');// 'fires' or 'acres'\nuseEffect(()=>{if(monthlyData.length>0){createCharts();}},[monthlyData,selectedYear]);// Format large numbers\nconst formatLargeNumber=num=>{if(num>=1000000){return`${(num/1000000).toFixed(1)}M`;}else if(num>=1000){return`${(num/1000).toFixed(1)}K`;}return num;};// Get the data for the selected year\nconst getSelectedYearData=()=>{if(!yearlyData||yearlyData.length===0||!selectedYear)return null;return yearlyData.find(data=>data.year===selectedYear);};// Get monthly data\nconst getMonthByYearData=()=>{if(!monthlyData||monthlyData.length===0)return[];const months=['January','February','March','April','May','June','July','August','September','October','November','December'];// For each month, find the highest acre value from all available years\nconst data=[];months.forEach(month=>{const monthData=monthlyData.find(m=>m.month===month);data.push({month,acres:monthData?monthData.acres:0,fires:monthData?monthData.fires:0});});return data;};function getResponsiveWidth(svgElement){// Get the width of the container, not the SVG element itself\nconst containerWidth=svgElement.parentNode.clientWidth||svgElement.parentNode.getBoundingClientRect().width||window.innerWidth-60;// Return the container width with a little padding\nreturn containerWidth-40;// 20px padding on each side\n}const createCharts=()=>{createMonthlyAcresChart();createMonthlyFiresChart();};const createMonthlyAcresChart=()=>{const data=getMonthByYearData();if(data.length===0||!monthlyAcresChartRef.current)return;const margin={top:40,right:30,bottom:100,left:60};const svgElement=monthlyAcresChartRef.current;const width=getResponsiveWidth(svgElement);const height=400;const chartWidth=width-margin.left-margin.right;const chartHeight=height-margin.top-margin.bottom;// Clear any existing SVG\nd3.select(svgElement).selectAll('*').remove();// Create SVG\nconst svg=d3.select(svgElement).attr('width',width).attr('height',height).append('g').attr('transform',`translate(${margin.left},${margin.top})`);// Define scales\nconst xScale=d3.scaleBand().domain(data.map(d=>d.month)).range([0,chartWidth]).padding(0.2);const yScale=d3.scaleLinear().domain([0,d3.max(data,d=>d.acres)*1.1]).range([chartHeight,0]);// Create axes\nsvg.append('g').attr('transform',`translate(0,${chartHeight})`).call(d3.axisBottom(xScale)).selectAll('text').attr('transform','rotate(-45)').style('text-anchor','end').attr('dx','-.8em').attr('dy','.15em');svg.append('g').call(d3.axisLeft(yScale).tickFormat(d=>formatLargeNumber(d)));// Add grid lines\nsvg.append('g').attr('class','grid-lines').selectAll('line').data(yScale.ticks()).enter().append('line').attr('x1',0).attr('y1',d=>yScale(d)).attr('x2',chartWidth).attr('y2',d=>yScale(d)).attr('stroke','#e5e7eb').attr('stroke-dasharray','3,3');// Add bars\nsvg.selectAll('bars').data(data).enter().append('rect').attr('x',d=>xScale(d.month)).attr('y',d=>yScale(d.acres)).attr('width',xScale.bandwidth()).attr('height',d=>chartHeight-yScale(d.acres)).attr('fill','#DC2626').attr('rx',4).attr('ry',4);// Add labels for high values\nsvg.selectAll('value-labels').data(data.filter(d=>d.acres>10000))// Only label high values\n.enter().append('text').attr('x',d=>xScale(d.month)+xScale.bandwidth()/2).attr('y',d=>yScale(d.acres)-5).attr('text-anchor','middle').text(d=>formatLargeNumber(d.acres)).style('font-size','12px').style('fill','#6B7280');// Add title\nsvg.append('text').attr('x',chartWidth/2).attr('y',-10).attr('text-anchor','middle').style('font-size','16px').style('font-weight','bold').text(`Acres Burned by Month in ${selectedYear}`);// Create tooltip\nconst tooltip=d3.select('body').selectAll('.tooltip').data([null]).join('div').attr('class','tooltip').style('opacity',0);// Add hover effects\nsvg.selectAll('rect').on('mouseover',function(event,d){d3.select(this).transition().duration(200).attr('opacity',0.8);tooltip.transition().duration(200).style('opacity',0.9);tooltip.html(`\n          <strong>${d.month} ${selectedYear}</strong><br/>\n          Acres Burned: ${d.acres.toLocaleString()}<br/>\n          Fires: ${d.fires.toLocaleString()}<br/>\n          ${d.fires>0?`Acres per Fire: ${Math.round(d.acres/d.fires).toLocaleString()}`:''}\n        `).style('left',event.pageX+10+'px').style('top',event.pageY-28+'px');}).on('mouseout',function(){d3.select(this).transition().duration(200).attr('opacity',1);tooltip.transition().duration(500).style('opacity',0);});};const createMonthlyFiresChart=()=>{const data=getMonthByYearData();if(data.length===0||!monthlyFiresChartRef.current)return;const margin={top:40,right:30,bottom:100,left:60};const svgElement=monthlyFiresChartRef.current;const width=getResponsiveWidth(svgElement);const height=400;const chartWidth=width-margin.left-margin.right;const chartHeight=height-margin.top-margin.bottom;// Clear any existing SVG\nd3.select(svgElement).selectAll('*').remove();// Create SVG\nconst svg=d3.select(svgElement).attr('width',width).attr('height',height).append('g').attr('transform',`translate(${margin.left},${margin.top})`);// Define scales\nconst xScale=d3.scaleBand().domain(data.map(d=>d.month)).range([0,chartWidth]).padding(0.4);const yScale=d3.scaleLinear().domain([0,d3.max(data,d=>d.fires)*1.1]).range([chartHeight,0]);// Create axes\nsvg.append('g').attr('transform',`translate(0,${chartHeight})`).call(d3.axisBottom(xScale)).selectAll('text').attr('transform','rotate(-45)').style('text-anchor','end').attr('dx','-.8em').attr('dy','.15em');svg.append('g').call(d3.axisLeft(yScale));// Add grid lines\nsvg.append('g').attr('class','grid-lines').selectAll('line').data(yScale.ticks()).enter().append('line').attr('x1',0).attr('y1',d=>yScale(d)).attr('x2',chartWidth).attr('y2',d=>yScale(d)).attr('stroke','#e5e7eb').attr('stroke-dasharray','3,3');// Create line generator\nconst lineGenerator=d3.line().x(d=>xScale(d.month)+xScale.bandwidth()/2).y(d=>yScale(d.fires));// Add the line\nsvg.append('path').datum(data).attr('fill','none').attr('stroke','#3B82F6').attr('stroke-width',3).attr('d',lineGenerator);// Add dots\nsvg.selectAll('dots').data(data).enter().append('circle').attr('cx',d=>xScale(d.month)+xScale.bandwidth()/2).attr('cy',d=>yScale(d.fires)).attr('r',5).attr('fill','#3B82F6');// Add title\nsvg.append('text').attr('x',chartWidth/2).attr('y',-10).attr('text-anchor','middle').style('font-size','16px').style('font-weight','bold').text(`Fire Counts by Month in ${selectedYear}`);// Create tooltip\nconst tooltip=d3.select('body').selectAll('.tooltip').data([null]).join('div').attr('class','tooltip').style('opacity',0);// Add hover effects\nsvg.selectAll('circle').on('mouseover',function(event,d){d3.select(this).transition().duration(200).attr('r',7);tooltip.transition().duration(200).style('opacity',0.9);tooltip.html(`\n          <strong>${d.month} ${selectedYear}</strong><br/>\n          Fires: ${d.fires.toLocaleString()}<br/>\n          Acres Burned: ${d.acres.toLocaleString()}<br/>\n          ${d.fires>0?`Acres per Fire: ${Math.round(d.acres/d.fires).toLocaleString()}`:''}\n        `).style('left',event.pageX+10+'px').style('top',event.pageY-28+'px');}).on('mouseout',function(){d3.select(this).transition().duration(200).attr('r',5);tooltip.transition().duration(500).style('opacity',0);});};const selectedYearData=getSelectedYearData();return/*#__PURE__*/_jsxs(\"div\",{className:\"yearly-analysis-dashboard\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-header\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"dashboard-title\",children:\"Yearly Fire Analysis Dashboard\"}),/*#__PURE__*/_jsx(\"p\",{className:\"dashboard-description\",children:\"Detailed analysis of wildfire data for a specific year, showing monthly patterns and multi-year seasonal trends\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"year-selection-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"year-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"year-select\",className:\"year-selector-label\",children:\"Select Year for Analysis:\"}),/*#__PURE__*/_jsx(\"select\",{id:\"year-select\",className:\"year-selector-dropdown\",value:selectedYear||'',onChange:e=>onYearChange(e.target.value),disabled:availableYears.length===0,children:availableYears.map(year=>/*#__PURE__*/_jsx(\"option\",{value:year,children:year},year))})]}),selectedYearData&&/*#__PURE__*/_jsxs(\"div\",{className:\"year-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"year-summary-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"summary-label\",children:\"Fires:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"summary-value\",children:selectedYearData.fires.toLocaleString()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"year-summary-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"summary-label\",children:\"Acres Burned:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"summary-value\",children:selectedYearData.acres.toLocaleString()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"year-summary-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"summary-label\",children:\"Peak Month:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"summary-value\",children:summaryStats.peakMonth||'N/A'})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"metric-toggle-container\",style:{display:'flex',justifyContent:'center',alignItems:'center',width:'100%',margin:'0 auto',padding:'15px 0',marginBottom:'20px'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"metric-toggle-wrapper\",style:{display:'flex',borderRadius:'8px',overflow:'hidden',border:'1px solid #d1d5db',boxShadow:'0 1px 2px rgba(0, 0, 0, 0.05)'},children:[/*#__PURE__*/_jsx(\"button\",{className:`metric-toggle-button ${selectedMetric==='fires'?'active':''}`,style:{display:'flex',justifyContent:'center',alignItems:'center',border:'none',outline:'none',background:selectedMetric==='fires'?'#3b82f6':'#f9fafb',color:selectedMetric==='fires'?'white':'#4b5563',fontWeight:selectedMetric==='fires'?'bold':'normal',cursor:'pointer',padding:'10px 20px',minWidth:'120px',height:'40px',textAlign:'center',transition:'all 0.2s ease'},onClick:()=>setSelectedMetric('fires'),children:\"Fire Counts\"}),/*#__PURE__*/_jsx(\"button\",{className:`metric-toggle-button ${selectedMetric==='acres'?'active':''}`,style:{display:'flex',justifyContent:'center',alignItems:'center',border:'none',outline:'none',background:selectedMetric==='acres'?'#3b82f6':'#f9fafb',color:selectedMetric==='acres'?'white':'#4b5563',fontWeight:selectedMetric==='acres'?'bold':'normal',cursor:'pointer',padding:'10px 20px',minWidth:'120px',height:'40px',textAlign:'center',transition:'all 0.2s ease'},onClick:()=>setSelectedMetric('acres'),children:\"Acres Burned\"})]})}),/*#__PURE__*/_jsx(RadialBarChart,{yearlyData:yearlyData,monthlyDataByYear:monthlyDataByYear,availableYears:availableYears,selectedMetric:selectedMetric})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"section-title\",children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"section-icon\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm9 4a1 1 0 10-2 0v6a1 1 0 102 0V7zm-3 2a1 1 0 10-2 0v4a1 1 0 102 0V9zm-3 3a1 1 0 10-2 0v1a1 1 0 102 0v-1z\",clipRule:\"evenodd\"})}),\"Monthly Acres Burned in \",selectedYear||'...']}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-description\",children:\"Shows acres burned by month for the selected year, highlighting peak fire season.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-canvas\",children:/*#__PURE__*/_jsx(\"svg\",{ref:monthlyAcresChartRef,width:\"100%\",height:\"400\"})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"section-title\",children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"section-icon\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z\",clipRule:\"evenodd\"})}),\"Fire Counts by Month in \",selectedYear||'...']}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-description\",children:\"Shows the number of fires recorded each month for the selected year.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-canvas\",children:/*#__PURE__*/_jsx(\"svg\",{ref:monthlyFiresChartRef,width:\"100%\",height:\"400\"})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"monthly-data-table-container\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"section-title\",children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"section-icon\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M5 4a3 3 0 00-3 3v6a3 3 0 003 3h10a3 3 0 003-3V7a3 3 0 00-3-3H5zm-1 9v-1h5v2H5a1 1 0 01-1-1zm7 1h4a1 1 0 001-1v-1h-5v2zm0-4h5V8h-5v2zM9 8H4v2h5V8z\",clipRule:\"evenodd\"})}),\"Monthly Breakdown for \",selectedYear||'...']}),/*#__PURE__*/_jsx(\"div\",{className:\"data-table\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"monthly-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Month\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Fires\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Acres Burned\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Acres per Fire\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:getMonthByYearData().map(monthData=>/*#__PURE__*/_jsxs(\"tr\",{className:monthData.month===summaryStats.peakMonth?'peak-month':'',children:[/*#__PURE__*/_jsx(\"td\",{children:monthData.month}),/*#__PURE__*/_jsx(\"td\",{children:monthData.fires.toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{children:monthData.acres.toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{children:monthData.fires>0?Math.round(monthData.acres/monthData.fires).toLocaleString():'N/A'})]},monthData.month))}),/*#__PURE__*/_jsx(\"tfoot\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Total\"}),/*#__PURE__*/_jsx(\"th\",{children:selectedYearData?selectedYearData.fires.toLocaleString():0}),/*#__PURE__*/_jsx(\"th\",{children:selectedYearData?selectedYearData.acres.toLocaleString():0}),/*#__PURE__*/_jsx(\"th\",{children:selectedYearData&&selectedYearData.fires>0?Math.round(selectedYearData.acres/selectedYearData.fires).toLocaleString():'N/A'})]})})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"data-source-container\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"data-source-title\",children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"data-source-icon\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\",clipRule:\"evenodd\"})}),\"Data Source Information\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"data-source-content\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"This visualization shows detailed monthly data for the selected year from the California wildfire records. The dashboard includes data through 2025, with the monthly breakdown helping to identify fire patterns throughout the year and peak fire season.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"The radial chart at the top shows seasonal patterns across multiple years, making it easy to identify recurring patterns and anomalies.\"}),/*#__PURE__*/_jsx(\"p\",{className:\"data-source-note\",children:\"Return to the \\\"Dashboard Overview\\\" tab to see trends across multiple years.\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"refresh-button-container\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"refresh-button\",onClick:onRefresh,children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"refresh-icon\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\",clipRule:\"evenodd\"})}),\"Refresh Data\"]})})]});};","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","RadialBarChart","jsx","_jsx","jsxs","_jsxs","EnhancedYearlyAnalysisDashboard","_ref","yearlyData","monthlyData","monthlyDataByYear","selectedYear","availableYears","summaryStats","onYearChange","onRefresh","monthlyAcresChartRef","monthlyFiresChartRef","selectedMetric","setSelectedMetric","length","createCharts","formatLargeNumber","num","toFixed","getSelectedYearData","find","data","year","getMonthByYearData","months","forEach","month","monthData","m","push","acres","fires","getResponsiveWidth","svgElement","containerWidth","parentNode","clientWidth","getBoundingClientRect","width","window","innerWidth","createMonthlyAcresChart","createMonthlyFiresChart","current","margin","top","right","bottom","left","height","chartWidth","chartHeight","select","selectAll","remove","svg","attr","append","xScale","scaleBand","domain","map","d","range","padding","yScale","scaleLinear","max","call","axisBottom","style","axisLeft","tickFormat","ticks","enter","bandwidth","filter","text","tooltip","join","on","event","transition","duration","html","toLocaleString","Math","round","pageX","pageY","lineGenerator","line","x","y","datum","selectedYearData","className","children","htmlFor","id","value","onChange","e","target","disabled","peakMonth","display","justifyContent","alignItems","marginBottom","borderRadius","overflow","border","boxShadow","outline","background","color","fontWeight","cursor","minWidth","textAlign","onClick","xmlns","viewBox","fill","fillRule","clipRule","ref"],"sources":["/Users/hongtenglee/Documents/geoviz-dashboard -frontend/california-wildfire-dashboard/client/src/components/YearlyAnalysisDashboard.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { RadialBarChart } from './RadialBarChart';\n\nexport const EnhancedYearlyAnalysisDashboard = ({\n  yearlyData,\n  monthlyData,\n  monthlyDataByYear,\n  selectedYear,\n  availableYears,\n  summaryStats,\n  onYearChange,\n  onRefresh\n}) => {\n  const monthlyAcresChartRef = useRef(null);\n  const monthlyFiresChartRef = useRef(null);\n  const [selectedMetric, setSelectedMetric] = useState('fires'); // 'fires' or 'acres'\n\n  useEffect(() => {\n    if (monthlyData.length > 0) {\n      createCharts();\n    }\n  }, [monthlyData, selectedYear]);\n\n  // Format large numbers\n  const formatLargeNumber = (num) => {\n    if (num >= 1000000) {\n      return `${(num / 1000000).toFixed(1)}M`;\n    } else if (num >= 1000) {\n      return `${(num / 1000).toFixed(1)}K`;\n    }\n    return num;\n  };\n\n  // Get the data for the selected year\n  const getSelectedYearData = () => {\n    if (!yearlyData || yearlyData.length === 0 || !selectedYear) return null;\n    return yearlyData.find(data => data.year === selectedYear);\n  };\n\n  // Get monthly data\n  const getMonthByYearData = () => {\n    if (!monthlyData || monthlyData.length === 0) return [];\n\n    const months = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n\n    // For each month, find the highest acre value from all available years\n    const data = [];\n\n    months.forEach((month) => {\n      const monthData = monthlyData.find(m => m.month === month);\n      data.push({\n        month,\n        acres: monthData ? monthData.acres : 0,\n        fires: monthData ? monthData.fires : 0\n      });\n    });\n\n    return data;\n  };\n\n  function getResponsiveWidth(svgElement) {\n    // Get the width of the container, not the SVG element itself\n    const containerWidth = svgElement.parentNode.clientWidth ||\n      svgElement.parentNode.getBoundingClientRect().width ||\n      window.innerWidth - 60;\n\n    // Return the container width with a little padding\n    return containerWidth - 40; // 20px padding on each side\n  }\n\n  const createCharts = () => {\n    createMonthlyAcresChart();\n    createMonthlyFiresChart();\n  };\n\n  const createMonthlyAcresChart = () => {\n    const data = getMonthByYearData();\n    if (data.length === 0 || !monthlyAcresChartRef.current) return;\n\n    const margin = { top: 40, right: 30, bottom: 100, left: 60 };\n    const svgElement = monthlyAcresChartRef.current;\n    const width = getResponsiveWidth(svgElement);\n    const height = 400;\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n\n    // Clear any existing SVG\n    d3.select(svgElement).selectAll('*').remove();\n\n    // Create SVG\n    const svg = d3.select(svgElement)\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Define scales\n    const xScale = d3.scaleBand()\n      .domain(data.map(d => d.month))\n      .range([0, chartWidth])\n      .padding(0.2);\n\n    const yScale = d3.scaleLinear()\n      .domain([0, d3.max(data, d => d.acres) * 1.1])\n      .range([chartHeight, 0]);\n\n    // Create axes\n    svg.append('g')\n      .attr('transform', `translate(0,${chartHeight})`)\n      .call(d3.axisBottom(xScale))\n      .selectAll('text')\n      .attr('transform', 'rotate(-45)')\n      .style('text-anchor', 'end')\n      .attr('dx', '-.8em')\n      .attr('dy', '.15em');\n\n    svg.append('g')\n      .call(d3.axisLeft(yScale).tickFormat(d => formatLargeNumber(d)));\n\n    // Add grid lines\n    svg.append('g')\n      .attr('class', 'grid-lines')\n      .selectAll('line')\n      .data(yScale.ticks())\n      .enter()\n      .append('line')\n      .attr('x1', 0)\n      .attr('y1', d => yScale(d))\n      .attr('x2', chartWidth)\n      .attr('y2', d => yScale(d))\n      .attr('stroke', '#e5e7eb')\n      .attr('stroke-dasharray', '3,3');\n\n    // Add bars\n    svg.selectAll('bars')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('x', d => xScale(d.month))\n      .attr('y', d => yScale(d.acres))\n      .attr('width', xScale.bandwidth())\n      .attr('height', d => chartHeight - yScale(d.acres))\n      .attr('fill', '#DC2626')\n      .attr('rx', 4)\n      .attr('ry', 4);\n\n    // Add labels for high values\n    svg.selectAll('value-labels')\n      .data(data.filter(d => d.acres > 10000)) // Only label high values\n      .enter()\n      .append('text')\n      .attr('x', d => xScale(d.month) + xScale.bandwidth() / 2)\n      .attr('y', d => yScale(d.acres) - 5)\n      .attr('text-anchor', 'middle')\n      .text(d => formatLargeNumber(d.acres))\n      .style('font-size', '12px')\n      .style('fill', '#6B7280');\n\n    // Add title\n    svg.append('text')\n      .attr('x', chartWidth / 2)\n      .attr('y', -10)\n      .attr('text-anchor', 'middle')\n      .style('font-size', '16px')\n      .style('font-weight', 'bold')\n      .text(`Acres Burned by Month in ${selectedYear}`);\n\n    // Create tooltip\n    const tooltip = d3.select('body')\n      .selectAll('.tooltip')\n      .data([null])\n      .join('div')\n      .attr('class', 'tooltip')\n      .style('opacity', 0);\n\n    // Add hover effects\n    svg.selectAll('rect')\n      .on('mouseover', function (event, d) {\n        d3.select(this)\n          .transition()\n          .duration(200)\n          .attr('opacity', 0.8);\n\n        tooltip.transition()\n          .duration(200)\n          .style('opacity', 0.9);\n\n        tooltip.html(`\n          <strong>${d.month} ${selectedYear}</strong><br/>\n          Acres Burned: ${d.acres.toLocaleString()}<br/>\n          Fires: ${d.fires.toLocaleString()}<br/>\n          ${d.fires > 0 ? `Acres per Fire: ${Math.round(d.acres / d.fires).toLocaleString()}` : ''}\n        `)\n          .style('left', (event.pageX + 10) + 'px')\n          .style('top', (event.pageY - 28) + 'px');\n      })\n      .on('mouseout', function () {\n        d3.select(this)\n          .transition()\n          .duration(200)\n          .attr('opacity', 1);\n\n        tooltip.transition()\n          .duration(500)\n          .style('opacity', 0);\n      });\n  };\n\n  const createMonthlyFiresChart = () => {\n    const data = getMonthByYearData();\n    if (data.length === 0 || !monthlyFiresChartRef.current) return;\n\n    const margin = { top: 40, right: 30, bottom: 100, left: 60 };\n    const svgElement = monthlyFiresChartRef.current;\n    const width = getResponsiveWidth(svgElement);\n    const height = 400;\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n\n    // Clear any existing SVG\n    d3.select(svgElement).selectAll('*').remove();\n\n    // Create SVG\n    const svg = d3.select(svgElement)\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Define scales\n    const xScale = d3.scaleBand()\n      .domain(data.map(d => d.month))\n      .range([0, chartWidth])\n      .padding(0.4);\n\n    const yScale = d3.scaleLinear()\n      .domain([0, d3.max(data, d => d.fires) * 1.1])\n      .range([chartHeight, 0]);\n\n    // Create axes\n    svg.append('g')\n      .attr('transform', `translate(0,${chartHeight})`)\n      .call(d3.axisBottom(xScale))\n      .selectAll('text')\n      .attr('transform', 'rotate(-45)')\n      .style('text-anchor', 'end')\n      .attr('dx', '-.8em')\n      .attr('dy', '.15em');\n\n    svg.append('g')\n      .call(d3.axisLeft(yScale));\n\n    // Add grid lines\n    svg.append('g')\n      .attr('class', 'grid-lines')\n      .selectAll('line')\n      .data(yScale.ticks())\n      .enter()\n      .append('line')\n      .attr('x1', 0)\n      .attr('y1', d => yScale(d))\n      .attr('x2', chartWidth)\n      .attr('y2', d => yScale(d))\n      .attr('stroke', '#e5e7eb')\n      .attr('stroke-dasharray', '3,3');\n\n    // Create line generator\n    const lineGenerator = d3.line()\n      .x(d => xScale(d.month) + xScale.bandwidth() / 2)\n      .y(d => yScale(d.fires));\n\n    // Add the line\n    svg.append('path')\n      .datum(data)\n      .attr('fill', 'none')\n      .attr('stroke', '#3B82F6')\n      .attr('stroke-width', 3)\n      .attr('d', lineGenerator);\n\n    // Add dots\n    svg.selectAll('dots')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('cx', d => xScale(d.month) + xScale.bandwidth() / 2)\n      .attr('cy', d => yScale(d.fires))\n      .attr('r', 5)\n      .attr('fill', '#3B82F6');\n\n    // Add title\n    svg.append('text')\n      .attr('x', chartWidth / 2)\n      .attr('y', -10)\n      .attr('text-anchor', 'middle')\n      .style('font-size', '16px')\n      .style('font-weight', 'bold')\n      .text(`Fire Counts by Month in ${selectedYear}`);\n\n    // Create tooltip\n    const tooltip = d3.select('body')\n      .selectAll('.tooltip')\n      .data([null])\n      .join('div')\n      .attr('class', 'tooltip')\n      .style('opacity', 0);\n\n    // Add hover effects\n    svg.selectAll('circle')\n      .on('mouseover', function (event, d) {\n        d3.select(this)\n          .transition()\n          .duration(200)\n          .attr('r', 7);\n\n        tooltip.transition()\n          .duration(200)\n          .style('opacity', 0.9);\n\n        tooltip.html(`\n          <strong>${d.month} ${selectedYear}</strong><br/>\n          Fires: ${d.fires.toLocaleString()}<br/>\n          Acres Burned: ${d.acres.toLocaleString()}<br/>\n          ${d.fires > 0 ? `Acres per Fire: ${Math.round(d.acres / d.fires).toLocaleString()}` : ''}\n        `)\n          .style('left', (event.pageX + 10) + 'px')\n          .style('top', (event.pageY - 28) + 'px');\n      })\n      .on('mouseout', function () {\n        d3.select(this)\n          .transition()\n          .duration(200)\n          .attr('r', 5);\n\n        tooltip.transition()\n          .duration(500)\n          .style('opacity', 0);\n      });\n  };\n\n  const selectedYearData = getSelectedYearData();\n\n  return (\n    <div className=\"yearly-analysis-dashboard\">\n      <div className=\"dashboard-header\">\n        <h2 className=\"dashboard-title\">Yearly Fire Analysis Dashboard</h2>\n        <p className=\"dashboard-description\">\n          Detailed analysis of wildfire data for a specific year, showing monthly patterns and multi-year seasonal trends\n        </p>\n      </div>\n\n      {/* Year selector and summary */}\n      <div className=\"year-selection-container\">\n        <div className=\"year-selector\">\n          <label htmlFor=\"year-select\" className=\"year-selector-label\">Select Year for Analysis:</label>\n          <select\n            id=\"year-select\"\n            className=\"year-selector-dropdown\"\n            value={selectedYear || ''}\n            onChange={(e) => onYearChange(e.target.value)}\n            disabled={availableYears.length === 0}\n          >\n            {availableYears.map(year => (\n              <option key={year} value={year}>\n                {year}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {selectedYearData && (\n          <div className=\"year-summary\">\n            <div className=\"year-summary-item\">\n              <div className=\"summary-label\">Fires:</div>\n              <div className=\"summary-value\">{selectedYearData.fires.toLocaleString()}</div>\n            </div>\n            <div className=\"year-summary-item\">\n              <div className=\"summary-label\">Acres Burned:</div>\n              <div className=\"summary-value\">{selectedYearData.acres.toLocaleString()}</div>\n            </div>\n            <div className=\"year-summary-item\">\n              <div className=\"summary-label\">Peak Month:</div>\n              <div className=\"summary-value\">{summaryStats.peakMonth || 'N/A'}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* NEW: Radial Chart for multi-year view */}\n      <div className=\"chart-section\">\n        <div className=\"chart-container\">\n          <div className=\"metric-toggle-container\" style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '100%',\n            margin: '0 auto',\n            padding: '15px 0',\n            marginBottom: '20px'\n          }}>\n            <div className=\"metric-toggle-wrapper\" style={{\n              display: 'flex',\n              borderRadius: '8px',\n              overflow: 'hidden',\n              border: '1px solid #d1d5db',\n              boxShadow: '0 1px 2px rgba(0, 0, 0, 0.05)'\n            }}>\n              <button\n                className={`metric-toggle-button ${selectedMetric === 'fires' ? 'active' : ''}`}\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  border: 'none',\n                  outline: 'none',\n                  background: selectedMetric === 'fires' ? '#3b82f6' : '#f9fafb',\n                  color: selectedMetric === 'fires' ? 'white' : '#4b5563',\n                  fontWeight: selectedMetric === 'fires' ? 'bold' : 'normal',\n                  cursor: 'pointer',\n                  padding: '10px 20px',\n                  minWidth: '120px',\n                  height: '40px',\n                  textAlign: 'center',\n                  transition: 'all 0.2s ease'\n                }}\n                onClick={() => setSelectedMetric('fires')}\n              >\n                Fire Counts\n              </button>\n              <button\n                className={`metric-toggle-button ${selectedMetric === 'acres' ? 'active' : ''}`}\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  border: 'none',\n                  outline: 'none',\n                  background: selectedMetric === 'acres' ? '#3b82f6' : '#f9fafb',\n                  color: selectedMetric === 'acres' ? 'white' : '#4b5563',\n                  fontWeight: selectedMetric === 'acres' ? 'bold' : 'normal',\n                  cursor: 'pointer',\n                  padding: '10px 20px',\n                  minWidth: '120px',\n                  height: '40px',\n                  textAlign: 'center',\n                  transition: 'all 0.2s ease'\n                }}\n                onClick={() => setSelectedMetric('acres')}\n              >\n                Acres Burned\n              </button>\n            </div>\n          </div>\n\n          {/* Render the RadialFireChart component */}\n          <RadialBarChart\n            yearlyData={yearlyData}\n            monthlyDataByYear={monthlyDataByYear}\n            availableYears={availableYears}\n            selectedMetric={selectedMetric}\n          />\n        </div>\n      </div>\n\n      {/* Main content area with monthly visualization */}\n      <div className=\"chart-section\">\n        <div className=\"chart-container\">\n          <h3 className=\"section-title\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm9 4a1 1 0 10-2 0v6a1 1 0 102 0V7zm-3 2a1 1 0 10-2 0v4a1 1 0 102 0V9zm-3 3a1 1 0 10-2 0v1a1 1 0 102 0v-1z\" clipRule=\"evenodd\" />\n            </svg>\n            Monthly Acres Burned in {selectedYear || '...'}\n          </h3>\n          <div className=\"chart-description\">\n            Shows acres burned by month for the selected year, highlighting peak fire season.\n          </div>\n          <div className=\"chart-canvas\">\n            <svg ref={monthlyAcresChartRef} width=\"100%\" height=\"400\"></svg>\n          </div>\n        </div>\n      </div>\n\n      {/* Second visualization */}\n      <div className=\"chart-section\">\n        <div className=\"chart-container\">\n          <h3 className=\"section-title\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z\" clipRule=\"evenodd\" />\n            </svg>\n            Fire Counts by Month in {selectedYear || '...'}\n          </h3>\n          <div className=\"chart-description\">\n            Shows the number of fires recorded each month for the selected year.\n          </div>\n          <div className=\"chart-canvas\">\n            <svg ref={monthlyFiresChartRef} width=\"100%\" height=\"400\"></svg>\n          </div>\n        </div>\n      </div>\n\n      {/* Monthly data table */}\n      <div className=\"monthly-data-table-container\">\n        <h3 className=\"section-title\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M5 4a3 3 0 00-3 3v6a3 3 0 003 3h10a3 3 0 003-3V7a3 3 0 00-3-3H5zm-1 9v-1h5v2H5a1 1 0 01-1-1zm7 1h4a1 1 0 001-1v-1h-5v2zm0-4h5V8h-5v2zM9 8H4v2h5V8z\" clipRule=\"evenodd\" />\n          </svg>\n          Monthly Breakdown for {selectedYear || '...'}\n        </h3>\n        <div className=\"data-table\">\n          <table className=\"monthly-table\">\n            <thead>\n              <tr>\n                <th>Month</th>\n                <th>Fires</th>\n                <th>Acres Burned</th>\n                <th>Acres per Fire</th>\n              </tr>\n            </thead>\n            <tbody>\n              {getMonthByYearData().map((monthData) => (\n                <tr key={monthData.month} className={monthData.month === summaryStats.peakMonth ? 'peak-month' : ''}>\n                  <td>{monthData.month}</td>\n                  <td>{monthData.fires.toLocaleString()}</td>\n                  <td>{monthData.acres.toLocaleString()}</td>\n                  <td>{monthData.fires > 0 ? Math.round(monthData.acres / monthData.fires).toLocaleString() : 'N/A'}</td>\n                </tr>\n              ))}\n            </tbody>\n            <tfoot>\n              <tr>\n                <th>Total</th>\n                <th>{selectedYearData ? selectedYearData.fires.toLocaleString() : 0}</th>\n                <th>{selectedYearData ? selectedYearData.acres.toLocaleString() : 0}</th>\n                <th>\n                  {selectedYearData && selectedYearData.fires > 0\n                    ? Math.round(selectedYearData.acres / selectedYearData.fires).toLocaleString()\n                    : 'N/A'}\n                </th>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n      </div>\n\n      {/* Data Source Info */}\n      <div className=\"data-source-container\">\n        <h3 className=\"data-source-title\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"data-source-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n          </svg>\n          Data Source Information\n        </h3>\n        <div className=\"data-source-content\">\n          <p>\n            This visualization shows detailed monthly data for the selected year from the California wildfire records.\n            The dashboard includes data through 2025, with the monthly breakdown helping to identify fire patterns throughout the year and peak fire season.\n          </p>\n          <p>\n            The radial chart at the top shows seasonal patterns across multiple years, making it easy to identify recurring patterns and anomalies.\n          </p>\n          <p className=\"data-source-note\">\n            Return to the \"Dashboard Overview\" tab to see trends across multiple years.\n          </p>\n        </div>\n      </div>\n\n      <div className=\"refresh-button-container\">\n        <button className=\"refresh-button\" onClick={onRefresh}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"refresh-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\" clipRule=\"evenodd\" />\n          </svg>\n          Refresh Data\n        </button>\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}