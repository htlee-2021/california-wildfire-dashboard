{"ast":null,"code":"var _jsxFileName = \"/Users/hongtenglee/Documents/geoviz-dashboard/client/src/components/YearlyAnalysisDashboard.jsx\";\nimport React from 'react';\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, ScatterChart, Scatter, ZAxis } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YearlyAnalysisDashboard = ({\n  yearlyData,\n  monthlyData,\n  selectedYear,\n  availableYears,\n  summaryStats,\n  onYearChange,\n  onRefresh\n}) => {\n  // Format large numbers\n  const formatLargeNumber = num => {\n    if (num >= 1000000) {\n      return `${(num / 1000000).toFixed(1)}M`;\n    } else if (num >= 1000) {\n      return `${(num / 1000).toFixed(1)}K`;\n    }\n    return num;\n  };\n\n  // Get the data for the selected year\n  const getSelectedYearData = () => {\n    if (!yearlyData || yearlyData.length === 0 || !selectedYear) return null;\n    return yearlyData.find(data => data.year === selectedYear);\n  };\n  const selectedYearData = getSelectedYearData();\n\n  // Create a month vs year heatmap-like visualization\n  // Prepare data for the month-by-year heatmap visualization\n  const getMonthByYearData = () => {\n    if (!yearlyData || yearlyData.length === 0) return [];\n\n    // We need to request monthly data for each year to build this\n    // For now, we'll use a placeholder structure\n\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    // For each month, find the highest acre value from all available years\n    const data = [];\n\n    // If we have monthly data for the selected year, use it\n    if (monthlyData && monthlyData.length > 0) {\n      months.forEach((month, index) => {\n        const monthData = monthlyData.find(m => m.month === month);\n        data.push({\n          month,\n          acres: monthData ? monthData.acres : 0,\n          fires: monthData ? monthData.fires : 0\n        });\n      });\n    }\n    return data;\n  };\n  const handleYearChange = e => {\n    onYearChange(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"yearly-analysis-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"dashboard-title\",\n        children: \"Yearly Fire Analysis Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"dashboard-description\",\n        children: \"Detailed analysis of wildfire data for a specific year, showing monthly patterns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year-selection-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"year-select\",\n          className: \"year-selector-label\",\n          children: \"Select Year for Analysis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"year-select\",\n          value: selectedYear || '',\n          onChange: handleYearChange,\n          className: \"year-selector-dropdown\",\n          disabled: availableYears.length === 0,\n          children: availableYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), selectedYearData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-label\",\n            children: \"Fires:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-value\",\n            children: selectedYearData.fires.toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-label\",\n            children: \"Acres Burned:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-value\",\n            children: selectedYearData.acres.toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-label\",\n            children: \"Peak Month:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-value\",\n            children: summaryStats.peakMonth || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"section-icon\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm9 4a1 1 0 10-2 0v6a1 1 0 102 0V7zm-3 2a1 1 0 10-2 0v4a1 1 0 102 0V9zm-3 3a1 1 0 10-2 0v1a1 1 0 102 0v-1z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), \"Monthly Acres Burned in \", selectedYear || '...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-description\",\n          children: \"Shows acres burned by month for the selected year, highlighting peak fire season.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-canvas\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 400,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: getMonthByYearData(),\n              margin: {\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 60\n              },\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\",\n                vertical: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"month\",\n                tick: {\n                  fontSize: 12\n                },\n                tickLine: false,\n                interval: 0,\n                angle: -45,\n                textAnchor: \"end\",\n                height: 60\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                tick: {\n                  fontSize: 12\n                },\n                tickLine: false,\n                tickFormatter: formatLargeNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                formatter: value => [new Intl.NumberFormat().format(value), 'Acres Burned'],\n                labelFormatter: label => `Month: ${label}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                verticalAlign: \"top\",\n                height: 36\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"acres\",\n                fill: \"#DC2626\",\n                name: \"Acres Burned\",\n                barSize: 30,\n                radius: [4, 4, 0, 0],\n                label: {\n                  position: 'top',\n                  formatter: value => value > 10000 ? formatLargeNumber(value) : '',\n                  fontSize: 12,\n                  fill: '#6B7280'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"section-icon\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), \"Fire Counts by Month in \", selectedYear || '...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-description\",\n          children: \"Shows the number of fires recorded each month for the selected year.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-canvas\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 400,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: getMonthByYearData(),\n              margin: {\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 60\n              },\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\",\n                vertical: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"month\",\n                tick: {\n                  fontSize: 12\n                },\n                tickLine: false,\n                interval: 0,\n                angle: -45,\n                textAnchor: \"end\",\n                height: 60\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                tick: {\n                  fontSize: 12\n                },\n                tickLine: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                formatter: value => [value, 'Number of Fires'],\n                labelFormatter: label => `Month: ${label}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                verticalAlign: \"top\",\n                height: 36\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"fires\",\n                stroke: \"#3B82F6\",\n                strokeWidth: 3,\n                dot: {\n                  fill: '#3B82F6',\n                  r: 5\n                },\n                activeDot: {\n                  r: 7\n                },\n                name: \"Fire Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monthly-data-table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"section-icon\",\n          viewBox: \"0 0 20 20\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M5 4a3 3 0 00-3 3v6a3 3 0 003 3h10a3 3 0 003-3V7a3 3 0 00-3-3H5zm-1 9v-1h5v2H5a1 1 0 01-1-1zm7 1h4a1 1 0 001-1v-1h-5v2zm0-4h5V8h-5v2zM9 8H4v2h5V8z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), \"Monthly Breakdown for \", selectedYear || '...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"monthly-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Fires\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Acres Burned\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Acres per Fire\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: getMonthByYearData().map((monthData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: monthData.month === summaryStats.peakMonth ? 'peak-month' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthData.month\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthData.fires.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthData.acres.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthData.fires > 0 ? Math.round(monthData.acres / monthData.fires).toLocaleString() : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: selectedYearData ? selectedYearData.fires.toLocaleString() : 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: selectedYearData ? selectedYearData.acres.toLocaleString() : 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: selectedYearData && selectedYearData.fires > 0 ? Math.round(selectedYearData.acres / selectedYearData.fires).toLocaleString() : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-source-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"data-source-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"data-source-icon\",\n          viewBox: \"0 0 20 20\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), \"Data Source Information\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-source-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This visualization shows detailed monthly data for the selected year from the firep23_1.geojson file. The monthly breakdown helps identify fire patterns throughout the year and peak fire season.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"data-source-note\",\n          children: \"Return to the \\\"Dashboard Overview\\\" tab to see trends across multiple years.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"refresh-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onRefresh,\n        className: \"refresh-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"refresh-icon\",\n          viewBox: \"0 0 20 20\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), \"Refresh Data\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_c = YearlyAnalysisDashboard;\nexport default YearlyAnalysisDashboard;\nvar _c;\n$RefreshReg$(_c, \"YearlyAnalysisDashboard\");","map":{"version":3,"names":["React","BarChart","Bar","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","ScatterChart","Scatter","ZAxis","jsxDEV","_jsxDEV","YearlyAnalysisDashboard","yearlyData","monthlyData","selectedYear","availableYears","summaryStats","onYearChange","onRefresh","formatLargeNumber","num","toFixed","getSelectedYearData","length","find","data","year","selectedYearData","getMonthByYearData","months","forEach","month","index","monthData","m","push","acres","fires","handleYearChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","disabled","map","toLocaleString","peakMonth","xmlns","viewBox","fill","fillRule","d","clipRule","width","height","margin","top","right","left","bottom","strokeDasharray","vertical","dataKey","tick","fontSize","tickLine","interval","angle","textAnchor","tickFormatter","formatter","Intl","NumberFormat","format","labelFormatter","label","verticalAlign","name","barSize","radius","position","type","stroke","strokeWidth","dot","r","activeDot","Math","round","onClick","_c","$RefreshReg$"],"sources":["/Users/hongtenglee/Documents/geoviz-dashboard/client/src/components/YearlyAnalysisDashboard.jsx"],"sourcesContent":["import React from 'react';\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, ScatterChart, Scatter, ZAxis } from 'recharts';\n\nconst YearlyAnalysisDashboard = ({ \n  yearlyData, \n  monthlyData, \n  selectedYear, \n  availableYears, \n  summaryStats, \n  onYearChange,\n  onRefresh\n}) => {\n  // Format large numbers\n  const formatLargeNumber = (num) => {\n    if (num >= 1000000) {\n      return `${(num / 1000000).toFixed(1)}M`;\n    } else if (num >= 1000) {\n      return `${(num / 1000).toFixed(1)}K`;\n    }\n    return num;\n  };\n\n  // Get the data for the selected year\n  const getSelectedYearData = () => {\n    if (!yearlyData || yearlyData.length === 0 || !selectedYear) return null;\n    return yearlyData.find(data => data.year === selectedYear);\n  };\n\n  const selectedYearData = getSelectedYearData();\n\n  // Create a month vs year heatmap-like visualization\n  // Prepare data for the month-by-year heatmap visualization\n  const getMonthByYearData = () => {\n    if (!yearlyData || yearlyData.length === 0) return [];\n    \n    // We need to request monthly data for each year to build this\n    // For now, we'll use a placeholder structure\n    \n    const months = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n    \n    // For each month, find the highest acre value from all available years\n    const data = [];\n    \n    // If we have monthly data for the selected year, use it\n    if (monthlyData && monthlyData.length > 0) {\n      months.forEach((month, index) => {\n        const monthData = monthlyData.find(m => m.month === month);\n        data.push({\n          month,\n          acres: monthData ? monthData.acres : 0,\n          fires: monthData ? monthData.fires : 0\n        });\n      });\n    }\n    \n    return data;\n  };\n\n  const handleYearChange = (e) => {\n    onYearChange(e.target.value);\n  };\n\n  return (\n    <div className=\"yearly-analysis-dashboard\">\n      <div className=\"dashboard-header\">\n        <h2 className=\"dashboard-title\">Yearly Fire Analysis Dashboard</h2>\n        <p className=\"dashboard-description\">\n          Detailed analysis of wildfire data for a specific year, showing monthly patterns\n        </p>\n      </div>\n      \n      {/* Year selector and summary */}\n      <div className=\"year-selection-container\">\n        <div className=\"year-selector\">\n          <label htmlFor=\"year-select\" className=\"year-selector-label\">Select Year for Analysis:</label>\n          <select\n            id=\"year-select\"\n            value={selectedYear || ''}\n            onChange={handleYearChange}\n            className=\"year-selector-dropdown\"\n            disabled={availableYears.length === 0}\n          >\n            {availableYears.map(year => (\n              <option key={year} value={year}>{year}</option>\n            ))}\n          </select>\n        </div>\n        \n        {selectedYearData && (\n          <div className=\"year-summary\">\n            <div className=\"year-summary-item\">\n              <div className=\"summary-label\">Fires:</div>\n              <div className=\"summary-value\">{selectedYearData.fires.toLocaleString()}</div>\n            </div>\n            <div className=\"year-summary-item\">\n              <div className=\"summary-label\">Acres Burned:</div>\n              <div className=\"summary-value\">{selectedYearData.acres.toLocaleString()}</div>\n            </div>\n            <div className=\"year-summary-item\">\n              <div className=\"summary-label\">Peak Month:</div>\n              <div className=\"summary-value\">{summaryStats.peakMonth || 'N/A'}</div>\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Main content area with monthly visualization */}\n      <div className=\"chart-section\">\n        <div className=\"chart-container\">\n          <h3 className=\"section-title\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm9 4a1 1 0 10-2 0v6a1 1 0 102 0V7zm-3 2a1 1 0 10-2 0v4a1 1 0 102 0V9zm-3 3a1 1 0 10-2 0v1a1 1 0 102 0v-1z\" clipRule=\"evenodd\" />\n            </svg>\n            Monthly Acres Burned in {selectedYear || '...'}\n          </h3>\n          <div className=\"chart-description\">\n            Shows acres burned by month for the selected year, highlighting peak fire season.\n          </div>\n          <div className=\"chart-canvas\">\n            <ResponsiveContainer width=\"100%\" height={400}>\n              <BarChart\n                data={getMonthByYearData()}\n                margin={{ top: 20, right: 30, left: 20, bottom: 60 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n                <XAxis \n                  dataKey=\"month\" \n                  tick={{ fontSize: 12 }}\n                  tickLine={false}\n                  interval={0}\n                  angle={-45}\n                  textAnchor=\"end\"\n                  height={60}\n                />\n                <YAxis \n                  tick={{ fontSize: 12 }}\n                  tickLine={false}\n                  tickFormatter={formatLargeNumber}\n                />\n                <Tooltip \n                  formatter={(value) => [new Intl.NumberFormat().format(value), 'Acres Burned']}\n                  labelFormatter={(label) => `Month: ${label}`}\n                />\n                <Legend verticalAlign=\"top\" height={36} />\n                <Bar \n                  dataKey=\"acres\" \n                  fill=\"#DC2626\" \n                  name=\"Acres Burned\" \n                  barSize={30}\n                  radius={[4, 4, 0, 0]}\n                  label={{\n                    position: 'top',\n                    formatter: (value) => value > 10000 ? formatLargeNumber(value) : '',\n                    fontSize: 12,\n                    fill: '#6B7280'\n                  }}\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n      \n      {/* Second visualization */}\n      <div className=\"chart-section\">\n        <div className=\"chart-container\">\n          <h3 className=\"section-title\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z\" clipRule=\"evenodd\" />\n            </svg>\n            Fire Counts by Month in {selectedYear || '...'}\n          </h3>\n          <div className=\"chart-description\">\n            Shows the number of fires recorded each month for the selected year.\n          </div>\n          <div className=\"chart-canvas\">\n            <ResponsiveContainer width=\"100%\" height={400}>\n              <LineChart\n                data={getMonthByYearData()}\n                margin={{ top: 20, right: 30, left: 20, bottom: 60 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n                <XAxis \n                  dataKey=\"month\" \n                  tick={{ fontSize: 12 }}\n                  tickLine={false}\n                  interval={0}\n                  angle={-45}\n                  textAnchor=\"end\"\n                  height={60}\n                />\n                <YAxis \n                  tick={{ fontSize: 12 }}\n                  tickLine={false}\n                />\n                <Tooltip \n                  formatter={(value) => [value, 'Number of Fires']}\n                  labelFormatter={(label) => `Month: ${label}`}\n                />\n                <Legend verticalAlign=\"top\" height={36} />\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"fires\" \n                  stroke=\"#3B82F6\" \n                  strokeWidth={3}\n                  dot={{ fill: '#3B82F6', r: 5 }}\n                  activeDot={{ r: 7 }}\n                  name=\"Fire Count\"\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n      \n      {/* Monthly data table */}\n      <div className=\"monthly-data-table-container\">\n        <h3 className=\"section-title\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M5 4a3 3 0 00-3 3v6a3 3 0 003 3h10a3 3 0 003-3V7a3 3 0 00-3-3H5zm-1 9v-1h5v2H5a1 1 0 01-1-1zm7 1h4a1 1 0 001-1v-1h-5v2zm0-4h5V8h-5v2zM9 8H4v2h5V8z\" clipRule=\"evenodd\" />\n          </svg>\n          Monthly Breakdown for {selectedYear || '...'}\n        </h3>\n        <div className=\"data-table\">\n          <table className=\"monthly-table\">\n            <thead>\n              <tr>\n                <th>Month</th>\n                <th>Fires</th>\n                <th>Acres Burned</th>\n                <th>Acres per Fire</th>\n              </tr>\n            </thead>\n            <tbody>\n              {getMonthByYearData().map((monthData, index) => (\n                <tr key={index} className={monthData.month === summaryStats.peakMonth ? 'peak-month' : ''}>\n                  <td>{monthData.month}</td>\n                  <td>{monthData.fires.toLocaleString()}</td>\n                  <td>{monthData.acres.toLocaleString()}</td>\n                  <td>{monthData.fires > 0 ? Math.round(monthData.acres / monthData.fires).toLocaleString() : 'N/A'}</td>\n                </tr>\n              ))}\n            </tbody>\n            <tfoot>\n              <tr>\n                <th>Total</th>\n                <th>{selectedYearData ? selectedYearData.fires.toLocaleString() : 0}</th>\n                <th>{selectedYearData ? selectedYearData.acres.toLocaleString() : 0}</th>\n                <th>\n                  {selectedYearData && selectedYearData.fires > 0 \n                    ? Math.round(selectedYearData.acres / selectedYearData.fires).toLocaleString() \n                    : 'N/A'}\n                </th>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n      </div>\n      \n      {/* Data Source Info */}\n      <div className=\"data-source-container\">\n        <h3 className=\"data-source-title\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"data-source-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n          </svg>\n          Data Source Information\n        </h3>\n        <div className=\"data-source-content\">\n          <p>\n            This visualization shows detailed monthly data for the selected year from the firep23_1.geojson file.\n            The monthly breakdown helps identify fire patterns throughout the year and peak fire season.\n          </p>\n          <p className=\"data-source-note\">\n            Return to the \"Dashboard Overview\" tab to see trends across multiple years.\n          </p>\n        </div>\n      </div>\n      \n      <div className=\"refresh-button-container\">\n        <button \n          onClick={onRefresh} \n          className=\"refresh-button\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"refresh-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\" clipRule=\"evenodd\" />\n          </svg>\n          Refresh Data\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default YearlyAnalysisDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}