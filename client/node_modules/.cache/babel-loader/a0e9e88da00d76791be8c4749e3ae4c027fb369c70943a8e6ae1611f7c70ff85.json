{"ast":null,"code":"var _jsxFileName = \"/Users/hongtenglee/Documents/geoviz-dashboard/client/src/components/LayerControls.jsx\",\n  _s = $RefreshSig$();\n// LayerControls.jsx - Component for managing map layers\nimport React, { useState, useEffect } from 'react';\nimport './LayerControls.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LayerControls = ({\n  availableOverlays,\n  activeOverlays,\n  onToggleOverlay,\n  onUpdateOverlay,\n  onAnalyzeLayer,\n  baseDatasetId\n}) => {\n  _s();\n  const [expandedItems, setExpandedItems] = useState({});\n  const [colorSchemes, setColorSchemes] = useState([]);\n  const [showAnalysisPanel, setShowAnalysisPanel] = useState(false);\n  const [analysisSettings, setAnalysisSettings] = useState({\n    overlayId: '',\n    operation: 'intersection'\n  });\n\n  // Fetch available color schemes\n  useEffect(() => {\n    const fetchStylingOptions = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/styling/options');\n        if (response.ok) {\n          const data = await response.json();\n          setColorSchemes(data.colorSchemes || []);\n        }\n      } catch (error) {\n        console.error('Error fetching styling options:', error);\n      }\n    };\n    fetchStylingOptions();\n  }, []);\n\n  // Toggle expanded state of an overlay item\n  const toggleExpanded = datasetId => {\n    setExpandedItems(prev => ({\n      ...prev,\n      [datasetId]: !prev[datasetId]\n    }));\n  };\n\n  // Handle analysis operation changes\n  const handleAnalysisChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAnalysisSettings(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Submit analysis request\n  const handleAnalysisSubmit = e => {\n    e.preventDefault();\n    if (!analysisSettings.overlayId) {\n      alert('Please select an overlay layer for analysis');\n      return;\n    }\n    onAnalyzeLayer(analysisSettings.overlayId, analysisSettings.operation);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"layer-controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layer-controls-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Layer Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"analysis-toggle-btn\",\n        onClick: () => setShowAnalysisPanel(!showAnalysisPanel),\n        children: showAnalysisPanel ? 'Hide Analysis' : 'Show Analysis'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), showAnalysisPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Spatial Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAnalysisSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Base Layer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: \"Base Dataset\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Overlay Layer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"overlayId\",\n            value: analysisSettings.overlayId,\n            onChange: handleAnalysisChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an overlay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), activeOverlays.map(overlay => {\n              var _availableOverlays$fi;\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: overlay.id,\n                children: ((_availableOverlays$fi = availableOverlays.find(o => o.id === overlay.id)) === null || _availableOverlays$fi === void 0 ? void 0 : _availableOverlays$fi.name) || overlay.id\n              }, overlay.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Operation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"operation\",\n            value: analysisSettings.operation,\n            onChange: handleAnalysisChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"intersection\",\n              children: \"Intersection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"union\",\n              children: \"Union\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"difference\",\n              children: \"Difference\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"analyze-btn\",\n          children: \"Run Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layer-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"layer-item base-layer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"layer-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"layer-name\",\n            children: \"Base Layer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"layer-badge\",\n            children: \"Base\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Available Overlays\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), availableOverlays.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-overlays-message\",\n        children: \"No available overlays. Upload more datasets to use as overlays.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this) : availableOverlays.map(dataset => {\n        const isActive = activeOverlays.some(o => o.id === dataset.id);\n        const activeOverlay = activeOverlays.find(o => o.id === dataset.id);\n        const isExpanded = expandedItems[dataset.id];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `layer-item ${isActive ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"layer-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"layer-toggle\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: isActive,\n                onChange: () => onToggleOverlay(dataset.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"layer-name\",\n                children: dataset.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this), isActive && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"layer-expand-btn\",\n              onClick: () => toggleExpanded(dataset.id),\n              children: isExpanded ? '▼' : '►'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this), isActive && activeOverlay && isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"layer-settings\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Visible:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: activeOverlay.visible,\n                onChange: e => onUpdateOverlay(dataset.id, {\n                  visible: e.target.checked\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Opacity: \", activeOverlay.opacity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"0.1\",\n                max: \"1\",\n                step: \"0.1\",\n                value: activeOverlay.opacity,\n                onChange: e => onUpdateOverlay(dataset.id, {\n                  opacity: parseFloat(e.target.value)\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Color Scheme:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: activeOverlay.colorScale,\n                onChange: e => onUpdateOverlay(dataset.id, {\n                  colorScale: e.target.value\n                }),\n                children: colorSchemes.map(scheme => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: scheme.id,\n                  children: scheme.name\n                }, scheme.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Layer Order:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"order-controls\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onUpdateOverlay(dataset.id, {\n                    zIndex: (activeOverlay.zIndex || 0) + 1\n                  }),\n                  disabled: activeOverlay.zIndex >= 10,\n                  children: \"\\u2191\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: activeOverlay.zIndex || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onUpdateOverlay(dataset.id, {\n                    zIndex: Math.max(0, (activeOverlay.zIndex || 0) - 1)\n                  }),\n                  disabled: activeOverlay.zIndex <= 0,\n                  children: \"\\u2193\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 19\n          }, this)]\n        }, dataset.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(LayerControls, \"p4IDygmmwWULfjFpRg9Vx97SQ7I=\");\n_c = LayerControls;\nexport default LayerControls;\nvar _c;\n$RefreshReg$(_c, \"LayerControls\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LayerControls","availableOverlays","activeOverlays","onToggleOverlay","onUpdateOverlay","onAnalyzeLayer","baseDatasetId","_s","expandedItems","setExpandedItems","colorSchemes","setColorSchemes","showAnalysisPanel","setShowAnalysisPanel","analysisSettings","setAnalysisSettings","overlayId","operation","fetchStylingOptions","response","fetch","ok","data","json","error","console","toggleExpanded","datasetId","prev","handleAnalysisChange","e","name","value","target","handleAnalysisSubmit","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","disabled","onChange","required","map","overlay","_availableOverlays$fi","id","find","o","length","dataset","isActive","some","activeOverlay","isExpanded","checked","visible","opacity","min","max","step","parseFloat","colorScale","scheme","zIndex","Math","_c","$RefreshReg$"],"sources":["/Users/hongtenglee/Documents/geoviz-dashboard/client/src/components/LayerControls.jsx"],"sourcesContent":["// LayerControls.jsx - Component for managing map layers\nimport React, { useState, useEffect } from 'react';\nimport './LayerControls.css';\n\nconst LayerControls = ({ \n  availableOverlays, \n  activeOverlays, \n  onToggleOverlay, \n  onUpdateOverlay,\n  onAnalyzeLayer,\n  baseDatasetId\n}) => {\n  const [expandedItems, setExpandedItems] = useState({});\n  const [colorSchemes, setColorSchemes] = useState([]);\n  const [showAnalysisPanel, setShowAnalysisPanel] = useState(false);\n  const [analysisSettings, setAnalysisSettings] = useState({\n    overlayId: '',\n    operation: 'intersection'\n  });\n\n  // Fetch available color schemes\n  useEffect(() => {\n    const fetchStylingOptions = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/styling/options');\n        if (response.ok) {\n          const data = await response.json();\n          setColorSchemes(data.colorSchemes || []);\n        }\n      } catch (error) {\n        console.error('Error fetching styling options:', error);\n      }\n    };\n\n    fetchStylingOptions();\n  }, []);\n\n  // Toggle expanded state of an overlay item\n  const toggleExpanded = (datasetId) => {\n    setExpandedItems(prev => ({\n      ...prev,\n      [datasetId]: !prev[datasetId]\n    }));\n  };\n\n  // Handle analysis operation changes\n  const handleAnalysisChange = (e) => {\n    const { name, value } = e.target;\n    setAnalysisSettings(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Submit analysis request\n  const handleAnalysisSubmit = (e) => {\n    e.preventDefault();\n    \n    if (!analysisSettings.overlayId) {\n      alert('Please select an overlay layer for analysis');\n      return;\n    }\n    \n    onAnalyzeLayer(analysisSettings.overlayId, analysisSettings.operation);\n  };\n\n  return (\n    <div className=\"layer-controls\">\n      <div className=\"layer-controls-header\">\n        <h3>Layer Controls</h3>\n        <button \n          className=\"analysis-toggle-btn\"\n          onClick={() => setShowAnalysisPanel(!showAnalysisPanel)}\n        >\n          {showAnalysisPanel ? 'Hide Analysis' : 'Show Analysis'}\n        </button>\n      </div>\n      \n      {showAnalysisPanel && (\n        <div className=\"analysis-panel\">\n          <h4>Spatial Analysis</h4>\n          <form onSubmit={handleAnalysisSubmit}>\n            <div className=\"form-group\">\n              <label>Base Layer:</label>\n              <input type=\"text\" value=\"Base Dataset\" disabled />\n            </div>\n            \n            <div className=\"form-group\">\n              <label>Overlay Layer:</label>\n              <select \n                name=\"overlayId\" \n                value={analysisSettings.overlayId}\n                onChange={handleAnalysisChange}\n                required\n              >\n                <option value=\"\">Select an overlay</option>\n                {activeOverlays.map(overlay => (\n                  <option key={overlay.id} value={overlay.id}>\n                    {availableOverlays.find(o => o.id === overlay.id)?.name || overlay.id}\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"form-group\">\n              <label>Operation:</label>\n              <select \n                name=\"operation\" \n                value={analysisSettings.operation}\n                onChange={handleAnalysisChange}\n              >\n                <option value=\"intersection\">Intersection</option>\n                <option value=\"union\">Union</option>\n                <option value=\"difference\">Difference</option>\n              </select>\n            </div>\n            \n            <button type=\"submit\" className=\"analyze-btn\">Run Analysis</button>\n          </form>\n        </div>\n      )}\n      \n      <div className=\"layer-list\">\n        <div className=\"layer-item base-layer\">\n          <div className=\"layer-header\">\n            <span className=\"layer-name\">Base Layer</span>\n            <span className=\"layer-badge\">Base</span>\n          </div>\n        </div>\n        \n        <h4>Available Overlays</h4>\n        \n        {availableOverlays.length === 0 ? (\n          <p className=\"no-overlays-message\">No available overlays. Upload more datasets to use as overlays.</p>\n        ) : (\n          availableOverlays.map(dataset => {\n            const isActive = activeOverlays.some(o => o.id === dataset.id);\n            const activeOverlay = activeOverlays.find(o => o.id === dataset.id);\n            const isExpanded = expandedItems[dataset.id];\n            \n            return (\n              <div \n                key={dataset.id} \n                className={`layer-item ${isActive ? 'active' : ''}`}\n              >\n                <div className=\"layer-header\">\n                  <label className=\"layer-toggle\">\n                    <input \n                      type=\"checkbox\" \n                      checked={isActive}\n                      onChange={() => onToggleOverlay(dataset.id)}\n                    />\n                    <span className=\"layer-name\">{dataset.name}</span>\n                  </label>\n                  \n                  {isActive && (\n                    <button \n                      className=\"layer-expand-btn\"\n                      onClick={() => toggleExpanded(dataset.id)}\n                    >\n                      {isExpanded ? '▼' : '►'}\n                    </button>\n                  )}\n                </div>\n                \n                {isActive && activeOverlay && isExpanded && (\n                  <div className=\"layer-settings\">\n                    <div className=\"setting\">\n                      <label>Visible:</label>\n                      <input \n                        type=\"checkbox\"\n                        checked={activeOverlay.visible}\n                        onChange={(e) => onUpdateOverlay(dataset.id, { visible: e.target.checked })}\n                      />\n                    </div>\n                    \n                    <div className=\"setting\">\n                      <label>Opacity: {activeOverlay.opacity}</label>\n                      <input \n                        type=\"range\"\n                        min=\"0.1\"\n                        max=\"1\"\n                        step=\"0.1\"\n                        value={activeOverlay.opacity}\n                        onChange={(e) => onUpdateOverlay(dataset.id, { opacity: parseFloat(e.target.value) })}\n                      />\n                    </div>\n                    \n                    <div className=\"setting\">\n                      <label>Color Scheme:</label>\n                      <select\n                        value={activeOverlay.colorScale}\n                        onChange={(e) => onUpdateOverlay(dataset.id, { colorScale: e.target.value })}\n                      >\n                        {colorSchemes.map(scheme => (\n                          <option key={scheme.id} value={scheme.id}>\n                            {scheme.name}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    \n                    <div className=\"setting\">\n                      <label>Layer Order:</label>\n                      <div className=\"order-controls\">\n                        <button \n                          onClick={() => onUpdateOverlay(dataset.id, { zIndex: (activeOverlay.zIndex || 0) + 1 })}\n                          disabled={activeOverlay.zIndex >= 10}\n                        >\n                          ↑\n                        </button>\n                        <span>{activeOverlay.zIndex || 0}</span>\n                        <button \n                          onClick={() => onUpdateOverlay(dataset.id, { zIndex: Math.max(0, (activeOverlay.zIndex || 0) - 1) })}\n                          disabled={activeOverlay.zIndex <= 0}\n                        >\n                          ↓\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default LayerControls;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}