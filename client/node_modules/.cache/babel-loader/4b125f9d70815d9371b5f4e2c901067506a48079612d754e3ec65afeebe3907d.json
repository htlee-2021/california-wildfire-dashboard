{"ast":null,"code":"var _jsxFileName = \"/Users/hongtenglee/Documents/geoviz-dashboard/client/src/components/FireCauseAnalysisDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FireCauseAnalysisDashboard = ({\n  causesData,\n  topCauses,\n  causeDefinitions,\n  selectedYear,\n  availableYears,\n  onYearChange,\n  onRefresh\n}) => {\n  _s();\n  const topCausesChartRef = useRef(null);\n  const causesByYearChartRef = useRef(null);\n  const monthlyCausesChartRef = useRef(null);\n  const [selectedCause, setSelectedCause] = useState(null);\n  const [showAllCauses, setShowAllCauses] = useState(false);\n  useEffect(() => {\n    if (topCauses && topCauses.length > 0) {\n      createTopCausesChart();\n    }\n  }, [topCauses, showAllCauses]);\n  useEffect(() => {\n    if (causesData && selectedYear && causesData[selectedYear]) {\n      createCausesByYearChart();\n      createMonthlyCausesChart();\n    }\n  }, [causesData, selectedYear, selectedCause]);\n\n  // Format large numbers\n  const formatLargeNumber = num => {\n    if (num >= 1000000) {\n      return `${(num / 1000000).toFixed(1)}M`;\n    } else if (num >= 1000) {\n      return `${(num / 1000).toFixed(1)}K`;\n    }\n    return num;\n  };\n  const getColorScale = () => {\n    return d3.scaleOrdinal().domain([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]).range(['#e6194B', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#42d4f4', '#f032e6', '#bfef45', '#fabed4', '#469990', '#dcbeff', '#9A6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075']);\n  };\n  const getCauseColor = causeId => {\n    const colorScale = getColorScale();\n    return colorScale(causeId);\n  };\n  const createTopCausesChart = () => {\n    if (!topCausesChartRef.current) return;\n\n    // Clear any existing chart\n    d3.select(topCausesChartRef.current).selectAll('*').remove();\n    const margin = {\n      top: 50,\n      right: 180,\n      bottom: 100,\n      left: 90\n    };\n    const svgElement = topCausesChartRef.current;\n    const width = getResponsiveWidth(svgElement);\n    const height = 450;\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n\n    // Create SVG\n    const svg = d3.select(svgElement).attr('width', width).attr('height', height).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Determine how many causes to show\n    const visibleCauses = showAllCauses ? topCauses : topCauses.slice(0, 8);\n\n    // Define scales\n    const xScale = d3.scaleBand().domain(visibleCauses.map(d => d.causeId)).range([0, chartWidth]).padding(0.2);\n    const yScale = d3.scaleLinear().domain([0, d3.max(visibleCauses, d => d.fires) * 1.1]).range([chartHeight, 0]);\n\n    // Create axes\n    svg.append('g').attr('transform', `translate(0,${chartHeight})`).call(d3.axisBottom(xScale).tickFormat(d => {\n      const cause = visibleCauses.find(c => c.causeId === d);\n      return cause ? cause.causeId : '';\n    })).selectAll('text').attr('transform', 'rotate(-45)').style('text-anchor', 'end').attr('dx', '-.8em').attr('dy', '.15em');\n    svg.append('g').call(d3.axisLeft(yScale).tickFormat(d => formatLargeNumber(d)));\n\n    // Add grid lines\n    svg.append('g').attr('class', 'grid-lines').selectAll('line').data(yScale.ticks()).enter().append('line').attr('x1', 0).attr('y1', d => yScale(d)).attr('x2', chartWidth).attr('y2', d => yScale(d)).attr('stroke', '#e5e7eb').attr('stroke-dasharray', '3,3');\n\n    // Add bars\n    svg.selectAll('bars').data(visibleCauses).enter().append('rect').attr('x', d => xScale(d.causeId)).attr('y', d => yScale(d.fires)).attr('width', xScale.bandwidth()).attr('height', d => chartHeight - yScale(d.fires)).attr('fill', d => getCauseColor(d.causeId)).attr('rx', 4).attr('ry', 4);\n\n    // Add percentage labels above bars\n    svg.selectAll('percent-labels').data(visibleCauses).enter().append('text').attr('x', d => xScale(d.causeId) + xScale.bandwidth() / 2).attr('y', d => yScale(d.fires) - 10).attr('text-anchor', 'middle').text(d => `${d.percentage}%`).style('font-size', '12px').style('font-weight', 'bold');\n\n    // Add legend\n    const legend = svg.append('g').attr('class', 'legend').attr('transform', `translate(${chartWidth + 10}, 0)`);\n    visibleCauses.forEach((cause, i) => {\n      const legendItem = legend.append('g').attr('transform', `translate(0, ${i * 20})`);\n      legendItem.append('rect').attr('width', 12).attr('height', 12).attr('fill', getCauseColor(cause.causeId));\n      legendItem.append('text').attr('x', 20).attr('y', 10).text(`${cause.causeId} - ${cause.causeName}`).style('font-size', '12px');\n    });\n\n    // Add title\n    svg.append('text').attr('x', chartWidth / 2).attr('y', -30).attr('text-anchor', 'middle').style('font-size', '16px').style('font-weight', 'bold').text('Top Fire Causes by Number of Fires');\n\n    // Create tooltip\n    const tooltip = d3.select('body').selectAll('.tooltip').data([null]).join('div').attr('class', 'tooltip').style('opacity', 0);\n\n    // Add hover effects with safe access to properties\n    svg.selectAll('rect').on('mouseover', function (event, d) {\n      try {\n        if (!d) return;\n        d3.select(this).transition().duration(200).attr('opacity', 0.8);\n        tooltip.transition().duration(200).style('opacity', 0.9);\n        tooltip.html(`\n            <strong>${d.causeId} - ${d.causeName}</strong><br/>\n            Fires: ${d.fires.toLocaleString()}<br/>\n            Acres Burned: ${d.acres.toLocaleString()}<br/>\n            Percentage: ${d.percentage}%\n          `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 28 + 'px');\n      } catch (error) {\n        console.error('Error in top causes chart hover:', error);\n      }\n    }).on('mouseout', function () {\n      d3.select(this).transition().duration(200).attr('opacity', 1);\n      tooltip.transition().duration(500).style('opacity', 0);\n    });\n\n    // Add a button to show/hide all causes\n    d3.select(svgElement.parentNode).selectAll('.toggle-button').data([null]).join('button').attr('class', 'toggle-button refresh-button').style('margin-top', '10px').style('margin-left', '10px').text(showAllCauses ? 'Show Top 8 Causes' : 'Show All Causes').on('click', function () {\n      setShowAllCauses(!showAllCauses);\n    });\n  };\n  const createCausesByYearChart = () => {\n    if (!causesByYearChartRef.current || !causesData || !selectedYear || !causesData[selectedYear]) return;\n\n    // Clear any existing chart\n    d3.select(causesByYearChartRef.current).selectAll('*').remove();\n    const yearData = causesData[selectedYear].causes;\n    if (!yearData || yearData.length === 0) return;\n    const margin = {\n      top: 50,\n      right: 180,\n      bottom: 100,\n      left: 90\n    };\n    const svgElement = causesByYearChartRef.current;\n    const width = getResponsiveWidth(svgElement);\n    const height = 400;\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n\n    // Create SVG\n    const svg = d3.select(svgElement).attr('width', width).attr('height', height).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Determine how many causes to show (show top 8 causes for this year)\n    const visibleCauses = yearData.slice(0, 8);\n\n    // Define scales\n    const xScale = d3.scaleBand().domain(visibleCauses.map(d => d.causeId)).range([0, chartWidth]).padding(0.2);\n    const yScale = d3.scaleLinear().domain([0, d3.max(visibleCauses, d => d.fires) * 1.1]).range([chartHeight, 0]);\n\n    // Create axes\n    svg.append('g').attr('transform', `translate(0,${chartHeight})`).call(d3.axisBottom(xScale).tickFormat(d => {\n      const cause = visibleCauses.find(c => c.causeId === d);\n      return cause ? cause.causeId : '';\n    })).selectAll('text').attr('transform', 'rotate(-45)').style('text-anchor', 'end').attr('dx', '-.8em').attr('dy', '.15em');\n    svg.append('g').call(d3.axisLeft(yScale).tickFormat(d => formatLargeNumber(d)));\n\n    // Add grid lines\n    svg.append('g').attr('class', 'grid-lines').selectAll('line').data(yScale.ticks()).enter().append('line').attr('x1', 0).attr('y1', d => yScale(d)).attr('x2', chartWidth).attr('y2', d => yScale(d)).attr('stroke', '#e5e7eb').attr('stroke-dasharray', '3,3');\n\n    // Add bars\n    svg.selectAll('bars').data(visibleCauses).enter().append('rect').attr('x', d => xScale(d.causeId)).attr('y', d => yScale(d.fires)).attr('width', xScale.bandwidth()).attr('height', d => chartHeight - yScale(d.fires)).attr('fill', d => getCauseColor(d.causeId)).attr('rx', 4).attr('ry', 4).attr('cursor', 'pointer').on('click', (event, d) => {\n      try {\n        if (!d) return;\n        setSelectedCause(selectedCause === d.causeId ? null : d.causeId);\n      } catch (error) {\n        console.error('Error handling click:', error);\n      }\n    });\n\n    // Highlight the selected cause\n    if (selectedCause) {\n      svg.selectAll('rect').attr('opacity', d => {\n        try {\n          return d.causeId === selectedCause ? 1 : 0.3;\n        } catch (error) {\n          return 1;\n        }\n      });\n    }\n\n    // Add legend\n    const legend = svg.append('g').attr('class', 'legend').attr('transform', `translate(${chartWidth + 10}, 0)`);\n    visibleCauses.forEach((cause, i) => {\n      const legendItem = legend.append('g').attr('transform', `translate(0, ${i * 20})`);\n      legendItem.append('rect').attr('width', 12).attr('height', 12).attr('fill', getCauseColor(cause.causeId));\n      legendItem.append('text').attr('x', 20).attr('y', 10).text(`${cause.causeId} - ${cause.causeName}`).style('font-size', '12px');\n    });\n\n    // Add title\n    svg.append('text').attr('x', chartWidth / 2).attr('y', -30).attr('text-anchor', 'middle').style('font-size', '16px').style('font-weight', 'bold').text(`Top Fire Causes in ${selectedYear} (click to filter monthly chart)`);\n\n    // Create tooltip\n    const tooltip = d3.select('body').selectAll('.tooltip').data([null]).join('div').attr('class', 'tooltip').style('opacity', 0);\n\n    // Add hover effects with defensive coding\n    svg.selectAll('rect').on('mouseover', function (event, d) {\n      try {\n        if (!d) return;\n        d3.select(this).transition().duration(200).attr('opacity', d.causeId === selectedCause ? 1 : 0.5);\n        tooltip.transition().duration(200).style('opacity', 0.9);\n        const totalFires = yearData.reduce((sum, cause) => sum + cause.fires, 0);\n        const percentage = Math.round(d.fires / totalFires * 1000) / 10;\n        tooltip.html(`\n            <strong>${d.causeId} - ${d.causeName}</strong><br/>\n            Fires: ${d.fires.toLocaleString()}<br/>\n            Acres Burned: ${d.acres.toLocaleString()}<br/>\n            Percentage: ${percentage}%<br/>\n            Click to filter monthly chart\n          `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 28 + 'px');\n      } catch (error) {\n        console.error('Error in yearly causes chart hover:', error);\n      }\n    }).on('mouseout', function (event, d) {\n      try {\n        if (!d) return;\n        d3.select(this).transition().duration(200).attr('opacity', d.causeId === selectedCause ? 1 : selectedCause ? 0.3 : 1);\n        tooltip.transition().duration(500).style('opacity', 0);\n      } catch (error) {\n        console.error('Error in mouseout handler:', error);\n      }\n    });\n  };\n  const createMonthlyCausesChart = () => {\n    if (!monthlyCausesChartRef.current || !causesData || !selectedYear || !causesData[selectedYear]) return;\n\n    // Clear any existing chart\n    d3.select(monthlyCausesChartRef.current).selectAll('*').remove();\n    const yearData = causesData[selectedYear];\n    if (!yearData || !yearData.monthlyBreakdown) return;\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    // Prepare data for stacked bar chart\n    const monthlyCausesData = months.map(month => {\n      const monthData = {\n        month\n      };\n\n      // Get monthly causes data\n      const monthCauses = yearData.monthlyBreakdown[month] || [];\n\n      // If a cause is selected, only include that cause\n      if (selectedCause !== null) {\n        const selectedCauseData = monthCauses.find(c => c.causeId === selectedCause);\n        if (selectedCauseData) {\n          monthData[selectedCauseData.causeId] = selectedCauseData.fires;\n        } else {\n          monthData[selectedCause] = 0;\n        }\n      } else {\n        // Otherwise include top 5 causes for this year\n        const topCausesForYear = yearData.causes.slice(0, 5).map(c => c.causeId);\n        topCausesForYear.forEach(causeId => {\n          const causeData = monthCauses.find(c => c.causeId === causeId);\n          monthData[causeId] = causeData ? causeData.fires : 0;\n        });\n      }\n      return monthData;\n    });\n\n    // Get cause IDs to stack\n    const causeIds = selectedCause !== null ? [selectedCause] : yearData.causes.slice(0, 5).map(c => c.causeId);\n    const margin = {\n      top: 50,\n      right: 180,\n      bottom: 100,\n      left: 90\n    };\n    const svgElement = monthlyCausesChartRef.current;\n    const width = getResponsiveWidth(svgElement);\n    const height = 400;\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n\n    // Create SVG\n    const svg = d3.select(svgElement).attr('width', width).attr('height', height).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Define scales\n    const xScale = d3.scaleBand().domain(months).range([0, chartWidth]).padding(0.1);\n    const yScale = d3.scaleLinear().domain([0, d3.max(monthlyCausesData, d => {\n      return d3.sum(causeIds, causeId => d[causeId] || 0);\n    }) * 1.1]).range([chartHeight, 0]);\n\n    // Create stacked data\n    const stack = d3.stack().keys(causeIds).order(d3.stackOrderNone).offset(d3.stackOffsetNone);\n    const stackedData = stack(monthlyCausesData);\n\n    // Create axes\n    svg.append('g').attr('transform', `translate(0,${chartHeight})`).call(d3.axisBottom(xScale)).selectAll('text').attr('transform', 'rotate(-45)').style('text-anchor', 'end').attr('dx', '-.8em').attr('dy', '.15em').style('font-size', '10px');\n    svg.append('g').call(d3.axisLeft(yScale).tickFormat(d => formatLargeNumber(d)));\n\n    // Add grid lines\n    svg.append('g').attr('class', 'grid-lines').selectAll('line').data(yScale.ticks()).enter().append('line').attr('x1', 0).attr('y1', d => yScale(d)).attr('x2', chartWidth).attr('y2', d => yScale(d)).attr('stroke', '#e5e7eb').attr('stroke-dasharray', '3,3');\n\n    // Add stacked bars\n    const stackGroups = svg.append('g').selectAll('g').data(stackedData).enter().append('g').attr('fill', d => getCauseColor(parseInt(d.key)));\n\n    // Store the stack group key in a data attribute for easier access in event handlers\n    stackGroups.each(function (d) {\n      d3.select(this).attr('data-key', d.key);\n    });\n    stackGroups.selectAll('rect').data(d => d).enter().append('rect').attr('x', d => xScale(d.data.month)).attr('y', d => yScale(d[1])).attr('height', d => yScale(d[0]) - yScale(d[1])).attr('width', xScale.bandwidth());\n\n    // Add legend\n    const legend = svg.append('g').attr('class', 'legend').attr('transform', `translate(${chartWidth + 10}, 0)`);\n    causeIds.forEach((causeId, i) => {\n      const cause = yearData.causes.find(c => c.causeId === causeId) || {\n        causeId,\n        causeName: causeDefinitions[causeId] || `Unknown (${causeId})`\n      };\n      const legendItem = legend.append('g').attr('transform', `translate(0, ${i * 20})`);\n      legendItem.append('rect').attr('width', 12).attr('height', 12).attr('fill', getCauseColor(causeId));\n      legendItem.append('text').attr('x', 20).attr('y', 10).text(`${causeId} - ${cause.causeName}`).style('font-size', '12px');\n    });\n\n    // Add title with more space\n    svg.append('text').attr('x', chartWidth / 2).attr('y', -30).attr('text-anchor', 'middle').style('font-size', '16px').style('font-weight', 'bold').text(selectedCause ? `Monthly Distribution of \"${causeDefinitions[selectedCause]}\" Fires in ${selectedYear}` : `Monthly Distribution of Top Fire Causes in ${selectedYear}`);\n\n    // Create tooltip\n    const tooltip = d3.select('body').selectAll('.tooltip').data([null]).join('div').attr('class', 'tooltip').style('opacity', 0);\n\n    // Enhanced hover event handlers with error handling\n    svg.selectAll('rect').on('mouseover', function (event, d) {\n      try {\n        if (!d || !d.data) return;\n        d3.select(this).transition().duration(200).attr('opacity', 0.8);\n\n        // Get the cause ID from the parent group's data-key attribute\n        const parentGroup = this.parentNode;\n        if (!parentGroup) return;\n        const causeIdStr = d3.select(parentGroup).attr('data-key');\n        if (!causeIdStr) return;\n        const causeId = parseInt(causeIdStr);\n        const causeName = causeDefinitions[causeId] || `Unknown (${causeId})`;\n        const monthData = d.data;\n        tooltip.transition().duration(200).style('opacity', 0.9);\n        tooltip.html(`\n            <strong>${monthData.month} ${selectedYear}</strong><br/>\n            Cause: ${causeId} - ${causeName}<br/>\n            Fires: ${(monthData[causeId] || 0).toLocaleString()}\n          `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 28 + 'px');\n      } catch (error) {\n        console.error('Error in monthly causes chart hover:', error);\n      }\n    }).on('mouseout', function () {\n      d3.select(this).transition().duration(200).attr('opacity', 1);\n      tooltip.transition().duration(500).style('opacity', 0);\n    });\n\n    // Add a button to clear the selected cause filter\n    if (selectedCause !== null) {\n      d3.select(svgElement.parentNode).selectAll('.clear-filter-button').data([null]).join('button').attr('class', 'clear-filter-button refresh-button').style('margin-top', '10px').style('margin-left', '10px').text('Clear Cause Filter').on('click', function () {\n        setSelectedCause(null);\n      });\n    }\n  };\n\n  // Create a table of fire causes with their descriptions\n  const renderCauseDefinitionsTable = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"section-icon\",\n          viewBox: \"0 0 20 20\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 21\n        }, this), \"Fire Cause Reference Guide\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-description\",\n        children: \"Reference of fire cause codes and their definitions as per CAL FIRE classification.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"monthly-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Cause Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(causeDefinitions).map(([code, name]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: getCauseDescription(parseInt(code))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 37\n              }, this)]\n            }, code, true, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Helper function to provide descriptions for fire causes\n  const getCauseDescription = causeId => {\n    switch (causeId) {\n      case 1:\n        return \"Fires caused by natural lightning strikes.\";\n      case 2:\n        return \"Fires caused by equipment use, such as chainsaws, tractors, or other machinery.\";\n      case 3:\n        return \"Fires caused by improperly discarded cigarettes, cigars, or other smoking materials.\";\n      case 4:\n        return \"Fires that escape from recreational or warming campfires.\";\n      case 5:\n        return \"Fires from burning of yard waste or other debris that escape control.\";\n      case 6:\n        return \"Fires caused by railroad operations, such as sparks from train wheels or maintenance.\";\n      case 7:\n        return \"Fires intentionally set by individuals with malicious intent.\";\n      case 8:\n        return \"Fires caused by children or others playing with matches, lighters, or fire.\";\n      case 9:\n        return \"Fires that don't fall into other specific categories.\";\n      case 10:\n        return \"Fires caused by vehicles, including exhaust systems, catalytic converters, or accidents.\";\n      case 11:\n        return \"Fires caused by electrical power lines or related equipment.\";\n      case 12:\n        return \"Fires that occur during official firefighter training exercises.\";\n      case 13:\n        return \"Fires that occur during non-firefighter training exercises or activities.\";\n      case 14:\n        return \"Fires where the cause could not be determined after investigation.\";\n      case 15:\n        return \"Fires that start from structures and spread to wildland areas.\";\n      case 16:\n        return \"Fires caused by aircraft crashes or related incidents.\";\n      case 17:\n        return \"Fires caused by volcanic activity.\";\n      case 18:\n        return \"Controlled burns that escape their intended boundaries.\";\n      case 19:\n        return \"Fires specifically linked to campfires made by undocumented immigrants.\";\n      default:\n        return \"No description available.\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fire-causes-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"dashboard-title\",\n        children: \"Fire Cause Analysis Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"dashboard-description\",\n        children: \"Analysis of wildfire causes across years and seasons, identifying top contributors to fire ignitions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year-selection-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cause-year-select\",\n          className: \"year-selector-label\",\n          children: \"Select Year for Analysis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"cause-year-select\",\n          className: \"year-selector-dropdown\",\n          value: selectedYear || '',\n          onChange: e => onYearChange(e.target.value),\n          disabled: availableYears.length === 0,\n          children: availableYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-label\",\n            children: \"Selected Year:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-value\",\n            children: selectedYear || 'All Years'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 21\n        }, this), selectedCause && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-label\",\n            children: \"Filtered Cause:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-value\",\n            children: selectedCause\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"refresh-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"refresh-button\",\n            onClick: onRefresh,\n            children: \"Refresh Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"section-icon\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 25\n          }, this), \"Top Fire Causes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-description\",\n          children: \"Analysis of the top fire causes based on the number of fires and acres burned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: topCausesChartRef,\n          className: \"chart-svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"section-icon\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 25\n          }, this), \"Top Fire Causes by Year\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-description\",\n          children: \"Analysis of the top fire causes for the selected year.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: causesByYearChartRef,\n          className: \"chart-svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 785,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"section-icon\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 25\n          }, this), \"Monthly Fire Causes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-description\",\n          children: \"Monthly breakdown of fire causes for the selected year.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: monthlyCausesChartRef,\n          className: \"chart-svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 13\n    }, this), renderCauseDefinitionsTable()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 726,\n    columnNumber: 9\n  }, this);\n};\n_s(FireCauseAnalysisDashboard, \"stT7Xb7RKFq8s/NTdjajKkEhPa8=\");\n_c = FireCauseAnalysisDashboard;\nexport default FireCauseAnalysisDashboard;\nvar _c;\n$RefreshReg$(_c, \"FireCauseAnalysisDashboard\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","FireCauseAnalysisDashboard","causesData","topCauses","causeDefinitions","selectedYear","availableYears","onYearChange","onRefresh","_s","topCausesChartRef","causesByYearChartRef","monthlyCausesChartRef","selectedCause","setSelectedCause","showAllCauses","setShowAllCauses","length","createTopCausesChart","createCausesByYearChart","createMonthlyCausesChart","formatLargeNumber","num","toFixed","getColorScale","scaleOrdinal","domain","range","getCauseColor","causeId","colorScale","current","select","selectAll","remove","margin","top","right","bottom","left","svgElement","width","getResponsiveWidth","height","chartWidth","chartHeight","svg","attr","append","visibleCauses","slice","xScale","scaleBand","map","d","padding","yScale","scaleLinear","max","fires","call","axisBottom","tickFormat","cause","find","c","style","axisLeft","data","ticks","enter","bandwidth","text","percentage","legend","forEach","i","legendItem","causeName","tooltip","join","on","event","transition","duration","html","toLocaleString","acres","pageX","pageY","error","console","parentNode","yearData","causes","totalFires","reduce","sum","Math","round","monthlyBreakdown","months","monthlyCausesData","month","monthData","monthCauses","selectedCauseData","topCausesForYear","causeData","causeIds","stack","keys","order","stackOrderNone","offset","stackOffsetNone","stackedData","stackGroups","parseInt","key","each","parentGroup","causeIdStr","renderCauseDefinitionsTable","className","children","xmlns","viewBox","fill","fillRule","clipRule","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","code","name","getCauseDescription","htmlFor","id","value","onChange","e","target","disabled","year","onClick","ref","_c","$RefreshReg$"],"sources":["/Users/hongtenglee/Documents/geoviz-dashboard/client/src/components/FireCauseAnalysisDashboard.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\n\nexport const FireCauseAnalysisDashboard = ({\n    causesData,\n    topCauses,\n    causeDefinitions,\n    selectedYear,\n    availableYears,\n    onYearChange,\n    onRefresh\n}) => {\n    const topCausesChartRef = useRef(null);\n    const causesByYearChartRef = useRef(null);\n    const monthlyCausesChartRef = useRef(null);\n    const [selectedCause, setSelectedCause] = useState(null);\n    const [showAllCauses, setShowAllCauses] = useState(false);\n\n    useEffect(() => {\n        if (topCauses && topCauses.length > 0) {\n            createTopCausesChart();\n        }\n    }, [topCauses, showAllCauses]);\n\n    useEffect(() => {\n        if (causesData && selectedYear && causesData[selectedYear]) {\n            createCausesByYearChart();\n            createMonthlyCausesChart();\n        }\n    }, [causesData, selectedYear, selectedCause]);\n\n    // Format large numbers\n    const formatLargeNumber = (num) => {\n        if (num >= 1000000) {\n            return `${(num / 1000000).toFixed(1)}M`;\n        } else if (num >= 1000) {\n            return `${(num / 1000).toFixed(1)}K`;\n        }\n        return num;\n    };\n\n    const getColorScale = () => {\n        return d3.scaleOrdinal()\n            .domain([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n            .range([\n                '#e6194B', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4',\n                '#42d4f4', '#f032e6', '#bfef45', '#fabed4', '#469990', '#dcbeff',\n                '#9A6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075'\n            ]);\n    };\n\n    const getCauseColor = (causeId) => {\n        const colorScale = getColorScale();\n        return colorScale(causeId);\n    };\n\n    const createTopCausesChart = () => {\n        if (!topCausesChartRef.current) return;\n\n        // Clear any existing chart\n        d3.select(topCausesChartRef.current).selectAll('*').remove();\n\n        const margin = { top: 50, right: 180, bottom: 100, left: 90 };\n        const svgElement = topCausesChartRef.current;\n        const width = getResponsiveWidth(svgElement);\n        const height = 450;\n        const chartWidth = width - margin.left - margin.right;\n        const chartHeight = height - margin.top - margin.bottom;\n\n        // Create SVG\n        const svg = d3.select(svgElement)\n            .attr('width', width)\n            .attr('height', height)\n            .append('g')\n            .attr('transform', `translate(${margin.left},${margin.top})`);\n\n        // Determine how many causes to show\n        const visibleCauses = showAllCauses ? topCauses : topCauses.slice(0, 8);\n\n        // Define scales\n        const xScale = d3.scaleBand()\n            .domain(visibleCauses.map(d => d.causeId))\n            .range([0, chartWidth])\n            .padding(0.2);\n\n        const yScale = d3.scaleLinear()\n            .domain([0, d3.max(visibleCauses, d => d.fires) * 1.1])\n            .range([chartHeight, 0]);\n\n        // Create axes\n        svg.append('g')\n            .attr('transform', `translate(0,${chartHeight})`)\n            .call(d3.axisBottom(xScale)\n                .tickFormat(d => {\n                    const cause = visibleCauses.find(c => c.causeId === d);\n                    return cause ? cause.causeId : '';\n                }))\n            .selectAll('text')\n            .attr('transform', 'rotate(-45)')\n            .style('text-anchor', 'end')\n            .attr('dx', '-.8em')\n            .attr('dy', '.15em');\n\n        svg.append('g')\n            .call(d3.axisLeft(yScale).tickFormat(d => formatLargeNumber(d)));\n\n        // Add grid lines\n        svg.append('g')\n            .attr('class', 'grid-lines')\n            .selectAll('line')\n            .data(yScale.ticks())\n            .enter()\n            .append('line')\n            .attr('x1', 0)\n            .attr('y1', d => yScale(d))\n            .attr('x2', chartWidth)\n            .attr('y2', d => yScale(d))\n            .attr('stroke', '#e5e7eb')\n            .attr('stroke-dasharray', '3,3');\n\n        // Add bars\n        svg.selectAll('bars')\n            .data(visibleCauses)\n            .enter()\n            .append('rect')\n            .attr('x', d => xScale(d.causeId))\n            .attr('y', d => yScale(d.fires))\n            .attr('width', xScale.bandwidth())\n            .attr('height', d => chartHeight - yScale(d.fires))\n            .attr('fill', d => getCauseColor(d.causeId))\n            .attr('rx', 4)\n            .attr('ry', 4);\n\n        // Add percentage labels above bars\n        svg.selectAll('percent-labels')\n            .data(visibleCauses)\n            .enter()\n            .append('text')\n            .attr('x', d => xScale(d.causeId) + xScale.bandwidth() / 2)\n            .attr('y', d => yScale(d.fires) - 10)\n            .attr('text-anchor', 'middle')\n            .text(d => `${d.percentage}%`)\n            .style('font-size', '12px')\n            .style('font-weight', 'bold');\n\n        // Add legend\n        const legend = svg.append('g')\n            .attr('class', 'legend')\n            .attr('transform', `translate(${chartWidth + 10}, 0)`);\n\n        visibleCauses.forEach((cause, i) => {\n            const legendItem = legend.append('g')\n                .attr('transform', `translate(0, ${i * 20})`);\n\n            legendItem.append('rect')\n                .attr('width', 12)\n                .attr('height', 12)\n                .attr('fill', getCauseColor(cause.causeId));\n\n            legendItem.append('text')\n                .attr('x', 20)\n                .attr('y', 10)\n                .text(`${cause.causeId} - ${cause.causeName}`)\n                .style('font-size', '12px');\n        });\n\n        // Add title\n        svg.append('text')\n            .attr('x', chartWidth / 2)\n            .attr('y', -30)\n            .attr('text-anchor', 'middle')\n            .style('font-size', '16px')\n            .style('font-weight', 'bold')\n            .text('Top Fire Causes by Number of Fires');\n\n        // Create tooltip\n        const tooltip = d3.select('body')\n            .selectAll('.tooltip')\n            .data([null])\n            .join('div')\n            .attr('class', 'tooltip')\n            .style('opacity', 0);\n\n        // Add hover effects with safe access to properties\n        svg.selectAll('rect')\n            .on('mouseover', function (event, d) {\n                try {\n                    if (!d) return;\n\n                    d3.select(this)\n                        .transition()\n                        .duration(200)\n                        .attr('opacity', 0.8);\n\n                    tooltip.transition()\n                        .duration(200)\n                        .style('opacity', 0.9);\n\n                    tooltip.html(`\n            <strong>${d.causeId} - ${d.causeName}</strong><br/>\n            Fires: ${d.fires.toLocaleString()}<br/>\n            Acres Burned: ${d.acres.toLocaleString()}<br/>\n            Percentage: ${d.percentage}%\n          `)\n                        .style('left', (event.pageX + 10) + 'px')\n                        .style('top', (event.pageY - 28) + 'px');\n                } catch (error) {\n                    console.error('Error in top causes chart hover:', error);\n                }\n            })\n            .on('mouseout', function () {\n                d3.select(this)\n                    .transition()\n                    .duration(200)\n                    .attr('opacity', 1);\n\n                tooltip.transition()\n                    .duration(500)\n                    .style('opacity', 0);\n            });\n\n        // Add a button to show/hide all causes\n        d3.select(svgElement.parentNode)\n            .selectAll('.toggle-button')\n            .data([null])\n            .join('button')\n            .attr('class', 'toggle-button refresh-button')\n            .style('margin-top', '10px')\n            .style('margin-left', '10px')\n            .text(showAllCauses ? 'Show Top 8 Causes' : 'Show All Causes')\n            .on('click', function () {\n                setShowAllCauses(!showAllCauses);\n            });\n    };\n\n    const createCausesByYearChart = () => {\n        if (!causesByYearChartRef.current || !causesData || !selectedYear || !causesData[selectedYear]) return;\n\n        // Clear any existing chart\n        d3.select(causesByYearChartRef.current).selectAll('*').remove();\n\n        const yearData = causesData[selectedYear].causes;\n        if (!yearData || yearData.length === 0) return;\n\n        const margin = { top: 50, right: 180, bottom: 100, left: 90 };\n        const svgElement = causesByYearChartRef.current;\n        const width = getResponsiveWidth(svgElement);\n        const height = 400;\n        const chartWidth = width - margin.left - margin.right;\n        const chartHeight = height - margin.top - margin.bottom;\n\n        // Create SVG\n        const svg = d3.select(svgElement)\n            .attr('width', width)\n            .attr('height', height)\n            .append('g')\n            .attr('transform', `translate(${margin.left},${margin.top})`);\n\n        // Determine how many causes to show (show top 8 causes for this year)\n        const visibleCauses = yearData.slice(0, 8);\n\n        // Define scales\n        const xScale = d3.scaleBand()\n            .domain(visibleCauses.map(d => d.causeId))\n            .range([0, chartWidth])\n            .padding(0.2);\n\n        const yScale = d3.scaleLinear()\n            .domain([0, d3.max(visibleCauses, d => d.fires) * 1.1])\n            .range([chartHeight, 0]);\n\n        // Create axes\n        svg.append('g')\n            .attr('transform', `translate(0,${chartHeight})`)\n            .call(d3.axisBottom(xScale)\n                .tickFormat(d => {\n                    const cause = visibleCauses.find(c => c.causeId === d);\n                    return cause ? cause.causeId : '';\n                }))\n            .selectAll('text')\n            .attr('transform', 'rotate(-45)')\n            .style('text-anchor', 'end')\n            .attr('dx', '-.8em')\n            .attr('dy', '.15em');\n\n        svg.append('g')\n            .call(d3.axisLeft(yScale).tickFormat(d => formatLargeNumber(d)));\n\n        // Add grid lines\n        svg.append('g')\n            .attr('class', 'grid-lines')\n            .selectAll('line')\n            .data(yScale.ticks())\n            .enter()\n            .append('line')\n            .attr('x1', 0)\n            .attr('y1', d => yScale(d))\n            .attr('x2', chartWidth)\n            .attr('y2', d => yScale(d))\n            .attr('stroke', '#e5e7eb')\n            .attr('stroke-dasharray', '3,3');\n\n        // Add bars\n        svg.selectAll('bars')\n            .data(visibleCauses)\n            .enter()\n            .append('rect')\n            .attr('x', d => xScale(d.causeId))\n            .attr('y', d => yScale(d.fires))\n            .attr('width', xScale.bandwidth())\n            .attr('height', d => chartHeight - yScale(d.fires))\n            .attr('fill', d => getCauseColor(d.causeId))\n            .attr('rx', 4)\n            .attr('ry', 4)\n            .attr('cursor', 'pointer')\n            .on('click', (event, d) => {\n                try {\n                    if (!d) return;\n                    setSelectedCause(selectedCause === d.causeId ? null : d.causeId);\n                } catch (error) {\n                    console.error('Error handling click:', error);\n                }\n            });\n\n        // Highlight the selected cause\n        if (selectedCause) {\n            svg.selectAll('rect')\n                .attr('opacity', d => {\n                    try {\n                        return d.causeId === selectedCause ? 1 : 0.3;\n                    } catch (error) {\n                        return 1;\n                    }\n                });\n        }\n\n        // Add legend\n        const legend = svg.append('g')\n            .attr('class', 'legend')\n            .attr('transform', `translate(${chartWidth + 10}, 0)`);\n\n        visibleCauses.forEach((cause, i) => {\n            const legendItem = legend.append('g')\n                .attr('transform', `translate(0, ${i * 20})`);\n\n            legendItem.append('rect')\n                .attr('width', 12)\n                .attr('height', 12)\n                .attr('fill', getCauseColor(cause.causeId));\n\n            legendItem.append('text')\n                .attr('x', 20)\n                .attr('y', 10)\n                .text(`${cause.causeId} - ${cause.causeName}`)\n                .style('font-size', '12px');\n        });\n\n        // Add title\n        svg.append('text')\n            .attr('x', chartWidth / 2)\n            .attr('y', -30)\n            .attr('text-anchor', 'middle')\n            .style('font-size', '16px')\n            .style('font-weight', 'bold')\n            .text(`Top Fire Causes in ${selectedYear} (click to filter monthly chart)`);\n\n        // Create tooltip\n        const tooltip = d3.select('body')\n            .selectAll('.tooltip')\n            .data([null])\n            .join('div')\n            .attr('class', 'tooltip')\n            .style('opacity', 0);\n\n        // Add hover effects with defensive coding\n        svg.selectAll('rect')\n            .on('mouseover', function (event, d) {\n                try {\n                    if (!d) return;\n\n                    d3.select(this)\n                        .transition()\n                        .duration(200)\n                        .attr('opacity', d.causeId === selectedCause ? 1 : 0.5);\n\n                    tooltip.transition()\n                        .duration(200)\n                        .style('opacity', 0.9);\n\n                    const totalFires = yearData.reduce((sum, cause) => sum + cause.fires, 0);\n                    const percentage = Math.round((d.fires / totalFires) * 1000) / 10;\n\n                    tooltip.html(`\n            <strong>${d.causeId} - ${d.causeName}</strong><br/>\n            Fires: ${d.fires.toLocaleString()}<br/>\n            Acres Burned: ${d.acres.toLocaleString()}<br/>\n            Percentage: ${percentage}%<br/>\n            Click to filter monthly chart\n          `)\n                        .style('left', (event.pageX + 10) + 'px')\n                        .style('top', (event.pageY - 28) + 'px');\n                } catch (error) {\n                    console.error('Error in yearly causes chart hover:', error);\n                }\n            })\n            .on('mouseout', function (event, d) {\n                try {\n                    if (!d) return;\n\n                    d3.select(this)\n                        .transition()\n                        .duration(200)\n                        .attr('opacity', d.causeId === selectedCause ? 1 : (selectedCause ? 0.3 : 1));\n\n                    tooltip.transition()\n                        .duration(500)\n                        .style('opacity', 0);\n                } catch (error) {\n                    console.error('Error in mouseout handler:', error);\n                }\n            });\n    };\n\n    const createMonthlyCausesChart = () => {\n        if (!monthlyCausesChartRef.current || !causesData || !selectedYear || !causesData[selectedYear]) return;\n\n        // Clear any existing chart\n        d3.select(monthlyCausesChartRef.current).selectAll('*').remove();\n\n        const yearData = causesData[selectedYear];\n        if (!yearData || !yearData.monthlyBreakdown) return;\n\n        const months = [\n            'January', 'February', 'March', 'April', 'May', 'June',\n            'July', 'August', 'September', 'October', 'November', 'December'\n        ];\n\n        // Prepare data for stacked bar chart\n        const monthlyCausesData = months.map(month => {\n            const monthData = { month };\n\n            // Get monthly causes data\n            const monthCauses = yearData.monthlyBreakdown[month] || [];\n\n            // If a cause is selected, only include that cause\n            if (selectedCause !== null) {\n                const selectedCauseData = monthCauses.find(c => c.causeId === selectedCause);\n                if (selectedCauseData) {\n                    monthData[selectedCauseData.causeId] = selectedCauseData.fires;\n                } else {\n                    monthData[selectedCause] = 0;\n                }\n            } else {\n                // Otherwise include top 5 causes for this year\n                const topCausesForYear = yearData.causes.slice(0, 5).map(c => c.causeId);\n\n                topCausesForYear.forEach(causeId => {\n                    const causeData = monthCauses.find(c => c.causeId === causeId);\n                    monthData[causeId] = causeData ? causeData.fires : 0;\n                });\n            }\n\n            return monthData;\n        });\n\n        // Get cause IDs to stack\n        const causeIds = selectedCause !== null\n            ? [selectedCause]\n            : yearData.causes.slice(0, 5).map(c => c.causeId);\n\n        const margin = { top: 50, right: 180, bottom: 100, left: 90 };\n        const svgElement = monthlyCausesChartRef.current;\n        const width = getResponsiveWidth(svgElement);\n        const height = 400;\n        const chartWidth = width - margin.left - margin.right;\n        const chartHeight = height - margin.top - margin.bottom;\n\n        // Create SVG\n        const svg = d3.select(svgElement)\n            .attr('width', width)\n            .attr('height', height)\n            .append('g')\n            .attr('transform', `translate(${margin.left},${margin.top})`);\n\n        // Define scales\n        const xScale = d3.scaleBand()\n            .domain(months)\n            .range([0, chartWidth])\n            .padding(0.1);\n\n        const yScale = d3.scaleLinear()\n            .domain([0, d3.max(monthlyCausesData, d => {\n                return d3.sum(causeIds, causeId => d[causeId] || 0);\n            }) * 1.1])\n            .range([chartHeight, 0]);\n\n        // Create stacked data\n        const stack = d3.stack()\n            .keys(causeIds)\n            .order(d3.stackOrderNone)\n            .offset(d3.stackOffsetNone);\n\n        const stackedData = stack(monthlyCausesData);\n\n        // Create axes\n        svg.append('g')\n            .attr('transform', `translate(0,${chartHeight})`)\n            .call(d3.axisBottom(xScale))\n            .selectAll('text')\n            .attr('transform', 'rotate(-45)')\n            .style('text-anchor', 'end')\n            .attr('dx', '-.8em')\n            .attr('dy', '.15em')\n            .style('font-size', '10px');\n\n        svg.append('g')\n            .call(d3.axisLeft(yScale).tickFormat(d => formatLargeNumber(d)));\n\n        // Add grid lines\n        svg.append('g')\n            .attr('class', 'grid-lines')\n            .selectAll('line')\n            .data(yScale.ticks())\n            .enter()\n            .append('line')\n            .attr('x1', 0)\n            .attr('y1', d => yScale(d))\n            .attr('x2', chartWidth)\n            .attr('y2', d => yScale(d))\n            .attr('stroke', '#e5e7eb')\n            .attr('stroke-dasharray', '3,3');\n\n        // Add stacked bars\n        const stackGroups = svg.append('g')\n            .selectAll('g')\n            .data(stackedData)\n            .enter()\n            .append('g')\n            .attr('fill', d => getCauseColor(parseInt(d.key)));\n\n        // Store the stack group key in a data attribute for easier access in event handlers\n        stackGroups.each(function (d) {\n            d3.select(this).attr('data-key', d.key);\n        });\n\n        stackGroups.selectAll('rect')\n            .data(d => d)\n            .enter()\n            .append('rect')\n            .attr('x', d => xScale(d.data.month))\n            .attr('y', d => yScale(d[1]))\n            .attr('height', d => yScale(d[0]) - yScale(d[1]))\n            .attr('width', xScale.bandwidth());\n\n        // Add legend\n        const legend = svg.append('g')\n            .attr('class', 'legend')\n            .attr('transform', `translate(${chartWidth + 10}, 0)`);\n\n        causeIds.forEach((causeId, i) => {\n            const cause = yearData.causes.find(c => c.causeId === causeId) ||\n                { causeId, causeName: causeDefinitions[causeId] || `Unknown (${causeId})` };\n\n            const legendItem = legend.append('g')\n                .attr('transform', `translate(0, ${i * 20})`);\n\n            legendItem.append('rect')\n                .attr('width', 12)\n                .attr('height', 12)\n                .attr('fill', getCauseColor(causeId));\n\n            legendItem.append('text')\n                .attr('x', 20)\n                .attr('y', 10)\n                .text(`${causeId} - ${cause.causeName}`)\n                .style('font-size', '12px');\n        });\n\n        // Add title with more space\n        svg.append('text')\n            .attr('x', chartWidth / 2)\n            .attr('y', -30)\n            .attr('text-anchor', 'middle')\n            .style('font-size', '16px')\n            .style('font-weight', 'bold')\n            .text(selectedCause\n                ? `Monthly Distribution of \"${causeDefinitions[selectedCause]}\" Fires in ${selectedYear}`\n                : `Monthly Distribution of Top Fire Causes in ${selectedYear}`);\n\n        // Create tooltip\n        const tooltip = d3.select('body')\n            .selectAll('.tooltip')\n            .data([null])\n            .join('div')\n            .attr('class', 'tooltip')\n            .style('opacity', 0);\n\n        // Enhanced hover event handlers with error handling\n        svg.selectAll('rect')\n            .on('mouseover', function (event, d) {\n                try {\n                    if (!d || !d.data) return;\n\n                    d3.select(this)\n                        .transition()\n                        .duration(200)\n                        .attr('opacity', 0.8);\n\n                    // Get the cause ID from the parent group's data-key attribute\n                    const parentGroup = this.parentNode;\n                    if (!parentGroup) return;\n\n                    const causeIdStr = d3.select(parentGroup).attr('data-key');\n                    if (!causeIdStr) return;\n\n                    const causeId = parseInt(causeIdStr);\n                    const causeName = causeDefinitions[causeId] || `Unknown (${causeId})`;\n                    const monthData = d.data;\n\n                    tooltip.transition()\n                        .duration(200)\n                        .style('opacity', 0.9);\n\n                    tooltip.html(`\n            <strong>${monthData.month} ${selectedYear}</strong><br/>\n            Cause: ${causeId} - ${causeName}<br/>\n            Fires: ${(monthData[causeId] || 0).toLocaleString()}\n          `)\n                        .style('left', (event.pageX + 10) + 'px')\n                        .style('top', (event.pageY - 28) + 'px');\n                } catch (error) {\n                    console.error('Error in monthly causes chart hover:', error);\n                }\n            })\n            .on('mouseout', function () {\n                d3.select(this)\n                    .transition()\n                    .duration(200)\n                    .attr('opacity', 1);\n\n                tooltip.transition()\n                    .duration(500)\n                    .style('opacity', 0);\n            });\n\n        // Add a button to clear the selected cause filter\n        if (selectedCause !== null) {\n            d3.select(svgElement.parentNode)\n                .selectAll('.clear-filter-button')\n                .data([null])\n                .join('button')\n                .attr('class', 'clear-filter-button refresh-button')\n                .style('margin-top', '10px')\n                .style('margin-left', '10px')\n                .text('Clear Cause Filter')\n                .on('click', function () {\n                    setSelectedCause(null);\n                });\n        }\n    };\n\n    // Create a table of fire causes with their descriptions\n    const renderCauseDefinitionsTable = () => {\n        return (\n            <div className=\"chart-container\">\n                <h3 className=\"section-title\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                    </svg>\n                    Fire Cause Reference Guide\n                </h3>\n                <div className=\"chart-description\">\n                    Reference of fire cause codes and their definitions as per CAL FIRE classification.\n                </div>\n                <div className=\"data-table\">\n                    <table className=\"monthly-table\">\n                        <thead>\n                            <tr>\n                                <th>Code</th>\n                                <th>Cause Name</th>\n                                <th>Description</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {Object.entries(causeDefinitions).map(([code, name]) => (\n                                <tr key={code}>\n                                    <td>{code}</td>\n                                    <td>{name}</td>\n                                    <td>{getCauseDescription(parseInt(code))}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    };\n\n    // Helper function to provide descriptions for fire causes\n    const getCauseDescription = (causeId) => {\n        switch (causeId) {\n            case 1: return \"Fires caused by natural lightning strikes.\";\n            case 2: return \"Fires caused by equipment use, such as chainsaws, tractors, or other machinery.\";\n            case 3: return \"Fires caused by improperly discarded cigarettes, cigars, or other smoking materials.\";\n            case 4: return \"Fires that escape from recreational or warming campfires.\";\n            case 5: return \"Fires from burning of yard waste or other debris that escape control.\";\n            case 6: return \"Fires caused by railroad operations, such as sparks from train wheels or maintenance.\";\n            case 7: return \"Fires intentionally set by individuals with malicious intent.\";\n            case 8: return \"Fires caused by children or others playing with matches, lighters, or fire.\";\n            case 9: return \"Fires that don't fall into other specific categories.\";\n            case 10: return \"Fires caused by vehicles, including exhaust systems, catalytic converters, or accidents.\";\n            case 11: return \"Fires caused by electrical power lines or related equipment.\";\n            case 12: return \"Fires that occur during official firefighter training exercises.\";\n            case 13: return \"Fires that occur during non-firefighter training exercises or activities.\";\n            case 14: return \"Fires where the cause could not be determined after investigation.\";\n            case 15: return \"Fires that start from structures and spread to wildland areas.\";\n            case 16: return \"Fires caused by aircraft crashes or related incidents.\";\n            case 17: return \"Fires caused by volcanic activity.\";\n            case 18: return \"Controlled burns that escape their intended boundaries.\";\n            case 19: return \"Fires specifically linked to campfires made by undocumented immigrants.\";\n            default: return \"No description available.\";\n        }\n    };\n\n    return (\n        <div className=\"fire-causes-dashboard\">\n            <div className=\"dashboard-header\">\n                <h2 className=\"dashboard-title\">Fire Cause Analysis Dashboard</h2>\n                <p className=\"dashboard-description\">\n                    Analysis of wildfire causes across years and seasons, identifying top contributors to fire ignitions\n                </p>\n            </div>\n\n            {/* Year selector and summary */}\n            <div className=\"year-selection-container\">\n                <div className=\"year-selector\">\n                    <label htmlFor=\"cause-year-select\" className=\"year-selector-label\">Select Year for Analysis:</label>\n                    <select\n                        id=\"cause-year-select\"\n                        className=\"year-selector-dropdown\"\n                        value={selectedYear || ''}\n                        onChange={(e) => onYearChange(e.target.value)}\n                        disabled={availableYears.length === 0}\n                    >\n                        {availableYears.map(year => (\n                            <option key={year} value={year}>\n                                {year}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                <div className=\"year-summary\">\n                    <div className=\"year-summary-item\">\n                        <div className=\"summary-label\">Selected Year:</div>\n                        <div className=\"summary-value\">{selectedYear || 'All Years'}</div>\n                    </div>\n                    {selectedCause && (\n                        <div className=\"year-summary-item\">\n                            <div className=\"summary-label\">Filtered Cause:</div>\n                            <div className=\"summary-value\">{selectedCause}</div>\n                        </div>\n                    )}\n                    <div className=\"refresh-button-container\">\n                        <button className=\"refresh-button\" onClick={onRefresh}>\n                            Refresh Data\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"chart-section\">\n                <div className=\"chart-container\">\n                    <h3 className=\"section-title\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                        </svg>\n                        Top Fire Causes\n                    </h3>\n                    <div className=\"chart-description\">\n                        Analysis of the top fire causes based on the number of fires and acres burned.\n                    </div>\n                    <svg ref={topCausesChartRef} className=\"chart-svg\"></svg>\n                </div>\n            </div>\n            <div className=\"chart-section\">\n                <div className=\"chart-container\">\n                    <h3 className=\"section-title\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                        </svg>\n                        Top Fire Causes by Year\n                    </h3>\n                    <div className=\"chart-description\">\n                        Analysis of the top fire causes for the selected year.\n                    </div>\n                    <svg ref={causesByYearChartRef} className=\"chart-svg\"></svg>\n                </div>\n            </div>\n            <div className=\"chart-section\">\n                <div className=\"chart-container\">\n                    <h3 className=\"section-title\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                        </svg>\n                        Monthly Fire Causes\n                    </h3>\n                    <div className=\"chart-description\">\n                        Monthly breakdown of fire causes for the selected year.\n                    </div>\n                    <svg ref={monthlyCausesChartRef} className=\"chart-svg\"></svg>\n                </div>\n            </div>\n            {renderCauseDefinitionsTable()}\n        </div>\n    );\n}\n\nexport default FireCauseAnalysisDashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,OAAO,MAAMC,0BAA0B,GAAGA,CAAC;EACvCC,UAAU;EACVC,SAAS;EACTC,gBAAgB;EAChBC,YAAY;EACZC,cAAc;EACdC,YAAY;EACZC;AACJ,CAAC,KAAK;EAAAC,EAAA;EACF,MAAMC,iBAAiB,GAAGd,MAAM,CAAC,IAAI,CAAC;EACtC,MAAMe,oBAAoB,GAAGf,MAAM,CAAC,IAAI,CAAC;EACzC,MAAMgB,qBAAqB,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEzDF,SAAS,CAAC,MAAM;IACZ,IAAIQ,SAAS,IAAIA,SAAS,CAACc,MAAM,GAAG,CAAC,EAAE;MACnCC,oBAAoB,CAAC,CAAC;IAC1B;EACJ,CAAC,EAAE,CAACf,SAAS,EAAEY,aAAa,CAAC,CAAC;EAE9BpB,SAAS,CAAC,MAAM;IACZ,IAAIO,UAAU,IAAIG,YAAY,IAAIH,UAAU,CAACG,YAAY,CAAC,EAAE;MACxDc,uBAAuB,CAAC,CAAC;MACzBC,wBAAwB,CAAC,CAAC;IAC9B;EACJ,CAAC,EAAE,CAAClB,UAAU,EAAEG,YAAY,EAAEQ,aAAa,CAAC,CAAC;;EAE7C;EACA,MAAMQ,iBAAiB,GAAIC,GAAG,IAAK;IAC/B,IAAIA,GAAG,IAAI,OAAO,EAAE;MAChB,OAAO,GAAG,CAACA,GAAG,GAAG,OAAO,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG;IAC3C,CAAC,MAAM,IAAID,GAAG,IAAI,IAAI,EAAE;MACpB,OAAO,GAAG,CAACA,GAAG,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG;IACxC;IACA,OAAOD,GAAG;EACd,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IACxB,OAAO1B,EAAE,CAAC2B,YAAY,CAAC,CAAC,CACnBC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAC3EC,KAAK,CAAC,CACH,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAChE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAChE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAC9E,CAAC;EACV,CAAC;EAED,MAAMC,aAAa,GAAIC,OAAO,IAAK;IAC/B,MAAMC,UAAU,GAAGN,aAAa,CAAC,CAAC;IAClC,OAAOM,UAAU,CAACD,OAAO,CAAC;EAC9B,CAAC;EAED,MAAMX,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,IAAI,CAACR,iBAAiB,CAACqB,OAAO,EAAE;;IAEhC;IACAjC,EAAE,CAACkC,MAAM,CAACtB,iBAAiB,CAACqB,OAAO,CAAC,CAACE,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;IAE5D,MAAMC,MAAM,GAAG;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAG,CAAC;IAC7D,MAAMC,UAAU,GAAG9B,iBAAiB,CAACqB,OAAO;IAC5C,MAAMU,KAAK,GAAGC,kBAAkB,CAACF,UAAU,CAAC;IAC5C,MAAMG,MAAM,GAAG,GAAG;IAClB,MAAMC,UAAU,GAAGH,KAAK,GAAGN,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACE,KAAK;IACrD,MAAMQ,WAAW,GAAGF,MAAM,GAAGR,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACG,MAAM;;IAEvD;IACA,MAAMQ,GAAG,GAAGhD,EAAE,CAACkC,MAAM,CAACQ,UAAU,CAAC,CAC5BO,IAAI,CAAC,OAAO,EAAEN,KAAK,CAAC,CACpBM,IAAI,CAAC,QAAQ,EAAEJ,MAAM,CAAC,CACtBK,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,WAAW,EAAE,aAAaZ,MAAM,CAACI,IAAI,IAAIJ,MAAM,CAACC,GAAG,GAAG,CAAC;;IAEjE;IACA,MAAMa,aAAa,GAAGlC,aAAa,GAAGZ,SAAS,GAAGA,SAAS,CAAC+C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;;IAEvE;IACA,MAAMC,MAAM,GAAGrD,EAAE,CAACsD,SAAS,CAAC,CAAC,CACxB1B,MAAM,CAACuB,aAAa,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACzB,OAAO,CAAC,CAAC,CACzCF,KAAK,CAAC,CAAC,CAAC,EAAEiB,UAAU,CAAC,CAAC,CACtBW,OAAO,CAAC,GAAG,CAAC;IAEjB,MAAMC,MAAM,GAAG1D,EAAE,CAAC2D,WAAW,CAAC,CAAC,CAC1B/B,MAAM,CAAC,CAAC,CAAC,EAAE5B,EAAE,CAAC4D,GAAG,CAACT,aAAa,EAAEK,CAAC,IAAIA,CAAC,CAACK,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CACtDhC,KAAK,CAAC,CAACkB,WAAW,EAAE,CAAC,CAAC,CAAC;;IAE5B;IACAC,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACVD,IAAI,CAAC,WAAW,EAAE,eAAeF,WAAW,GAAG,CAAC,CAChDe,IAAI,CAAC9D,EAAE,CAAC+D,UAAU,CAACV,MAAM,CAAC,CACtBW,UAAU,CAACR,CAAC,IAAI;MACb,MAAMS,KAAK,GAAGd,aAAa,CAACe,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpC,OAAO,KAAKyB,CAAC,CAAC;MACtD,OAAOS,KAAK,GAAGA,KAAK,CAAClC,OAAO,GAAG,EAAE;IACrC,CAAC,CAAC,CAAC,CACNI,SAAS,CAAC,MAAM,CAAC,CACjBc,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC,CAChCmB,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,CAC3BnB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CACnBA,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;IAExBD,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACVY,IAAI,CAAC9D,EAAE,CAACqE,QAAQ,CAACX,MAAM,CAAC,CAACM,UAAU,CAACR,CAAC,IAAIjC,iBAAiB,CAACiC,CAAC,CAAC,CAAC,CAAC;;IAEpE;IACAR,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACVD,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAC3Bd,SAAS,CAAC,MAAM,CAAC,CACjBmC,IAAI,CAACZ,MAAM,CAACa,KAAK,CAAC,CAAC,CAAC,CACpBC,KAAK,CAAC,CAAC,CACPtB,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CACbA,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAIE,MAAM,CAACF,CAAC,CAAC,CAAC,CAC1BP,IAAI,CAAC,IAAI,EAAEH,UAAU,CAAC,CACtBG,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAIE,MAAM,CAACF,CAAC,CAAC,CAAC,CAC1BP,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CACzBA,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC;;IAEpC;IACAD,GAAG,CAACb,SAAS,CAAC,MAAM,CAAC,CAChBmC,IAAI,CAACnB,aAAa,CAAC,CACnBqB,KAAK,CAAC,CAAC,CACPtB,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,GAAG,EAAEO,CAAC,IAAIH,MAAM,CAACG,CAAC,CAACzB,OAAO,CAAC,CAAC,CACjCkB,IAAI,CAAC,GAAG,EAAEO,CAAC,IAAIE,MAAM,CAACF,CAAC,CAACK,KAAK,CAAC,CAAC,CAC/BZ,IAAI,CAAC,OAAO,EAAEI,MAAM,CAACoB,SAAS,CAAC,CAAC,CAAC,CACjCxB,IAAI,CAAC,QAAQ,EAAEO,CAAC,IAAIT,WAAW,GAAGW,MAAM,CAACF,CAAC,CAACK,KAAK,CAAC,CAAC,CAClDZ,IAAI,CAAC,MAAM,EAAEO,CAAC,IAAI1B,aAAa,CAAC0B,CAAC,CAACzB,OAAO,CAAC,CAAC,CAC3CkB,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CACbA,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;;IAElB;IACAD,GAAG,CAACb,SAAS,CAAC,gBAAgB,CAAC,CAC1BmC,IAAI,CAACnB,aAAa,CAAC,CACnBqB,KAAK,CAAC,CAAC,CACPtB,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,GAAG,EAAEO,CAAC,IAAIH,MAAM,CAACG,CAAC,CAACzB,OAAO,CAAC,GAAGsB,MAAM,CAACoB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAC1DxB,IAAI,CAAC,GAAG,EAAEO,CAAC,IAAIE,MAAM,CAACF,CAAC,CAACK,KAAK,CAAC,GAAG,EAAE,CAAC,CACpCZ,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7ByB,IAAI,CAAClB,CAAC,IAAI,GAAGA,CAAC,CAACmB,UAAU,GAAG,CAAC,CAC7BP,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAC1BA,KAAK,CAAC,aAAa,EAAE,MAAM,CAAC;;IAEjC;IACA,MAAMQ,MAAM,GAAG5B,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACzBD,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CACvBA,IAAI,CAAC,WAAW,EAAE,aAAaH,UAAU,GAAG,EAAE,MAAM,CAAC;IAE1DK,aAAa,CAAC0B,OAAO,CAAC,CAACZ,KAAK,EAAEa,CAAC,KAAK;MAChC,MAAMC,UAAU,GAAGH,MAAM,CAAC1B,MAAM,CAAC,GAAG,CAAC,CAChCD,IAAI,CAAC,WAAW,EAAE,gBAAgB6B,CAAC,GAAG,EAAE,GAAG,CAAC;MAEjDC,UAAU,CAAC7B,MAAM,CAAC,MAAM,CAAC,CACpBD,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CACjBA,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAClBA,IAAI,CAAC,MAAM,EAAEnB,aAAa,CAACmC,KAAK,CAAClC,OAAO,CAAC,CAAC;MAE/CgD,UAAU,CAAC7B,MAAM,CAAC,MAAM,CAAC,CACpBD,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbA,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbyB,IAAI,CAAC,GAAGT,KAAK,CAAClC,OAAO,MAAMkC,KAAK,CAACe,SAAS,EAAE,CAAC,CAC7CZ,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC;IACnC,CAAC,CAAC;;IAEF;IACApB,GAAG,CAACE,MAAM,CAAC,MAAM,CAAC,CACbD,IAAI,CAAC,GAAG,EAAEH,UAAU,GAAG,CAAC,CAAC,CACzBG,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CACdA,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BmB,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAC1BA,KAAK,CAAC,aAAa,EAAE,MAAM,CAAC,CAC5BM,IAAI,CAAC,oCAAoC,CAAC;;IAE/C;IACA,MAAMO,OAAO,GAAGjF,EAAE,CAACkC,MAAM,CAAC,MAAM,CAAC,CAC5BC,SAAS,CAAC,UAAU,CAAC,CACrBmC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CACZY,IAAI,CAAC,KAAK,CAAC,CACXjC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CACxBmB,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;;IAExB;IACApB,GAAG,CAACb,SAAS,CAAC,MAAM,CAAC,CAChBgD,EAAE,CAAC,WAAW,EAAE,UAAUC,KAAK,EAAE5B,CAAC,EAAE;MACjC,IAAI;QACA,IAAI,CAACA,CAAC,EAAE;QAERxD,EAAE,CAACkC,MAAM,CAAC,IAAI,CAAC,CACVmD,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,GAAG,CAAC,CACbrC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC;QAEzBgC,OAAO,CAACI,UAAU,CAAC,CAAC,CACfC,QAAQ,CAAC,GAAG,CAAC,CACblB,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC;QAE1Ba,OAAO,CAACM,IAAI,CAAC;AACjC,sBAAsB/B,CAAC,CAACzB,OAAO,MAAMyB,CAAC,CAACwB,SAAS;AAChD,qBAAqBxB,CAAC,CAACK,KAAK,CAAC2B,cAAc,CAAC,CAAC;AAC7C,4BAA4BhC,CAAC,CAACiC,KAAK,CAACD,cAAc,CAAC,CAAC;AACpD,0BAA0BhC,CAAC,CAACmB,UAAU;AACtC,WAAW,CAAC,CACaP,KAAK,CAAC,MAAM,EAAGgB,KAAK,CAACM,KAAK,GAAG,EAAE,GAAI,IAAI,CAAC,CACxCtB,KAAK,CAAC,KAAK,EAAGgB,KAAK,CAACO,KAAK,GAAG,EAAE,GAAI,IAAI,CAAC;MAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC5D;IACJ,CAAC,CAAC,CACDT,EAAE,CAAC,UAAU,EAAE,YAAY;MACxBnF,EAAE,CAACkC,MAAM,CAAC,IAAI,CAAC,CACVmD,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,GAAG,CAAC,CACbrC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;MAEvBgC,OAAO,CAACI,UAAU,CAAC,CAAC,CACfC,QAAQ,CAAC,GAAG,CAAC,CACblB,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IAC5B,CAAC,CAAC;;IAEN;IACApE,EAAE,CAACkC,MAAM,CAACQ,UAAU,CAACoD,UAAU,CAAC,CAC3B3D,SAAS,CAAC,gBAAgB,CAAC,CAC3BmC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CACZY,IAAI,CAAC,QAAQ,CAAC,CACdjC,IAAI,CAAC,OAAO,EAAE,8BAA8B,CAAC,CAC7CmB,KAAK,CAAC,YAAY,EAAE,MAAM,CAAC,CAC3BA,KAAK,CAAC,aAAa,EAAE,MAAM,CAAC,CAC5BM,IAAI,CAACzD,aAAa,GAAG,mBAAmB,GAAG,iBAAiB,CAAC,CAC7DkE,EAAE,CAAC,OAAO,EAAE,YAAY;MACrBjE,gBAAgB,CAAC,CAACD,aAAa,CAAC;IACpC,CAAC,CAAC;EACV,CAAC;EAED,MAAMI,uBAAuB,GAAGA,CAAA,KAAM;IAClC,IAAI,CAACR,oBAAoB,CAACoB,OAAO,IAAI,CAAC7B,UAAU,IAAI,CAACG,YAAY,IAAI,CAACH,UAAU,CAACG,YAAY,CAAC,EAAE;;IAEhG;IACAP,EAAE,CAACkC,MAAM,CAACrB,oBAAoB,CAACoB,OAAO,CAAC,CAACE,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;IAE/D,MAAM2D,QAAQ,GAAG3F,UAAU,CAACG,YAAY,CAAC,CAACyF,MAAM;IAChD,IAAI,CAACD,QAAQ,IAAIA,QAAQ,CAAC5E,MAAM,KAAK,CAAC,EAAE;IAExC,MAAMkB,MAAM,GAAG;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAG,CAAC;IAC7D,MAAMC,UAAU,GAAG7B,oBAAoB,CAACoB,OAAO;IAC/C,MAAMU,KAAK,GAAGC,kBAAkB,CAACF,UAAU,CAAC;IAC5C,MAAMG,MAAM,GAAG,GAAG;IAClB,MAAMC,UAAU,GAAGH,KAAK,GAAGN,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACE,KAAK;IACrD,MAAMQ,WAAW,GAAGF,MAAM,GAAGR,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACG,MAAM;;IAEvD;IACA,MAAMQ,GAAG,GAAGhD,EAAE,CAACkC,MAAM,CAACQ,UAAU,CAAC,CAC5BO,IAAI,CAAC,OAAO,EAAEN,KAAK,CAAC,CACpBM,IAAI,CAAC,QAAQ,EAAEJ,MAAM,CAAC,CACtBK,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,WAAW,EAAE,aAAaZ,MAAM,CAACI,IAAI,IAAIJ,MAAM,CAACC,GAAG,GAAG,CAAC;;IAEjE;IACA,MAAMa,aAAa,GAAG4C,QAAQ,CAAC3C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;;IAE1C;IACA,MAAMC,MAAM,GAAGrD,EAAE,CAACsD,SAAS,CAAC,CAAC,CACxB1B,MAAM,CAACuB,aAAa,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACzB,OAAO,CAAC,CAAC,CACzCF,KAAK,CAAC,CAAC,CAAC,EAAEiB,UAAU,CAAC,CAAC,CACtBW,OAAO,CAAC,GAAG,CAAC;IAEjB,MAAMC,MAAM,GAAG1D,EAAE,CAAC2D,WAAW,CAAC,CAAC,CAC1B/B,MAAM,CAAC,CAAC,CAAC,EAAE5B,EAAE,CAAC4D,GAAG,CAACT,aAAa,EAAEK,CAAC,IAAIA,CAAC,CAACK,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CACtDhC,KAAK,CAAC,CAACkB,WAAW,EAAE,CAAC,CAAC,CAAC;;IAE5B;IACAC,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACVD,IAAI,CAAC,WAAW,EAAE,eAAeF,WAAW,GAAG,CAAC,CAChDe,IAAI,CAAC9D,EAAE,CAAC+D,UAAU,CAACV,MAAM,CAAC,CACtBW,UAAU,CAACR,CAAC,IAAI;MACb,MAAMS,KAAK,GAAGd,aAAa,CAACe,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpC,OAAO,KAAKyB,CAAC,CAAC;MACtD,OAAOS,KAAK,GAAGA,KAAK,CAAClC,OAAO,GAAG,EAAE;IACrC,CAAC,CAAC,CAAC,CACNI,SAAS,CAAC,MAAM,CAAC,CACjBc,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC,CAChCmB,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,CAC3BnB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CACnBA,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;IAExBD,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACVY,IAAI,CAAC9D,EAAE,CAACqE,QAAQ,CAACX,MAAM,CAAC,CAACM,UAAU,CAACR,CAAC,IAAIjC,iBAAiB,CAACiC,CAAC,CAAC,CAAC,CAAC;;IAEpE;IACAR,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACVD,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAC3Bd,SAAS,CAAC,MAAM,CAAC,CACjBmC,IAAI,CAACZ,MAAM,CAACa,KAAK,CAAC,CAAC,CAAC,CACpBC,KAAK,CAAC,CAAC,CACPtB,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CACbA,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAIE,MAAM,CAACF,CAAC,CAAC,CAAC,CAC1BP,IAAI,CAAC,IAAI,EAAEH,UAAU,CAAC,CACtBG,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAIE,MAAM,CAACF,CAAC,CAAC,CAAC,CAC1BP,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CACzBA,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC;;IAEpC;IACAD,GAAG,CAACb,SAAS,CAAC,MAAM,CAAC,CAChBmC,IAAI,CAACnB,aAAa,CAAC,CACnBqB,KAAK,CAAC,CAAC,CACPtB,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,GAAG,EAAEO,CAAC,IAAIH,MAAM,CAACG,CAAC,CAACzB,OAAO,CAAC,CAAC,CACjCkB,IAAI,CAAC,GAAG,EAAEO,CAAC,IAAIE,MAAM,CAACF,CAAC,CAACK,KAAK,CAAC,CAAC,CAC/BZ,IAAI,CAAC,OAAO,EAAEI,MAAM,CAACoB,SAAS,CAAC,CAAC,CAAC,CACjCxB,IAAI,CAAC,QAAQ,EAAEO,CAAC,IAAIT,WAAW,GAAGW,MAAM,CAACF,CAAC,CAACK,KAAK,CAAC,CAAC,CAClDZ,IAAI,CAAC,MAAM,EAAEO,CAAC,IAAI1B,aAAa,CAAC0B,CAAC,CAACzB,OAAO,CAAC,CAAC,CAC3CkB,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CACbA,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CACbA,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CACzBkC,EAAE,CAAC,OAAO,EAAE,CAACC,KAAK,EAAE5B,CAAC,KAAK;MACvB,IAAI;QACA,IAAI,CAACA,CAAC,EAAE;QACRxC,gBAAgB,CAACD,aAAa,KAAKyC,CAAC,CAACzB,OAAO,GAAG,IAAI,GAAGyB,CAAC,CAACzB,OAAO,CAAC;MACpE,CAAC,CAAC,OAAO6D,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC,CAAC;;IAEN;IACA,IAAI7E,aAAa,EAAE;MACfiC,GAAG,CAACb,SAAS,CAAC,MAAM,CAAC,CAChBc,IAAI,CAAC,SAAS,EAAEO,CAAC,IAAI;QAClB,IAAI;UACA,OAAOA,CAAC,CAACzB,OAAO,KAAKhB,aAAa,GAAG,CAAC,GAAG,GAAG;QAChD,CAAC,CAAC,OAAO6E,KAAK,EAAE;UACZ,OAAO,CAAC;QACZ;MACJ,CAAC,CAAC;IACV;;IAEA;IACA,MAAMhB,MAAM,GAAG5B,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACzBD,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CACvBA,IAAI,CAAC,WAAW,EAAE,aAAaH,UAAU,GAAG,EAAE,MAAM,CAAC;IAE1DK,aAAa,CAAC0B,OAAO,CAAC,CAACZ,KAAK,EAAEa,CAAC,KAAK;MAChC,MAAMC,UAAU,GAAGH,MAAM,CAAC1B,MAAM,CAAC,GAAG,CAAC,CAChCD,IAAI,CAAC,WAAW,EAAE,gBAAgB6B,CAAC,GAAG,EAAE,GAAG,CAAC;MAEjDC,UAAU,CAAC7B,MAAM,CAAC,MAAM,CAAC,CACpBD,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CACjBA,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAClBA,IAAI,CAAC,MAAM,EAAEnB,aAAa,CAACmC,KAAK,CAAClC,OAAO,CAAC,CAAC;MAE/CgD,UAAU,CAAC7B,MAAM,CAAC,MAAM,CAAC,CACpBD,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbA,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbyB,IAAI,CAAC,GAAGT,KAAK,CAAClC,OAAO,MAAMkC,KAAK,CAACe,SAAS,EAAE,CAAC,CAC7CZ,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC;IACnC,CAAC,CAAC;;IAEF;IACApB,GAAG,CAACE,MAAM,CAAC,MAAM,CAAC,CACbD,IAAI,CAAC,GAAG,EAAEH,UAAU,GAAG,CAAC,CAAC,CACzBG,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CACdA,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BmB,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAC1BA,KAAK,CAAC,aAAa,EAAE,MAAM,CAAC,CAC5BM,IAAI,CAAC,sBAAsBnE,YAAY,kCAAkC,CAAC;;IAE/E;IACA,MAAM0E,OAAO,GAAGjF,EAAE,CAACkC,MAAM,CAAC,MAAM,CAAC,CAC5BC,SAAS,CAAC,UAAU,CAAC,CACrBmC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CACZY,IAAI,CAAC,KAAK,CAAC,CACXjC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CACxBmB,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;;IAExB;IACApB,GAAG,CAACb,SAAS,CAAC,MAAM,CAAC,CAChBgD,EAAE,CAAC,WAAW,EAAE,UAAUC,KAAK,EAAE5B,CAAC,EAAE;MACjC,IAAI;QACA,IAAI,CAACA,CAAC,EAAE;QAERxD,EAAE,CAACkC,MAAM,CAAC,IAAI,CAAC,CACVmD,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,GAAG,CAAC,CACbrC,IAAI,CAAC,SAAS,EAAEO,CAAC,CAACzB,OAAO,KAAKhB,aAAa,GAAG,CAAC,GAAG,GAAG,CAAC;QAE3DkE,OAAO,CAACI,UAAU,CAAC,CAAC,CACfC,QAAQ,CAAC,GAAG,CAAC,CACblB,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC;QAE1B,MAAM6B,UAAU,GAAGF,QAAQ,CAACG,MAAM,CAAC,CAACC,GAAG,EAAElC,KAAK,KAAKkC,GAAG,GAAGlC,KAAK,CAACJ,KAAK,EAAE,CAAC,CAAC;QACxE,MAAMc,UAAU,GAAGyB,IAAI,CAACC,KAAK,CAAE7C,CAAC,CAACK,KAAK,GAAGoC,UAAU,GAAI,IAAI,CAAC,GAAG,EAAE;QAEjEhB,OAAO,CAACM,IAAI,CAAC;AACjC,sBAAsB/B,CAAC,CAACzB,OAAO,MAAMyB,CAAC,CAACwB,SAAS;AAChD,qBAAqBxB,CAAC,CAACK,KAAK,CAAC2B,cAAc,CAAC,CAAC;AAC7C,4BAA4BhC,CAAC,CAACiC,KAAK,CAACD,cAAc,CAAC,CAAC;AACpD,0BAA0Bb,UAAU;AACpC;AACA,WAAW,CAAC,CACaP,KAAK,CAAC,MAAM,EAAGgB,KAAK,CAACM,KAAK,GAAG,EAAE,GAAI,IAAI,CAAC,CACxCtB,KAAK,CAAC,KAAK,EAAGgB,KAAK,CAACO,KAAK,GAAG,EAAE,GAAI,IAAI,CAAC;MAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC/D;IACJ,CAAC,CAAC,CACDT,EAAE,CAAC,UAAU,EAAE,UAAUC,KAAK,EAAE5B,CAAC,EAAE;MAChC,IAAI;QACA,IAAI,CAACA,CAAC,EAAE;QAERxD,EAAE,CAACkC,MAAM,CAAC,IAAI,CAAC,CACVmD,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,GAAG,CAAC,CACbrC,IAAI,CAAC,SAAS,EAAEO,CAAC,CAACzB,OAAO,KAAKhB,aAAa,GAAG,CAAC,GAAIA,aAAa,GAAG,GAAG,GAAG,CAAE,CAAC;QAEjFkE,OAAO,CAACI,UAAU,CAAC,CAAC,CACfC,QAAQ,CAAC,GAAG,CAAC,CACblB,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;MAC5B,CAAC,CAAC,OAAOwB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACJ,CAAC,CAAC;EACV,CAAC;EAED,MAAMtE,wBAAwB,GAAGA,CAAA,KAAM;IACnC,IAAI,CAACR,qBAAqB,CAACmB,OAAO,IAAI,CAAC7B,UAAU,IAAI,CAACG,YAAY,IAAI,CAACH,UAAU,CAACG,YAAY,CAAC,EAAE;;IAEjG;IACAP,EAAE,CAACkC,MAAM,CAACpB,qBAAqB,CAACmB,OAAO,CAAC,CAACE,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;IAEhE,MAAM2D,QAAQ,GAAG3F,UAAU,CAACG,YAAY,CAAC;IACzC,IAAI,CAACwF,QAAQ,IAAI,CAACA,QAAQ,CAACO,gBAAgB,EAAE;IAE7C,MAAMC,MAAM,GAAG,CACX,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACtD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CACnE;;IAED;IACA,MAAMC,iBAAiB,GAAGD,MAAM,CAAChD,GAAG,CAACkD,KAAK,IAAI;MAC1C,MAAMC,SAAS,GAAG;QAAED;MAAM,CAAC;;MAE3B;MACA,MAAME,WAAW,GAAGZ,QAAQ,CAACO,gBAAgB,CAACG,KAAK,CAAC,IAAI,EAAE;;MAE1D;MACA,IAAI1F,aAAa,KAAK,IAAI,EAAE;QACxB,MAAM6F,iBAAiB,GAAGD,WAAW,CAACzC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpC,OAAO,KAAKhB,aAAa,CAAC;QAC5E,IAAI6F,iBAAiB,EAAE;UACnBF,SAAS,CAACE,iBAAiB,CAAC7E,OAAO,CAAC,GAAG6E,iBAAiB,CAAC/C,KAAK;QAClE,CAAC,MAAM;UACH6C,SAAS,CAAC3F,aAAa,CAAC,GAAG,CAAC;QAChC;MACJ,CAAC,MAAM;QACH;QACA,MAAM8F,gBAAgB,GAAGd,QAAQ,CAACC,MAAM,CAAC5C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACG,GAAG,CAACY,CAAC,IAAIA,CAAC,CAACpC,OAAO,CAAC;QAExE8E,gBAAgB,CAAChC,OAAO,CAAC9C,OAAO,IAAI;UAChC,MAAM+E,SAAS,GAAGH,WAAW,CAACzC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpC,OAAO,KAAKA,OAAO,CAAC;UAC9D2E,SAAS,CAAC3E,OAAO,CAAC,GAAG+E,SAAS,GAAGA,SAAS,CAACjD,KAAK,GAAG,CAAC;QACxD,CAAC,CAAC;MACN;MAEA,OAAO6C,SAAS;IACpB,CAAC,CAAC;;IAEF;IACA,MAAMK,QAAQ,GAAGhG,aAAa,KAAK,IAAI,GACjC,CAACA,aAAa,CAAC,GACfgF,QAAQ,CAACC,MAAM,CAAC5C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACG,GAAG,CAACY,CAAC,IAAIA,CAAC,CAACpC,OAAO,CAAC;IAErD,MAAMM,MAAM,GAAG;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAG,CAAC;IAC7D,MAAMC,UAAU,GAAG5B,qBAAqB,CAACmB,OAAO;IAChD,MAAMU,KAAK,GAAGC,kBAAkB,CAACF,UAAU,CAAC;IAC5C,MAAMG,MAAM,GAAG,GAAG;IAClB,MAAMC,UAAU,GAAGH,KAAK,GAAGN,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACE,KAAK;IACrD,MAAMQ,WAAW,GAAGF,MAAM,GAAGR,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACG,MAAM;;IAEvD;IACA,MAAMQ,GAAG,GAAGhD,EAAE,CAACkC,MAAM,CAACQ,UAAU,CAAC,CAC5BO,IAAI,CAAC,OAAO,EAAEN,KAAK,CAAC,CACpBM,IAAI,CAAC,QAAQ,EAAEJ,MAAM,CAAC,CACtBK,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,WAAW,EAAE,aAAaZ,MAAM,CAACI,IAAI,IAAIJ,MAAM,CAACC,GAAG,GAAG,CAAC;;IAEjE;IACA,MAAMe,MAAM,GAAGrD,EAAE,CAACsD,SAAS,CAAC,CAAC,CACxB1B,MAAM,CAAC2E,MAAM,CAAC,CACd1E,KAAK,CAAC,CAAC,CAAC,EAAEiB,UAAU,CAAC,CAAC,CACtBW,OAAO,CAAC,GAAG,CAAC;IAEjB,MAAMC,MAAM,GAAG1D,EAAE,CAAC2D,WAAW,CAAC,CAAC,CAC1B/B,MAAM,CAAC,CAAC,CAAC,EAAE5B,EAAE,CAAC4D,GAAG,CAAC4C,iBAAiB,EAAEhD,CAAC,IAAI;MACvC,OAAOxD,EAAE,CAACmG,GAAG,CAACY,QAAQ,EAAEhF,OAAO,IAAIyB,CAAC,CAACzB,OAAO,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CACTF,KAAK,CAAC,CAACkB,WAAW,EAAE,CAAC,CAAC,CAAC;;IAE5B;IACA,MAAMiE,KAAK,GAAGhH,EAAE,CAACgH,KAAK,CAAC,CAAC,CACnBC,IAAI,CAACF,QAAQ,CAAC,CACdG,KAAK,CAAClH,EAAE,CAACmH,cAAc,CAAC,CACxBC,MAAM,CAACpH,EAAE,CAACqH,eAAe,CAAC;IAE/B,MAAMC,WAAW,GAAGN,KAAK,CAACR,iBAAiB,CAAC;;IAE5C;IACAxD,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACVD,IAAI,CAAC,WAAW,EAAE,eAAeF,WAAW,GAAG,CAAC,CAChDe,IAAI,CAAC9D,EAAE,CAAC+D,UAAU,CAACV,MAAM,CAAC,CAAC,CAC3BlB,SAAS,CAAC,MAAM,CAAC,CACjBc,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC,CAChCmB,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,CAC3BnB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CACnBA,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CACnBmB,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC;IAE/BpB,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACVY,IAAI,CAAC9D,EAAE,CAACqE,QAAQ,CAACX,MAAM,CAAC,CAACM,UAAU,CAACR,CAAC,IAAIjC,iBAAiB,CAACiC,CAAC,CAAC,CAAC,CAAC;;IAEpE;IACAR,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACVD,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAC3Bd,SAAS,CAAC,MAAM,CAAC,CACjBmC,IAAI,CAACZ,MAAM,CAACa,KAAK,CAAC,CAAC,CAAC,CACpBC,KAAK,CAAC,CAAC,CACPtB,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CACbA,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAIE,MAAM,CAACF,CAAC,CAAC,CAAC,CAC1BP,IAAI,CAAC,IAAI,EAAEH,UAAU,CAAC,CACtBG,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAIE,MAAM,CAACF,CAAC,CAAC,CAAC,CAC1BP,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CACzBA,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC;;IAEpC;IACA,MAAMsE,WAAW,GAAGvE,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAC9Bf,SAAS,CAAC,GAAG,CAAC,CACdmC,IAAI,CAACgD,WAAW,CAAC,CACjB9C,KAAK,CAAC,CAAC,CACPtB,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,MAAM,EAAEO,CAAC,IAAI1B,aAAa,CAAC0F,QAAQ,CAAChE,CAAC,CAACiE,GAAG,CAAC,CAAC,CAAC;;IAEtD;IACAF,WAAW,CAACG,IAAI,CAAC,UAAUlE,CAAC,EAAE;MAC1BxD,EAAE,CAACkC,MAAM,CAAC,IAAI,CAAC,CAACe,IAAI,CAAC,UAAU,EAAEO,CAAC,CAACiE,GAAG,CAAC;IAC3C,CAAC,CAAC;IAEFF,WAAW,CAACpF,SAAS,CAAC,MAAM,CAAC,CACxBmC,IAAI,CAACd,CAAC,IAAIA,CAAC,CAAC,CACZgB,KAAK,CAAC,CAAC,CACPtB,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,GAAG,EAAEO,CAAC,IAAIH,MAAM,CAACG,CAAC,CAACc,IAAI,CAACmC,KAAK,CAAC,CAAC,CACpCxD,IAAI,CAAC,GAAG,EAAEO,CAAC,IAAIE,MAAM,CAACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC5BP,IAAI,CAAC,QAAQ,EAAEO,CAAC,IAAIE,MAAM,CAACF,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGE,MAAM,CAACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAChDP,IAAI,CAAC,OAAO,EAAEI,MAAM,CAACoB,SAAS,CAAC,CAAC,CAAC;;IAEtC;IACA,MAAMG,MAAM,GAAG5B,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACzBD,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CACvBA,IAAI,CAAC,WAAW,EAAE,aAAaH,UAAU,GAAG,EAAE,MAAM,CAAC;IAE1DiE,QAAQ,CAAClC,OAAO,CAAC,CAAC9C,OAAO,EAAE+C,CAAC,KAAK;MAC7B,MAAMb,KAAK,GAAG8B,QAAQ,CAACC,MAAM,CAAC9B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpC,OAAO,KAAKA,OAAO,CAAC,IAC1D;QAAEA,OAAO;QAAEiD,SAAS,EAAE1E,gBAAgB,CAACyB,OAAO,CAAC,IAAI,YAAYA,OAAO;MAAI,CAAC;MAE/E,MAAMgD,UAAU,GAAGH,MAAM,CAAC1B,MAAM,CAAC,GAAG,CAAC,CAChCD,IAAI,CAAC,WAAW,EAAE,gBAAgB6B,CAAC,GAAG,EAAE,GAAG,CAAC;MAEjDC,UAAU,CAAC7B,MAAM,CAAC,MAAM,CAAC,CACpBD,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CACjBA,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAClBA,IAAI,CAAC,MAAM,EAAEnB,aAAa,CAACC,OAAO,CAAC,CAAC;MAEzCgD,UAAU,CAAC7B,MAAM,CAAC,MAAM,CAAC,CACpBD,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbA,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbyB,IAAI,CAAC,GAAG3C,OAAO,MAAMkC,KAAK,CAACe,SAAS,EAAE,CAAC,CACvCZ,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC;IACnC,CAAC,CAAC;;IAEF;IACApB,GAAG,CAACE,MAAM,CAAC,MAAM,CAAC,CACbD,IAAI,CAAC,GAAG,EAAEH,UAAU,GAAG,CAAC,CAAC,CACzBG,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CACdA,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BmB,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAC1BA,KAAK,CAAC,aAAa,EAAE,MAAM,CAAC,CAC5BM,IAAI,CAAC3D,aAAa,GACb,4BAA4BT,gBAAgB,CAACS,aAAa,CAAC,cAAcR,YAAY,EAAE,GACvF,8CAA8CA,YAAY,EAAE,CAAC;;IAEvE;IACA,MAAM0E,OAAO,GAAGjF,EAAE,CAACkC,MAAM,CAAC,MAAM,CAAC,CAC5BC,SAAS,CAAC,UAAU,CAAC,CACrBmC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CACZY,IAAI,CAAC,KAAK,CAAC,CACXjC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CACxBmB,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;;IAExB;IACApB,GAAG,CAACb,SAAS,CAAC,MAAM,CAAC,CAChBgD,EAAE,CAAC,WAAW,EAAE,UAAUC,KAAK,EAAE5B,CAAC,EAAE;MACjC,IAAI;QACA,IAAI,CAACA,CAAC,IAAI,CAACA,CAAC,CAACc,IAAI,EAAE;QAEnBtE,EAAE,CAACkC,MAAM,CAAC,IAAI,CAAC,CACVmD,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,GAAG,CAAC,CACbrC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC;;QAEzB;QACA,MAAM0E,WAAW,GAAG,IAAI,CAAC7B,UAAU;QACnC,IAAI,CAAC6B,WAAW,EAAE;QAElB,MAAMC,UAAU,GAAG5H,EAAE,CAACkC,MAAM,CAACyF,WAAW,CAAC,CAAC1E,IAAI,CAAC,UAAU,CAAC;QAC1D,IAAI,CAAC2E,UAAU,EAAE;QAEjB,MAAM7F,OAAO,GAAGyF,QAAQ,CAACI,UAAU,CAAC;QACpC,MAAM5C,SAAS,GAAG1E,gBAAgB,CAACyB,OAAO,CAAC,IAAI,YAAYA,OAAO,GAAG;QACrE,MAAM2E,SAAS,GAAGlD,CAAC,CAACc,IAAI;QAExBW,OAAO,CAACI,UAAU,CAAC,CAAC,CACfC,QAAQ,CAAC,GAAG,CAAC,CACblB,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC;QAE1Ba,OAAO,CAACM,IAAI,CAAC;AACjC,sBAAsBmB,SAAS,CAACD,KAAK,IAAIlG,YAAY;AACrD,qBAAqBwB,OAAO,MAAMiD,SAAS;AAC3C,qBAAqB,CAAC0B,SAAS,CAAC3E,OAAO,CAAC,IAAI,CAAC,EAAEyD,cAAc,CAAC,CAAC;AAC/D,WAAW,CAAC,CACapB,KAAK,CAAC,MAAM,EAAGgB,KAAK,CAACM,KAAK,GAAG,EAAE,GAAI,IAAI,CAAC,CACxCtB,KAAK,CAAC,KAAK,EAAGgB,KAAK,CAACO,KAAK,GAAG,EAAE,GAAI,IAAI,CAAC;MAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAChE;IACJ,CAAC,CAAC,CACDT,EAAE,CAAC,UAAU,EAAE,YAAY;MACxBnF,EAAE,CAACkC,MAAM,CAAC,IAAI,CAAC,CACVmD,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,GAAG,CAAC,CACbrC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;MAEvBgC,OAAO,CAACI,UAAU,CAAC,CAAC,CACfC,QAAQ,CAAC,GAAG,CAAC,CACblB,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IAC5B,CAAC,CAAC;;IAEN;IACA,IAAIrD,aAAa,KAAK,IAAI,EAAE;MACxBf,EAAE,CAACkC,MAAM,CAACQ,UAAU,CAACoD,UAAU,CAAC,CAC3B3D,SAAS,CAAC,sBAAsB,CAAC,CACjCmC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CACZY,IAAI,CAAC,QAAQ,CAAC,CACdjC,IAAI,CAAC,OAAO,EAAE,oCAAoC,CAAC,CACnDmB,KAAK,CAAC,YAAY,EAAE,MAAM,CAAC,CAC3BA,KAAK,CAAC,aAAa,EAAE,MAAM,CAAC,CAC5BM,IAAI,CAAC,oBAAoB,CAAC,CAC1BS,EAAE,CAAC,OAAO,EAAE,YAAY;QACrBnE,gBAAgB,CAAC,IAAI,CAAC;MAC1B,CAAC,CAAC;IACV;EACJ,CAAC;;EAED;EACA,MAAM6G,2BAA2B,GAAGA,CAAA,KAAM;IACtC,oBACI3H,OAAA;MAAK4H,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5B7H,OAAA;QAAI4H,SAAS,EAAC,eAAe;QAAAC,QAAA,gBACzB7H,OAAA;UAAK8H,KAAK,EAAC,4BAA4B;UAACF,SAAS,EAAC,cAAc;UAACG,OAAO,EAAC,WAAW;UAACC,IAAI,EAAC,cAAc;UAAAH,QAAA,eACpG7H,OAAA;YAAMiI,QAAQ,EAAC,SAAS;YAAC3E,CAAC,EAAC,kIAAkI;YAAC4E,QAAQ,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClL,CAAC,8BAEV;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLtI,OAAA;QAAK4H,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAEnC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNtI,OAAA;QAAK4H,SAAS,EAAC,YAAY;QAAAC,QAAA,eACvB7H,OAAA;UAAO4H,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5B7H,OAAA;YAAA6H,QAAA,eACI7H,OAAA;cAAA6H,QAAA,gBACI7H,OAAA;gBAAA6H,QAAA,EAAI;cAAI;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbtI,OAAA;gBAAA6H,QAAA,EAAI;cAAU;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACnBtI,OAAA;gBAAA6H,QAAA,EAAI;cAAW;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACRtI,OAAA;YAAA6H,QAAA,EACKU,MAAM,CAACC,OAAO,CAACpI,gBAAgB,CAAC,CAACiD,GAAG,CAAC,CAAC,CAACoF,IAAI,EAAEC,IAAI,CAAC,kBAC/C1I,OAAA;cAAA6H,QAAA,gBACI7H,OAAA;gBAAA6H,QAAA,EAAKY;cAAI;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACftI,OAAA;gBAAA6H,QAAA,EAAKa;cAAI;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACftI,OAAA;gBAAA6H,QAAA,EAAKc,mBAAmB,CAACrB,QAAQ,CAACmB,IAAI,CAAC;cAAC;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GAHzCG,IAAI;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIT,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd,CAAC;;EAED;EACA,MAAMK,mBAAmB,GAAI9G,OAAO,IAAK;IACrC,QAAQA,OAAO;MACX,KAAK,CAAC;QAAE,OAAO,4CAA4C;MAC3D,KAAK,CAAC;QAAE,OAAO,iFAAiF;MAChG,KAAK,CAAC;QAAE,OAAO,sFAAsF;MACrG,KAAK,CAAC;QAAE,OAAO,2DAA2D;MAC1E,KAAK,CAAC;QAAE,OAAO,uEAAuE;MACtF,KAAK,CAAC;QAAE,OAAO,uFAAuF;MACtG,KAAK,CAAC;QAAE,OAAO,+DAA+D;MAC9E,KAAK,CAAC;QAAE,OAAO,6EAA6E;MAC5F,KAAK,CAAC;QAAE,OAAO,uDAAuD;MACtE,KAAK,EAAE;QAAE,OAAO,0FAA0F;MAC1G,KAAK,EAAE;QAAE,OAAO,8DAA8D;MAC9E,KAAK,EAAE;QAAE,OAAO,kEAAkE;MAClF,KAAK,EAAE;QAAE,OAAO,2EAA2E;MAC3F,KAAK,EAAE;QAAE,OAAO,oEAAoE;MACpF,KAAK,EAAE;QAAE,OAAO,gEAAgE;MAChF,KAAK,EAAE;QAAE,OAAO,wDAAwD;MACxE,KAAK,EAAE;QAAE,OAAO,oCAAoC;MACpD,KAAK,EAAE;QAAE,OAAO,yDAAyD;MACzE,KAAK,EAAE;QAAE,OAAO,yEAAyE;MACzF;QAAS,OAAO,2BAA2B;IAC/C;EACJ,CAAC;EAED,oBACI7B,OAAA;IAAK4H,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBAClC7H,OAAA;MAAK4H,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7B7H,OAAA;QAAI4H,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAA6B;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClEtI,OAAA;QAAG4H,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAErC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNtI,OAAA;MAAK4H,SAAS,EAAC,0BAA0B;MAAAC,QAAA,gBACrC7H,OAAA;QAAK4H,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC1B7H,OAAA;UAAO4I,OAAO,EAAC,mBAAmB;UAAChB,SAAS,EAAC,qBAAqB;UAAAC,QAAA,EAAC;QAAyB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpGtI,OAAA;UACI6I,EAAE,EAAC,mBAAmB;UACtBjB,SAAS,EAAC,wBAAwB;UAClCkB,KAAK,EAAEzI,YAAY,IAAI,EAAG;UAC1B0I,QAAQ,EAAGC,CAAC,IAAKzI,YAAY,CAACyI,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC9CI,QAAQ,EAAE5I,cAAc,CAACW,MAAM,KAAK,CAAE;UAAA4G,QAAA,EAErCvH,cAAc,CAAC+C,GAAG,CAAC8F,IAAI,iBACpBnJ,OAAA;YAAmB8I,KAAK,EAAEK,IAAK;YAAAtB,QAAA,EAC1BsB;UAAI,GADIA,IAAI;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAET,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAENtI,OAAA;QAAK4H,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzB7H,OAAA;UAAK4H,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAC9B7H,OAAA;YAAK4H,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAc;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnDtI,OAAA;YAAK4H,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAExH,YAAY,IAAI;UAAW;YAAA8H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CAAC,EACLzH,aAAa,iBACVb,OAAA;UAAK4H,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAC9B7H,OAAA;YAAK4H,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAe;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpDtI,OAAA;YAAK4H,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAEhH;UAAa;YAAAsH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CACR,eACDtI,OAAA;UAAK4H,SAAS,EAAC,0BAA0B;UAAAC,QAAA,eACrC7H,OAAA;YAAQ4H,SAAS,EAAC,gBAAgB;YAACwB,OAAO,EAAE5I,SAAU;YAAAqH,QAAA,EAAC;UAEvD;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNtI,OAAA;MAAK4H,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC1B7H,OAAA;QAAK4H,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC5B7H,OAAA;UAAI4H,SAAS,EAAC,eAAe;UAAAC,QAAA,gBACzB7H,OAAA;YAAK8H,KAAK,EAAC,4BAA4B;YAACF,SAAS,EAAC,cAAc;YAACG,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,cAAc;YAAAH,QAAA,eACpG7H,OAAA;cAAMiI,QAAQ,EAAC,SAAS;cAAC3E,CAAC,EAAC,kIAAkI;cAAC4E,QAAQ,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClL,CAAC,mBAEV;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLtI,OAAA;UAAK4H,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAEnC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNtI,OAAA;UAAKqJ,GAAG,EAAE3I,iBAAkB;UAACkH,SAAS,EAAC;QAAW;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNtI,OAAA;MAAK4H,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC1B7H,OAAA;QAAK4H,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC5B7H,OAAA;UAAI4H,SAAS,EAAC,eAAe;UAAAC,QAAA,gBACzB7H,OAAA;YAAK8H,KAAK,EAAC,4BAA4B;YAACF,SAAS,EAAC,cAAc;YAACG,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,cAAc;YAAAH,QAAA,eACpG7H,OAAA;cAAMiI,QAAQ,EAAC,SAAS;cAAC3E,CAAC,EAAC,kIAAkI;cAAC4E,QAAQ,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClL,CAAC,2BAEV;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLtI,OAAA;UAAK4H,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAEnC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNtI,OAAA;UAAKqJ,GAAG,EAAE1I,oBAAqB;UAACiH,SAAS,EAAC;QAAW;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNtI,OAAA;MAAK4H,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC1B7H,OAAA;QAAK4H,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC5B7H,OAAA;UAAI4H,SAAS,EAAC,eAAe;UAAAC,QAAA,gBACzB7H,OAAA;YAAK8H,KAAK,EAAC,4BAA4B;YAACF,SAAS,EAAC,cAAc;YAACG,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,cAAc;YAAAH,QAAA,eACpG7H,OAAA;cAAMiI,QAAQ,EAAC,SAAS;cAAC3E,CAAC,EAAC,kIAAkI;cAAC4E,QAAQ,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClL,CAAC,uBAEV;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLtI,OAAA;UAAK4H,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAEnC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNtI,OAAA;UAAKqJ,GAAG,EAAEzI,qBAAsB;UAACgH,SAAS,EAAC;QAAW;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACLX,2BAA2B,CAAC,CAAC;EAAA;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEd,CAAC;AAAA7H,EAAA,CA5yBYR,0BAA0B;AAAAqJ,EAAA,GAA1BrJ,0BAA0B;AA8yBvC,eAAeA,0BAA0B;AAAC,IAAAqJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}