{"ast":null,"code":"var _jsxFileName = \"/Users/hongtenglee/Documents/geoviz-dashboard/client/src/components/YearlyAnalysisDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { RadialBarChart } from './RadialBarChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EnhancedYearlyAnalysisDashboard = ({\n  yearlyData,\n  monthlyData,\n  monthlyDataByYear,\n  selectedYear,\n  availableYears,\n  summaryStats,\n  onYearChange,\n  onRefresh\n}) => {\n  _s();\n  const monthlyAcresChartRef = useRef(null);\n  const monthlyFiresChartRef = useRef(null);\n  const [selectedMetric, setSelectedMetric] = useState('fires'); // 'fires' or 'acres'\n\n  useEffect(() => {\n    if (monthlyData.length > 0) {\n      createCharts();\n    }\n  }, [monthlyData, selectedYear]);\n\n  // Format large numbers\n  const formatLargeNumber = num => {\n    if (num >= 1000000) {\n      return `${(num / 1000000).toFixed(1)}M`;\n    } else if (num >= 1000) {\n      return `${(num / 1000).toFixed(1)}K`;\n    }\n    return num;\n  };\n\n  // Get the data for the selected year\n  const getSelectedYearData = () => {\n    if (!yearlyData || yearlyData.length === 0 || !selectedYear) return null;\n    return yearlyData.find(data => data.year === selectedYear);\n  };\n\n  // Get monthly data\n  const getMonthByYearData = () => {\n    if (!monthlyData || monthlyData.length === 0) return [];\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    // For each month, find the highest acre value from all available years\n    const data = [];\n    months.forEach(month => {\n      const monthData = monthlyData.find(m => m.month === month);\n      data.push({\n        month,\n        acres: monthData ? monthData.acres : 0,\n        fires: monthData ? monthData.fires : 0\n      });\n    });\n    return data;\n  };\n  function getResponsiveWidth(svgElement) {\n    // Get the width of the container, not the SVG element itself\n    const containerWidth = svgElement.parentNode.clientWidth || svgElement.parentNode.getBoundingClientRect().width || window.innerWidth - 60;\n\n    // Return the container width with a little padding\n    return containerWidth - 40; // 20px padding on each side\n  }\n  const createCharts = () => {\n    createMonthlyAcresChart();\n    createMonthlyFiresChart();\n  };\n  const createMonthlyAcresChart = () => {\n    const data = getMonthByYearData();\n    if (data.length === 0 || !monthlyAcresChartRef.current) return;\n    const margin = {\n      top: 40,\n      right: 30,\n      bottom: 100,\n      left: 60\n    };\n    const svgElement = monthlyAcresChartRef.current;\n    const width = getResponsiveWidth(svgElement);\n    const height = 400;\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n\n    // Clear any existing SVG\n    d3.select(svgElement).selectAll('*').remove();\n\n    // Create SVG\n    const svg = d3.select(svgElement).attr('width', width).attr('height', height).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Define scales\n    const xScale = d3.scaleBand().domain(data.map(d => d.month)).range([0, chartWidth]).padding(0.2);\n    const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d.acres) * 1.1]).range([chartHeight, 0]);\n\n    // Create axes\n    svg.append('g').attr('transform', `translate(0,${chartHeight})`).call(d3.axisBottom(xScale)).selectAll('text').attr('transform', 'rotate(-45)').style('text-anchor', 'end').attr('dx', '-.8em').attr('dy', '.15em');\n    svg.append('g').call(d3.axisLeft(yScale).tickFormat(d => formatLargeNumber(d)));\n\n    // Add grid lines\n    svg.append('g').attr('class', 'grid-lines').selectAll('line').data(yScale.ticks()).enter().append('line').attr('x1', 0).attr('y1', d => yScale(d)).attr('x2', chartWidth).attr('y2', d => yScale(d)).attr('stroke', '#e5e7eb').attr('stroke-dasharray', '3,3');\n\n    // Add bars\n    svg.selectAll('bars').data(data).enter().append('rect').attr('x', d => xScale(d.month)).attr('y', d => yScale(d.acres)).attr('width', xScale.bandwidth()).attr('height', d => chartHeight - yScale(d.acres)).attr('fill', '#DC2626').attr('rx', 4).attr('ry', 4);\n\n    // Add labels for high values\n    svg.selectAll('value-labels').data(data.filter(d => d.acres > 10000)) // Only label high values\n    .enter().append('text').attr('x', d => xScale(d.month) + xScale.bandwidth() / 2).attr('y', d => yScale(d.acres) - 5).attr('text-anchor', 'middle').text(d => formatLargeNumber(d.acres)).style('font-size', '12px').style('fill', '#6B7280');\n\n    // Add title\n    svg.append('text').attr('x', chartWidth / 2).attr('y', -10).attr('text-anchor', 'middle').style('font-size', '16px').style('font-weight', 'bold').text(`Acres Burned by Month in ${selectedYear}`);\n\n    // Create tooltip\n    const tooltip = d3.select('body').selectAll('.tooltip').data([null]).join('div').attr('class', 'tooltip').style('opacity', 0);\n\n    // Add hover effects\n    svg.selectAll('rect').on('mouseover', function (event, d) {\n      d3.select(this).transition().duration(200).attr('opacity', 0.8);\n      tooltip.transition().duration(200).style('opacity', 0.9);\n      tooltip.html(`\n          <strong>${d.month} ${selectedYear}</strong><br/>\n          Acres Burned: ${d.acres.toLocaleString()}<br/>\n          Fires: ${d.fires.toLocaleString()}<br/>\n          ${d.fires > 0 ? `Acres per Fire: ${Math.round(d.acres / d.fires).toLocaleString()}` : ''}\n        `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 28 + 'px');\n    }).on('mouseout', function () {\n      d3.select(this).transition().duration(200).attr('opacity', 1);\n      tooltip.transition().duration(500).style('opacity', 0);\n    });\n  };\n  const createMonthlyFiresChart = () => {\n    const data = getMonthByYearData();\n    if (data.length === 0 || !monthlyFiresChartRef.current) return;\n    const margin = {\n      top: 40,\n      right: 30,\n      bottom: 100,\n      left: 60\n    };\n    const svgElement = monthlyFiresChartRef.current;\n    const width = getResponsiveWidth(svgElement);\n    const height = 400;\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n\n    // Clear any existing SVG\n    d3.select(svgElement).selectAll('*').remove();\n\n    // Create SVG\n    const svg = d3.select(svgElement).attr('width', width).attr('height', height).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Define scales\n    const xScale = d3.scaleBand().domain(data.map(d => d.month)).range([0, chartWidth]).padding(0.4);\n    const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d.fires) * 1.1]).range([chartHeight, 0]);\n\n    // Create axes\n    svg.append('g').attr('transform', `translate(0,${chartHeight})`).call(d3.axisBottom(xScale)).selectAll('text').attr('transform', 'rotate(-45)').style('text-anchor', 'end').attr('dx', '-.8em').attr('dy', '.15em');\n    svg.append('g').call(d3.axisLeft(yScale));\n\n    // Add grid lines\n    svg.append('g').attr('class', 'grid-lines').selectAll('line').data(yScale.ticks()).enter().append('line').attr('x1', 0).attr('y1', d => yScale(d)).attr('x2', chartWidth).attr('y2', d => yScale(d)).attr('stroke', '#e5e7eb').attr('stroke-dasharray', '3,3');\n\n    // Create line generator\n    const lineGenerator = d3.line().x(d => xScale(d.month) + xScale.bandwidth() / 2).y(d => yScale(d.fires));\n\n    // Add the line\n    svg.append('path').datum(data).attr('fill', 'none').attr('stroke', '#3B82F6').attr('stroke-width', 3).attr('d', lineGenerator);\n\n    // Add dots\n    svg.selectAll('dots').data(data).enter().append('circle').attr('cx', d => xScale(d.month) + xScale.bandwidth() / 2).attr('cy', d => yScale(d.fires)).attr('r', 5).attr('fill', '#3B82F6');\n\n    // Add title\n    svg.append('text').attr('x', chartWidth / 2).attr('y', -10).attr('text-anchor', 'middle').style('font-size', '16px').style('font-weight', 'bold').text(`Fire Counts by Month in ${selectedYear}`);\n\n    // Create tooltip\n    const tooltip = d3.select('body').selectAll('.tooltip').data([null]).join('div').attr('class', 'tooltip').style('opacity', 0);\n\n    // Add hover effects\n    svg.selectAll('circle').on('mouseover', function (event, d) {\n      d3.select(this).transition().duration(200).attr('r', 7);\n      tooltip.transition().duration(200).style('opacity', 0.9);\n      tooltip.html(`\n          <strong>${d.month} ${selectedYear}</strong><br/>\n          Fires: ${d.fires.toLocaleString()}<br/>\n          Acres Burned: ${d.acres.toLocaleString()}<br/>\n          ${d.fires > 0 ? `Acres per Fire: ${Math.round(d.acres / d.fires).toLocaleString()}` : ''}\n        `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 28 + 'px');\n    }).on('mouseout', function () {\n      d3.select(this).transition().duration(200).attr('r', 5);\n      tooltip.transition().duration(500).style('opacity', 0);\n    });\n  };\n  const selectedYearData = getSelectedYearData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"yearly-analysis-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"dashboard-title\",\n        children: \"Yearly Fire Analysis Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"dashboard-description\",\n        children: \"Detailed analysis of wildfire data for a specific year, showing monthly patterns and multi-year seasonal trends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year-selection-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"year-select\",\n          className: \"year-selector-label\",\n          children: \"Select Year for Analysis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"year-select\",\n          className: \"year-selector-dropdown\",\n          value: selectedYear || '',\n          onChange: e => onYearChange(e.target.value),\n          disabled: availableYears.length === 0,\n          children: availableYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), selectedYearData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-label\",\n            children: \"Fires:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-value\",\n            children: selectedYearData.fires.toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-label\",\n            children: \"Acres Burned:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-value\",\n            children: selectedYearData.acres.toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-label\",\n            children: \"Peak Month:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-value\",\n            children: summaryStats.peakMonth || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-toggle-container\",\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '100%',\n            margin: '0 auto',\n            padding: '15px 0',\n            marginBottom: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-toggle-wrapper\",\n            style: {\n              display: 'flex',\n              borderRadius: '8px',\n              overflow: 'hidden',\n              border: '1px solid #d1d5db',\n              boxShadow: '0 1px 2px rgba(0, 0, 0, 0.05)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `metric-toggle-button ${selectedMetric === 'fires' ? 'active' : ''}`,\n              style: {\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                border: 'none',\n                outline: 'none',\n                background: selectedMetric === 'fires' ? '#3b82f6' : '#f9fafb',\n                color: selectedMetric === 'fires' ? 'white' : '#4b5563',\n                fontWeight: selectedMetric === 'fires' ? 'bold' : 'normal',\n                cursor: 'pointer',\n                padding: '10px 20px',\n                minWidth: '120px',\n                height: '40px',\n                textAlign: 'center',\n                transition: 'all 0.2s ease'\n              },\n              onClick: () => setSelectedMetric('fires'),\n              children: \"Fire Counts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `metric-toggle-button ${selectedMetric === 'acres' ? 'active' : ''}`,\n              style: {\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                border: 'none',\n                outline: 'none',\n                background: selectedMetric === 'acres' ? '#3b82f6' : '#f9fafb',\n                color: selectedMetric === 'acres' ? 'white' : '#4b5563',\n                fontWeight: selectedMetric === 'acres' ? 'bold' : 'normal',\n                cursor: 'pointer',\n                padding: '10px 20px',\n                minWidth: '120px',\n                height: '40px',\n                textAlign: 'center',\n                transition: 'all 0.2s ease'\n              },\n              onClick: () => setSelectedMetric('acres'),\n              children: \"Acres Burned\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadialBarChart, {\n          yearlyData: yearlyData,\n          monthlyDataByYear: monthlyDataByYear,\n          availableYears: availableYears,\n          selectedMetric: selectedMetric\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"section-icon\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm9 4a1 1 0 10-2 0v6a1 1 0 102 0V7zm-3 2a1 1 0 10-2 0v4a1 1 0 102 0V9zm-3 3a1 1 0 10-2 0v1a1 1 0 102 0v-1z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this), \"Monthly Acres Burned in \", selectedYear || '...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-description\",\n          children: \"Shows acres burned by month for the selected year, highlighting peak fire season.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-canvas\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            ref: monthlyAcresChartRef,\n            width: \"100%\",\n            height: \"400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"section-icon\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), \"Fire Counts by Month in \", selectedYear || '...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-description\",\n          children: \"Shows the number of fires recorded each month for the selected year.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-canvas\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            ref: monthlyFiresChartRef,\n            width: \"100%\",\n            height: \"400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monthly-data-table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"section-icon\",\n          viewBox: \"0 0 20 20\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M5 4a3 3 0 00-3 3v6a3 3 0 003 3h10a3 3 0 003-3V7a3 3 0 00-3-3H5zm-1 9v-1h5v2H5a1 1 0 01-1-1zm7 1h4a1 1 0 001-1v-1h-5v2zm0-4h5V8h-5v2zM9 8H4v2h5V8z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this), \"Monthly Breakdown for \", selectedYear || '...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"monthly-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Fires\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Acres Burned\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Acres per Fire\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: getMonthByYearData().map(monthData => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: monthData.month === summaryStats.peakMonth ? 'peak-month' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthData.month\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthData.fires.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthData.acres.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthData.fires > 0 ? Math.round(monthData.acres / monthData.fires).toLocaleString() : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 19\n              }, this)]\n            }, monthData.month, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: selectedYearData ? selectedYearData.fires.toLocaleString() : 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: selectedYearData ? selectedYearData.acres.toLocaleString() : 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: selectedYearData && selectedYearData.fires > 0 ? Math.round(selectedYearData.acres / selectedYearData.fires).toLocaleString() : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-source-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"data-source-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"data-source-icon\",\n          viewBox: \"0 0 20 20\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this), \"Data Source Information\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-source-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This visualization shows detailed monthly data for the selected year from the California wildfire records. The dashboard includes data through 2025, with the monthly breakdown helping to identify fire patterns throughout the year and peak fire season.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The radial chart at the top shows seasonal patterns across multiple years, making it easy to identify recurring patterns and anomalies.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"data-source-note\",\n          children: \"Return to the \\\"Dashboard Overview\\\" tab to see trends across multiple years.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"refresh-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh-button\",\n        onClick: onRefresh,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"refresh-icon\",\n          viewBox: \"0 0 20 20\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this), \"Refresh Data\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 5\n  }, this);\n};\n_s(EnhancedYearlyAnalysisDashboard, \"RFeiEtwo27nMFVcswoXiVr1VqbM=\");\n_c = EnhancedYearlyAnalysisDashboard;\nvar _c;\n$RefreshReg$(_c, \"EnhancedYearlyAnalysisDashboard\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","RadialBarChart","jsxDEV","_jsxDEV","EnhancedYearlyAnalysisDashboard","yearlyData","monthlyData","monthlyDataByYear","selectedYear","availableYears","summaryStats","onYearChange","onRefresh","_s","monthlyAcresChartRef","monthlyFiresChartRef","selectedMetric","setSelectedMetric","length","createCharts","formatLargeNumber","num","toFixed","getSelectedYearData","find","data","year","getMonthByYearData","months","forEach","month","monthData","m","push","acres","fires","getResponsiveWidth","svgElement","containerWidth","parentNode","clientWidth","getBoundingClientRect","width","window","innerWidth","createMonthlyAcresChart","createMonthlyFiresChart","current","margin","top","right","bottom","left","height","chartWidth","chartHeight","select","selectAll","remove","svg","attr","append","xScale","scaleBand","domain","map","d","range","padding","yScale","scaleLinear","max","call","axisBottom","style","axisLeft","tickFormat","ticks","enter","bandwidth","filter","text","tooltip","join","on","event","transition","duration","html","toLocaleString","Math","round","pageX","pageY","lineGenerator","line","x","y","datum","selectedYearData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","disabled","peakMonth","display","justifyContent","alignItems","marginBottom","borderRadius","overflow","border","boxShadow","outline","background","color","fontWeight","cursor","minWidth","textAlign","onClick","xmlns","viewBox","fill","fillRule","clipRule","ref","_c","$RefreshReg$"],"sources":["/Users/hongtenglee/Documents/geoviz-dashboard/client/src/components/YearlyAnalysisDashboard.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { RadialBarChart } from './RadialBarChart';\n\nexport const EnhancedYearlyAnalysisDashboard = ({\n  yearlyData,\n  monthlyData,\n  monthlyDataByYear,\n  selectedYear,\n  availableYears,\n  summaryStats,\n  onYearChange,\n  onRefresh\n}) => {\n  const monthlyAcresChartRef = useRef(null);\n  const monthlyFiresChartRef = useRef(null);\n  const [selectedMetric, setSelectedMetric] = useState('fires'); // 'fires' or 'acres'\n\n  useEffect(() => {\n    if (monthlyData.length > 0) {\n      createCharts();\n    }\n  }, [monthlyData, selectedYear]);\n\n  // Format large numbers\n  const formatLargeNumber = (num) => {\n    if (num >= 1000000) {\n      return `${(num / 1000000).toFixed(1)}M`;\n    } else if (num >= 1000) {\n      return `${(num / 1000).toFixed(1)}K`;\n    }\n    return num;\n  };\n\n  // Get the data for the selected year\n  const getSelectedYearData = () => {\n    if (!yearlyData || yearlyData.length === 0 || !selectedYear) return null;\n    return yearlyData.find(data => data.year === selectedYear);\n  };\n\n  // Get monthly data\n  const getMonthByYearData = () => {\n    if (!monthlyData || monthlyData.length === 0) return [];\n\n    const months = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n\n    // For each month, find the highest acre value from all available years\n    const data = [];\n\n    months.forEach((month) => {\n      const monthData = monthlyData.find(m => m.month === month);\n      data.push({\n        month,\n        acres: monthData ? monthData.acres : 0,\n        fires: monthData ? monthData.fires : 0\n      });\n    });\n\n    return data;\n  };\n\n  function getResponsiveWidth(svgElement) {\n    // Get the width of the container, not the SVG element itself\n    const containerWidth = svgElement.parentNode.clientWidth ||\n      svgElement.parentNode.getBoundingClientRect().width ||\n      window.innerWidth - 60;\n\n    // Return the container width with a little padding\n    return containerWidth - 40; // 20px padding on each side\n  }\n\n  const createCharts = () => {\n    createMonthlyAcresChart();\n    createMonthlyFiresChart();\n  };\n\n  const createMonthlyAcresChart = () => {\n    const data = getMonthByYearData();\n    if (data.length === 0 || !monthlyAcresChartRef.current) return;\n\n    const margin = { top: 40, right: 30, bottom: 100, left: 60 };\n    const svgElement = monthlyAcresChartRef.current;\n    const width = getResponsiveWidth(svgElement);\n    const height = 400;\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n\n    // Clear any existing SVG\n    d3.select(svgElement).selectAll('*').remove();\n\n    // Create SVG\n    const svg = d3.select(svgElement)\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Define scales\n    const xScale = d3.scaleBand()\n      .domain(data.map(d => d.month))\n      .range([0, chartWidth])\n      .padding(0.2);\n\n    const yScale = d3.scaleLinear()\n      .domain([0, d3.max(data, d => d.acres) * 1.1])\n      .range([chartHeight, 0]);\n\n    // Create axes\n    svg.append('g')\n      .attr('transform', `translate(0,${chartHeight})`)\n      .call(d3.axisBottom(xScale))\n      .selectAll('text')\n      .attr('transform', 'rotate(-45)')\n      .style('text-anchor', 'end')\n      .attr('dx', '-.8em')\n      .attr('dy', '.15em');\n\n    svg.append('g')\n      .call(d3.axisLeft(yScale).tickFormat(d => formatLargeNumber(d)));\n\n    // Add grid lines\n    svg.append('g')\n      .attr('class', 'grid-lines')\n      .selectAll('line')\n      .data(yScale.ticks())\n      .enter()\n      .append('line')\n      .attr('x1', 0)\n      .attr('y1', d => yScale(d))\n      .attr('x2', chartWidth)\n      .attr('y2', d => yScale(d))\n      .attr('stroke', '#e5e7eb')\n      .attr('stroke-dasharray', '3,3');\n\n    // Add bars\n    svg.selectAll('bars')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('x', d => xScale(d.month))\n      .attr('y', d => yScale(d.acres))\n      .attr('width', xScale.bandwidth())\n      .attr('height', d => chartHeight - yScale(d.acres))\n      .attr('fill', '#DC2626')\n      .attr('rx', 4)\n      .attr('ry', 4);\n\n    // Add labels for high values\n    svg.selectAll('value-labels')\n      .data(data.filter(d => d.acres > 10000)) // Only label high values\n      .enter()\n      .append('text')\n      .attr('x', d => xScale(d.month) + xScale.bandwidth() / 2)\n      .attr('y', d => yScale(d.acres) - 5)\n      .attr('text-anchor', 'middle')\n      .text(d => formatLargeNumber(d.acres))\n      .style('font-size', '12px')\n      .style('fill', '#6B7280');\n\n    // Add title\n    svg.append('text')\n      .attr('x', chartWidth / 2)\n      .attr('y', -10)\n      .attr('text-anchor', 'middle')\n      .style('font-size', '16px')\n      .style('font-weight', 'bold')\n      .text(`Acres Burned by Month in ${selectedYear}`);\n\n    // Create tooltip\n    const tooltip = d3.select('body')\n      .selectAll('.tooltip')\n      .data([null])\n      .join('div')\n      .attr('class', 'tooltip')\n      .style('opacity', 0);\n\n    // Add hover effects\n    svg.selectAll('rect')\n      .on('mouseover', function (event, d) {\n        d3.select(this)\n          .transition()\n          .duration(200)\n          .attr('opacity', 0.8);\n\n        tooltip.transition()\n          .duration(200)\n          .style('opacity', 0.9);\n\n        tooltip.html(`\n          <strong>${d.month} ${selectedYear}</strong><br/>\n          Acres Burned: ${d.acres.toLocaleString()}<br/>\n          Fires: ${d.fires.toLocaleString()}<br/>\n          ${d.fires > 0 ? `Acres per Fire: ${Math.round(d.acres / d.fires).toLocaleString()}` : ''}\n        `)\n          .style('left', (event.pageX + 10) + 'px')\n          .style('top', (event.pageY - 28) + 'px');\n      })\n      .on('mouseout', function () {\n        d3.select(this)\n          .transition()\n          .duration(200)\n          .attr('opacity', 1);\n\n        tooltip.transition()\n          .duration(500)\n          .style('opacity', 0);\n      });\n  };\n\n  const createMonthlyFiresChart = () => {\n    const data = getMonthByYearData();\n    if (data.length === 0 || !monthlyFiresChartRef.current) return;\n\n    const margin = { top: 40, right: 30, bottom: 100, left: 60 };\n    const svgElement = monthlyFiresChartRef.current;\n    const width = getResponsiveWidth(svgElement);\n    const height = 400;\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n\n    // Clear any existing SVG\n    d3.select(svgElement).selectAll('*').remove();\n\n    // Create SVG\n    const svg = d3.select(svgElement)\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Define scales\n    const xScale = d3.scaleBand()\n      .domain(data.map(d => d.month))\n      .range([0, chartWidth])\n      .padding(0.4);\n\n    const yScale = d3.scaleLinear()\n      .domain([0, d3.max(data, d => d.fires) * 1.1])\n      .range([chartHeight, 0]);\n\n    // Create axes\n    svg.append('g')\n      .attr('transform', `translate(0,${chartHeight})`)\n      .call(d3.axisBottom(xScale))\n      .selectAll('text')\n      .attr('transform', 'rotate(-45)')\n      .style('text-anchor', 'end')\n      .attr('dx', '-.8em')\n      .attr('dy', '.15em');\n\n    svg.append('g')\n      .call(d3.axisLeft(yScale));\n\n    // Add grid lines\n    svg.append('g')\n      .attr('class', 'grid-lines')\n      .selectAll('line')\n      .data(yScale.ticks())\n      .enter()\n      .append('line')\n      .attr('x1', 0)\n      .attr('y1', d => yScale(d))\n      .attr('x2', chartWidth)\n      .attr('y2', d => yScale(d))\n      .attr('stroke', '#e5e7eb')\n      .attr('stroke-dasharray', '3,3');\n\n    // Create line generator\n    const lineGenerator = d3.line()\n      .x(d => xScale(d.month) + xScale.bandwidth() / 2)\n      .y(d => yScale(d.fires));\n\n    // Add the line\n    svg.append('path')\n      .datum(data)\n      .attr('fill', 'none')\n      .attr('stroke', '#3B82F6')\n      .attr('stroke-width', 3)\n      .attr('d', lineGenerator);\n\n    // Add dots\n    svg.selectAll('dots')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('cx', d => xScale(d.month) + xScale.bandwidth() / 2)\n      .attr('cy', d => yScale(d.fires))\n      .attr('r', 5)\n      .attr('fill', '#3B82F6');\n\n    // Add title\n    svg.append('text')\n      .attr('x', chartWidth / 2)\n      .attr('y', -10)\n      .attr('text-anchor', 'middle')\n      .style('font-size', '16px')\n      .style('font-weight', 'bold')\n      .text(`Fire Counts by Month in ${selectedYear}`);\n\n    // Create tooltip\n    const tooltip = d3.select('body')\n      .selectAll('.tooltip')\n      .data([null])\n      .join('div')\n      .attr('class', 'tooltip')\n      .style('opacity', 0);\n\n    // Add hover effects\n    svg.selectAll('circle')\n      .on('mouseover', function (event, d) {\n        d3.select(this)\n          .transition()\n          .duration(200)\n          .attr('r', 7);\n\n        tooltip.transition()\n          .duration(200)\n          .style('opacity', 0.9);\n\n        tooltip.html(`\n          <strong>${d.month} ${selectedYear}</strong><br/>\n          Fires: ${d.fires.toLocaleString()}<br/>\n          Acres Burned: ${d.acres.toLocaleString()}<br/>\n          ${d.fires > 0 ? `Acres per Fire: ${Math.round(d.acres / d.fires).toLocaleString()}` : ''}\n        `)\n          .style('left', (event.pageX + 10) + 'px')\n          .style('top', (event.pageY - 28) + 'px');\n      })\n      .on('mouseout', function () {\n        d3.select(this)\n          .transition()\n          .duration(200)\n          .attr('r', 5);\n\n        tooltip.transition()\n          .duration(500)\n          .style('opacity', 0);\n      });\n  };\n\n  const selectedYearData = getSelectedYearData();\n\n  return (\n    <div className=\"yearly-analysis-dashboard\">\n      <div className=\"dashboard-header\">\n        <h2 className=\"dashboard-title\">Yearly Fire Analysis Dashboard</h2>\n        <p className=\"dashboard-description\">\n          Detailed analysis of wildfire data for a specific year, showing monthly patterns and multi-year seasonal trends\n        </p>\n      </div>\n\n      {/* Year selector and summary */}\n      <div className=\"year-selection-container\">\n        <div className=\"year-selector\">\n          <label htmlFor=\"year-select\" className=\"year-selector-label\">Select Year for Analysis:</label>\n          <select\n            id=\"year-select\"\n            className=\"year-selector-dropdown\"\n            value={selectedYear || ''}\n            onChange={(e) => onYearChange(e.target.value)}\n            disabled={availableYears.length === 0}\n          >\n            {availableYears.map(year => (\n              <option key={year} value={year}>\n                {year}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {selectedYearData && (\n          <div className=\"year-summary\">\n            <div className=\"year-summary-item\">\n              <div className=\"summary-label\">Fires:</div>\n              <div className=\"summary-value\">{selectedYearData.fires.toLocaleString()}</div>\n            </div>\n            <div className=\"year-summary-item\">\n              <div className=\"summary-label\">Acres Burned:</div>\n              <div className=\"summary-value\">{selectedYearData.acres.toLocaleString()}</div>\n            </div>\n            <div className=\"year-summary-item\">\n              <div className=\"summary-label\">Peak Month:</div>\n              <div className=\"summary-value\">{summaryStats.peakMonth || 'N/A'}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* NEW: Radial Chart for multi-year view */}\n      <div className=\"chart-section\">\n        <div className=\"chart-container\">\n          <div className=\"metric-toggle-container\" style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '100%',\n            margin: '0 auto',\n            padding: '15px 0',\n            marginBottom: '20px'\n          }}>\n            <div className=\"metric-toggle-wrapper\" style={{\n              display: 'flex',\n              borderRadius: '8px',\n              overflow: 'hidden',\n              border: '1px solid #d1d5db',\n              boxShadow: '0 1px 2px rgba(0, 0, 0, 0.05)'\n            }}>\n              <button\n                className={`metric-toggle-button ${selectedMetric === 'fires' ? 'active' : ''}`}\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  border: 'none',\n                  outline: 'none',\n                  background: selectedMetric === 'fires' ? '#3b82f6' : '#f9fafb',\n                  color: selectedMetric === 'fires' ? 'white' : '#4b5563',\n                  fontWeight: selectedMetric === 'fires' ? 'bold' : 'normal',\n                  cursor: 'pointer',\n                  padding: '10px 20px',\n                  minWidth: '120px',\n                  height: '40px',\n                  textAlign: 'center',\n                  transition: 'all 0.2s ease'\n                }}\n                onClick={() => setSelectedMetric('fires')}\n              >\n                Fire Counts\n              </button>\n              <button\n                className={`metric-toggle-button ${selectedMetric === 'acres' ? 'active' : ''}`}\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  border: 'none',\n                  outline: 'none',\n                  background: selectedMetric === 'acres' ? '#3b82f6' : '#f9fafb',\n                  color: selectedMetric === 'acres' ? 'white' : '#4b5563',\n                  fontWeight: selectedMetric === 'acres' ? 'bold' : 'normal',\n                  cursor: 'pointer',\n                  padding: '10px 20px',\n                  minWidth: '120px',\n                  height: '40px',\n                  textAlign: 'center',\n                  transition: 'all 0.2s ease'\n                }}\n                onClick={() => setSelectedMetric('acres')}\n              >\n                Acres Burned\n              </button>\n            </div>\n          </div>\n\n          {/* Render the RadialFireChart component */}\n          <RadialBarChart\n            yearlyData={yearlyData}\n            monthlyDataByYear={monthlyDataByYear}\n            availableYears={availableYears}\n            selectedMetric={selectedMetric}\n          />\n        </div>\n      </div>\n\n      {/* Main content area with monthly visualization */}\n      <div className=\"chart-section\">\n        <div className=\"chart-container\">\n          <h3 className=\"section-title\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm9 4a1 1 0 10-2 0v6a1 1 0 102 0V7zm-3 2a1 1 0 10-2 0v4a1 1 0 102 0V9zm-3 3a1 1 0 10-2 0v1a1 1 0 102 0v-1z\" clipRule=\"evenodd\" />\n            </svg>\n            Monthly Acres Burned in {selectedYear || '...'}\n          </h3>\n          <div className=\"chart-description\">\n            Shows acres burned by month for the selected year, highlighting peak fire season.\n          </div>\n          <div className=\"chart-canvas\">\n            <svg ref={monthlyAcresChartRef} width=\"100%\" height=\"400\"></svg>\n          </div>\n        </div>\n      </div>\n\n      {/* Second visualization */}\n      <div className=\"chart-section\">\n        <div className=\"chart-container\">\n          <h3 className=\"section-title\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z\" clipRule=\"evenodd\" />\n            </svg>\n            Fire Counts by Month in {selectedYear || '...'}\n          </h3>\n          <div className=\"chart-description\">\n            Shows the number of fires recorded each month for the selected year.\n          </div>\n          <div className=\"chart-canvas\">\n            <svg ref={monthlyFiresChartRef} width=\"100%\" height=\"400\"></svg>\n          </div>\n        </div>\n      </div>\n\n      {/* Monthly data table */}\n      <div className=\"monthly-data-table-container\">\n        <h3 className=\"section-title\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M5 4a3 3 0 00-3 3v6a3 3 0 003 3h10a3 3 0 003-3V7a3 3 0 00-3-3H5zm-1 9v-1h5v2H5a1 1 0 01-1-1zm7 1h4a1 1 0 001-1v-1h-5v2zm0-4h5V8h-5v2zM9 8H4v2h5V8z\" clipRule=\"evenodd\" />\n          </svg>\n          Monthly Breakdown for {selectedYear || '...'}\n        </h3>\n        <div className=\"data-table\">\n          <table className=\"monthly-table\">\n            <thead>\n              <tr>\n                <th>Month</th>\n                <th>Fires</th>\n                <th>Acres Burned</th>\n                <th>Acres per Fire</th>\n              </tr>\n            </thead>\n            <tbody>\n              {getMonthByYearData().map((monthData) => (\n                <tr key={monthData.month} className={monthData.month === summaryStats.peakMonth ? 'peak-month' : ''}>\n                  <td>{monthData.month}</td>\n                  <td>{monthData.fires.toLocaleString()}</td>\n                  <td>{monthData.acres.toLocaleString()}</td>\n                  <td>{monthData.fires > 0 ? Math.round(monthData.acres / monthData.fires).toLocaleString() : 'N/A'}</td>\n                </tr>\n              ))}\n            </tbody>\n            <tfoot>\n              <tr>\n                <th>Total</th>\n                <th>{selectedYearData ? selectedYearData.fires.toLocaleString() : 0}</th>\n                <th>{selectedYearData ? selectedYearData.acres.toLocaleString() : 0}</th>\n                <th>\n                  {selectedYearData && selectedYearData.fires > 0\n                    ? Math.round(selectedYearData.acres / selectedYearData.fires).toLocaleString()\n                    : 'N/A'}\n                </th>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n      </div>\n\n      {/* Data Source Info */}\n      <div className=\"data-source-container\">\n        <h3 className=\"data-source-title\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"data-source-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n          </svg>\n          Data Source Information\n        </h3>\n        <div className=\"data-source-content\">\n          <p>\n            This visualization shows detailed monthly data for the selected year from the California wildfire records.\n            The dashboard includes data through 2025, with the monthly breakdown helping to identify fire patterns throughout the year and peak fire season.\n          </p>\n          <p>\n            The radial chart at the top shows seasonal patterns across multiple years, making it easy to identify recurring patterns and anomalies.\n          </p>\n          <p className=\"data-source-note\">\n            Return to the \"Dashboard Overview\" tab to see trends across multiple years.\n          </p>\n        </div>\n      </div>\n\n      <div className=\"refresh-button-container\">\n        <button className=\"refresh-button\" onClick={onRefresh}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"refresh-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\" clipRule=\"evenodd\" />\n          </svg>\n          Refresh Data\n        </button>\n      </div>\n    </div>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,SAASC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,MAAMC,+BAA+B,GAAGA,CAAC;EAC9CC,UAAU;EACVC,WAAW;EACXC,iBAAiB;EACjBC,YAAY;EACZC,cAAc;EACdC,YAAY;EACZC,YAAY;EACZC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,oBAAoB,GAAGhB,MAAM,CAAC,IAAI,CAAC;EACzC,MAAMiB,oBAAoB,GAAGjB,MAAM,CAAC,IAAI,CAAC;EACzC,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;;EAE/DF,SAAS,CAAC,MAAM;IACd,IAAIS,WAAW,CAACY,MAAM,GAAG,CAAC,EAAE;MAC1BC,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACb,WAAW,EAAEE,YAAY,CAAC,CAAC;;EAE/B;EACA,MAAMY,iBAAiB,GAAIC,GAAG,IAAK;IACjC,IAAIA,GAAG,IAAI,OAAO,EAAE;MAClB,OAAO,GAAG,CAACA,GAAG,GAAG,OAAO,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG;IACzC,CAAC,MAAM,IAAID,GAAG,IAAI,IAAI,EAAE;MACtB,OAAO,GAAG,CAACA,GAAG,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG;IACtC;IACA,OAAOD,GAAG;EACZ,CAAC;;EAED;EACA,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAI,CAAClB,UAAU,IAAIA,UAAU,CAACa,MAAM,KAAK,CAAC,IAAI,CAACV,YAAY,EAAE,OAAO,IAAI;IACxE,OAAOH,UAAU,CAACmB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKlB,YAAY,CAAC;EAC5D,CAAC;;EAED;EACA,MAAMmB,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI,CAACrB,WAAW,IAAIA,WAAW,CAACY,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE;IAEvD,MAAMU,MAAM,GAAG,CACb,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACtD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CACjE;;IAED;IACA,MAAMH,IAAI,GAAG,EAAE;IAEfG,MAAM,CAACC,OAAO,CAAEC,KAAK,IAAK;MACxB,MAAMC,SAAS,GAAGzB,WAAW,CAACkB,IAAI,CAACQ,CAAC,IAAIA,CAAC,CAACF,KAAK,KAAKA,KAAK,CAAC;MAC1DL,IAAI,CAACQ,IAAI,CAAC;QACRH,KAAK;QACLI,KAAK,EAAEH,SAAS,GAAGA,SAAS,CAACG,KAAK,GAAG,CAAC;QACtCC,KAAK,EAAEJ,SAAS,GAAGA,SAAS,CAACI,KAAK,GAAG;MACvC,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAOV,IAAI;EACb,CAAC;EAED,SAASW,kBAAkBA,CAACC,UAAU,EAAE;IACtC;IACA,MAAMC,cAAc,GAAGD,UAAU,CAACE,UAAU,CAACC,WAAW,IACtDH,UAAU,CAACE,UAAU,CAACE,qBAAqB,CAAC,CAAC,CAACC,KAAK,IACnDC,MAAM,CAACC,UAAU,GAAG,EAAE;;IAExB;IACA,OAAON,cAAc,GAAG,EAAE,CAAC,CAAC;EAC9B;EAEA,MAAMnB,YAAY,GAAGA,CAAA,KAAM;IACzB0B,uBAAuB,CAAC,CAAC;IACzBC,uBAAuB,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMD,uBAAuB,GAAGA,CAAA,KAAM;IACpC,MAAMpB,IAAI,GAAGE,kBAAkB,CAAC,CAAC;IACjC,IAAIF,IAAI,CAACP,MAAM,KAAK,CAAC,IAAI,CAACJ,oBAAoB,CAACiC,OAAO,EAAE;IAExD,MAAMC,MAAM,GAAG;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAG,CAAC;IAC5D,MAAMf,UAAU,GAAGvB,oBAAoB,CAACiC,OAAO;IAC/C,MAAML,KAAK,GAAGN,kBAAkB,CAACC,UAAU,CAAC;IAC5C,MAAMgB,MAAM,GAAG,GAAG;IAClB,MAAMC,UAAU,GAAGZ,KAAK,GAAGM,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACE,KAAK;IACrD,MAAMK,WAAW,GAAGF,MAAM,GAAGL,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACG,MAAM;;IAEvD;IACAnD,EAAE,CAACwD,MAAM,CAACnB,UAAU,CAAC,CAACoB,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;;IAE7C;IACA,MAAMC,GAAG,GAAG3D,EAAE,CAACwD,MAAM,CAACnB,UAAU,CAAC,CAC9BuB,IAAI,CAAC,OAAO,EAAElB,KAAK,CAAC,CACpBkB,IAAI,CAAC,QAAQ,EAAEP,MAAM,CAAC,CACtBQ,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,WAAW,EAAE,aAAaZ,MAAM,CAACI,IAAI,IAAIJ,MAAM,CAACC,GAAG,GAAG,CAAC;;IAE/D;IACA,MAAMa,MAAM,GAAG9D,EAAE,CAAC+D,SAAS,CAAC,CAAC,CAC1BC,MAAM,CAACvC,IAAI,CAACwC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACpC,KAAK,CAAC,CAAC,CAC9BqC,KAAK,CAAC,CAAC,CAAC,EAAEb,UAAU,CAAC,CAAC,CACtBc,OAAO,CAAC,GAAG,CAAC;IAEf,MAAMC,MAAM,GAAGrE,EAAE,CAACsE,WAAW,CAAC,CAAC,CAC5BN,MAAM,CAAC,CAAC,CAAC,EAAEhE,EAAE,CAACuE,GAAG,CAAC9C,IAAI,EAAEyC,CAAC,IAAIA,CAAC,CAAChC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAC7CiC,KAAK,CAAC,CAACZ,WAAW,EAAE,CAAC,CAAC,CAAC;;IAE1B;IACAI,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACZD,IAAI,CAAC,WAAW,EAAE,eAAeL,WAAW,GAAG,CAAC,CAChDiB,IAAI,CAACxE,EAAE,CAACyE,UAAU,CAACX,MAAM,CAAC,CAAC,CAC3BL,SAAS,CAAC,MAAM,CAAC,CACjBG,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC,CAChCc,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,CAC3Bd,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CACnBA,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;IAEtBD,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACZW,IAAI,CAACxE,EAAE,CAAC2E,QAAQ,CAACN,MAAM,CAAC,CAACO,UAAU,CAACV,CAAC,IAAI9C,iBAAiB,CAAC8C,CAAC,CAAC,CAAC,CAAC;;IAElE;IACAP,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACZD,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAC3BH,SAAS,CAAC,MAAM,CAAC,CACjBhC,IAAI,CAAC4C,MAAM,CAACQ,KAAK,CAAC,CAAC,CAAC,CACpBC,KAAK,CAAC,CAAC,CACPjB,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CACbA,IAAI,CAAC,IAAI,EAAEM,CAAC,IAAIG,MAAM,CAACH,CAAC,CAAC,CAAC,CAC1BN,IAAI,CAAC,IAAI,EAAEN,UAAU,CAAC,CACtBM,IAAI,CAAC,IAAI,EAAEM,CAAC,IAAIG,MAAM,CAACH,CAAC,CAAC,CAAC,CAC1BN,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CACzBA,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC;;IAElC;IACAD,GAAG,CAACF,SAAS,CAAC,MAAM,CAAC,CAClBhC,IAAI,CAACA,IAAI,CAAC,CACVqD,KAAK,CAAC,CAAC,CACPjB,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,GAAG,EAAEM,CAAC,IAAIJ,MAAM,CAACI,CAAC,CAACpC,KAAK,CAAC,CAAC,CAC/B8B,IAAI,CAAC,GAAG,EAAEM,CAAC,IAAIG,MAAM,CAACH,CAAC,CAAChC,KAAK,CAAC,CAAC,CAC/B0B,IAAI,CAAC,OAAO,EAAEE,MAAM,CAACiB,SAAS,CAAC,CAAC,CAAC,CACjCnB,IAAI,CAAC,QAAQ,EAAEM,CAAC,IAAIX,WAAW,GAAGc,MAAM,CAACH,CAAC,CAAChC,KAAK,CAAC,CAAC,CAClD0B,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CACvBA,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CACbA,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;;IAEhB;IACAD,GAAG,CAACF,SAAS,CAAC,cAAc,CAAC,CAC1BhC,IAAI,CAACA,IAAI,CAACuD,MAAM,CAACd,CAAC,IAAIA,CAAC,CAAChC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;IAAA,CACxC4C,KAAK,CAAC,CAAC,CACPjB,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,GAAG,EAAEM,CAAC,IAAIJ,MAAM,CAACI,CAAC,CAACpC,KAAK,CAAC,GAAGgC,MAAM,CAACiB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CACxDnB,IAAI,CAAC,GAAG,EAAEM,CAAC,IAAIG,MAAM,CAACH,CAAC,CAAChC,KAAK,CAAC,GAAG,CAAC,CAAC,CACnC0B,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BqB,IAAI,CAACf,CAAC,IAAI9C,iBAAiB,CAAC8C,CAAC,CAAChC,KAAK,CAAC,CAAC,CACrCwC,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAC1BA,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC;;IAE3B;IACAf,GAAG,CAACE,MAAM,CAAC,MAAM,CAAC,CACfD,IAAI,CAAC,GAAG,EAAEN,UAAU,GAAG,CAAC,CAAC,CACzBM,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CACdA,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7Bc,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAC1BA,KAAK,CAAC,aAAa,EAAE,MAAM,CAAC,CAC5BO,IAAI,CAAC,4BAA4BzE,YAAY,EAAE,CAAC;;IAEnD;IACA,MAAM0E,OAAO,GAAGlF,EAAE,CAACwD,MAAM,CAAC,MAAM,CAAC,CAC9BC,SAAS,CAAC,UAAU,CAAC,CACrBhC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CACZ0D,IAAI,CAAC,KAAK,CAAC,CACXvB,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CACxBc,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;;IAEtB;IACAf,GAAG,CAACF,SAAS,CAAC,MAAM,CAAC,CAClB2B,EAAE,CAAC,WAAW,EAAE,UAAUC,KAAK,EAAEnB,CAAC,EAAE;MACnClE,EAAE,CAACwD,MAAM,CAAC,IAAI,CAAC,CACZ8B,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,GAAG,CAAC,CACb3B,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC;MAEvBsB,OAAO,CAACI,UAAU,CAAC,CAAC,CACjBC,QAAQ,CAAC,GAAG,CAAC,CACbb,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC;MAExBQ,OAAO,CAACM,IAAI,CAAC;AACrB,oBAAoBtB,CAAC,CAACpC,KAAK,IAAItB,YAAY;AAC3C,0BAA0B0D,CAAC,CAAChC,KAAK,CAACuD,cAAc,CAAC,CAAC;AAClD,mBAAmBvB,CAAC,CAAC/B,KAAK,CAACsD,cAAc,CAAC,CAAC;AAC3C,YAAYvB,CAAC,CAAC/B,KAAK,GAAG,CAAC,GAAG,mBAAmBuD,IAAI,CAACC,KAAK,CAACzB,CAAC,CAAChC,KAAK,GAAGgC,CAAC,CAAC/B,KAAK,CAAC,CAACsD,cAAc,CAAC,CAAC,EAAE,GAAG,EAAE;AAClG,SAAS,CAAC,CACCf,KAAK,CAAC,MAAM,EAAGW,KAAK,CAACO,KAAK,GAAG,EAAE,GAAI,IAAI,CAAC,CACxClB,KAAK,CAAC,KAAK,EAAGW,KAAK,CAACQ,KAAK,GAAG,EAAE,GAAI,IAAI,CAAC;IAC5C,CAAC,CAAC,CACDT,EAAE,CAAC,UAAU,EAAE,YAAY;MAC1BpF,EAAE,CAACwD,MAAM,CAAC,IAAI,CAAC,CACZ8B,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,GAAG,CAAC,CACb3B,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;MAErBsB,OAAO,CAACI,UAAU,CAAC,CAAC,CACjBC,QAAQ,CAAC,GAAG,CAAC,CACbb,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IACxB,CAAC,CAAC;EACN,CAAC;EAED,MAAM5B,uBAAuB,GAAGA,CAAA,KAAM;IACpC,MAAMrB,IAAI,GAAGE,kBAAkB,CAAC,CAAC;IACjC,IAAIF,IAAI,CAACP,MAAM,KAAK,CAAC,IAAI,CAACH,oBAAoB,CAACgC,OAAO,EAAE;IAExD,MAAMC,MAAM,GAAG;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAG,CAAC;IAC5D,MAAMf,UAAU,GAAGtB,oBAAoB,CAACgC,OAAO;IAC/C,MAAML,KAAK,GAAGN,kBAAkB,CAACC,UAAU,CAAC;IAC5C,MAAMgB,MAAM,GAAG,GAAG;IAClB,MAAMC,UAAU,GAAGZ,KAAK,GAAGM,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACE,KAAK;IACrD,MAAMK,WAAW,GAAGF,MAAM,GAAGL,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACG,MAAM;;IAEvD;IACAnD,EAAE,CAACwD,MAAM,CAACnB,UAAU,CAAC,CAACoB,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;;IAE7C;IACA,MAAMC,GAAG,GAAG3D,EAAE,CAACwD,MAAM,CAACnB,UAAU,CAAC,CAC9BuB,IAAI,CAAC,OAAO,EAAElB,KAAK,CAAC,CACpBkB,IAAI,CAAC,QAAQ,EAAEP,MAAM,CAAC,CACtBQ,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,WAAW,EAAE,aAAaZ,MAAM,CAACI,IAAI,IAAIJ,MAAM,CAACC,GAAG,GAAG,CAAC;;IAE/D;IACA,MAAMa,MAAM,GAAG9D,EAAE,CAAC+D,SAAS,CAAC,CAAC,CAC1BC,MAAM,CAACvC,IAAI,CAACwC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACpC,KAAK,CAAC,CAAC,CAC9BqC,KAAK,CAAC,CAAC,CAAC,EAAEb,UAAU,CAAC,CAAC,CACtBc,OAAO,CAAC,GAAG,CAAC;IAEf,MAAMC,MAAM,GAAGrE,EAAE,CAACsE,WAAW,CAAC,CAAC,CAC5BN,MAAM,CAAC,CAAC,CAAC,EAAEhE,EAAE,CAACuE,GAAG,CAAC9C,IAAI,EAAEyC,CAAC,IAAIA,CAAC,CAAC/B,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAC7CgC,KAAK,CAAC,CAACZ,WAAW,EAAE,CAAC,CAAC,CAAC;;IAE1B;IACAI,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACZD,IAAI,CAAC,WAAW,EAAE,eAAeL,WAAW,GAAG,CAAC,CAChDiB,IAAI,CAACxE,EAAE,CAACyE,UAAU,CAACX,MAAM,CAAC,CAAC,CAC3BL,SAAS,CAAC,MAAM,CAAC,CACjBG,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC,CAChCc,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,CAC3Bd,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CACnBA,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;IAEtBD,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACZW,IAAI,CAACxE,EAAE,CAAC2E,QAAQ,CAACN,MAAM,CAAC,CAAC;;IAE5B;IACAV,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACZD,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAC3BH,SAAS,CAAC,MAAM,CAAC,CACjBhC,IAAI,CAAC4C,MAAM,CAACQ,KAAK,CAAC,CAAC,CAAC,CACpBC,KAAK,CAAC,CAAC,CACPjB,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CACbA,IAAI,CAAC,IAAI,EAAEM,CAAC,IAAIG,MAAM,CAACH,CAAC,CAAC,CAAC,CAC1BN,IAAI,CAAC,IAAI,EAAEN,UAAU,CAAC,CACtBM,IAAI,CAAC,IAAI,EAAEM,CAAC,IAAIG,MAAM,CAACH,CAAC,CAAC,CAAC,CAC1BN,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CACzBA,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC;;IAElC;IACA,MAAMkC,aAAa,GAAG9F,EAAE,CAAC+F,IAAI,CAAC,CAAC,CAC5BC,CAAC,CAAC9B,CAAC,IAAIJ,MAAM,CAACI,CAAC,CAACpC,KAAK,CAAC,GAAGgC,MAAM,CAACiB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAChDkB,CAAC,CAAC/B,CAAC,IAAIG,MAAM,CAACH,CAAC,CAAC/B,KAAK,CAAC,CAAC;;IAE1B;IACAwB,GAAG,CAACE,MAAM,CAAC,MAAM,CAAC,CACfqC,KAAK,CAACzE,IAAI,CAAC,CACXmC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CACpBA,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CACzBA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CACvBA,IAAI,CAAC,GAAG,EAAEkC,aAAa,CAAC;;IAE3B;IACAnC,GAAG,CAACF,SAAS,CAAC,MAAM,CAAC,CAClBhC,IAAI,CAACA,IAAI,CAAC,CACVqD,KAAK,CAAC,CAAC,CACPjB,MAAM,CAAC,QAAQ,CAAC,CAChBD,IAAI,CAAC,IAAI,EAAEM,CAAC,IAAIJ,MAAM,CAACI,CAAC,CAACpC,KAAK,CAAC,GAAGgC,MAAM,CAACiB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CACzDnB,IAAI,CAAC,IAAI,EAAEM,CAAC,IAAIG,MAAM,CAACH,CAAC,CAAC/B,KAAK,CAAC,CAAC,CAChCyB,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACZA,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC;;IAE1B;IACAD,GAAG,CAACE,MAAM,CAAC,MAAM,CAAC,CACfD,IAAI,CAAC,GAAG,EAAEN,UAAU,GAAG,CAAC,CAAC,CACzBM,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CACdA,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7Bc,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAC1BA,KAAK,CAAC,aAAa,EAAE,MAAM,CAAC,CAC5BO,IAAI,CAAC,2BAA2BzE,YAAY,EAAE,CAAC;;IAElD;IACA,MAAM0E,OAAO,GAAGlF,EAAE,CAACwD,MAAM,CAAC,MAAM,CAAC,CAC9BC,SAAS,CAAC,UAAU,CAAC,CACrBhC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CACZ0D,IAAI,CAAC,KAAK,CAAC,CACXvB,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CACxBc,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;;IAEtB;IACAf,GAAG,CAACF,SAAS,CAAC,QAAQ,CAAC,CACpB2B,EAAE,CAAC,WAAW,EAAE,UAAUC,KAAK,EAAEnB,CAAC,EAAE;MACnClE,EAAE,CAACwD,MAAM,CAAC,IAAI,CAAC,CACZ8B,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,GAAG,CAAC,CACb3B,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;MAEfsB,OAAO,CAACI,UAAU,CAAC,CAAC,CACjBC,QAAQ,CAAC,GAAG,CAAC,CACbb,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC;MAExBQ,OAAO,CAACM,IAAI,CAAC;AACrB,oBAAoBtB,CAAC,CAACpC,KAAK,IAAItB,YAAY;AAC3C,mBAAmB0D,CAAC,CAAC/B,KAAK,CAACsD,cAAc,CAAC,CAAC;AAC3C,0BAA0BvB,CAAC,CAAChC,KAAK,CAACuD,cAAc,CAAC,CAAC;AAClD,YAAYvB,CAAC,CAAC/B,KAAK,GAAG,CAAC,GAAG,mBAAmBuD,IAAI,CAACC,KAAK,CAACzB,CAAC,CAAChC,KAAK,GAAGgC,CAAC,CAAC/B,KAAK,CAAC,CAACsD,cAAc,CAAC,CAAC,EAAE,GAAG,EAAE;AAClG,SAAS,CAAC,CACCf,KAAK,CAAC,MAAM,EAAGW,KAAK,CAACO,KAAK,GAAG,EAAE,GAAI,IAAI,CAAC,CACxClB,KAAK,CAAC,KAAK,EAAGW,KAAK,CAACQ,KAAK,GAAG,EAAE,GAAI,IAAI,CAAC;IAC5C,CAAC,CAAC,CACDT,EAAE,CAAC,UAAU,EAAE,YAAY;MAC1BpF,EAAE,CAACwD,MAAM,CAAC,IAAI,CAAC,CACZ8B,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,GAAG,CAAC,CACb3B,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;MAEfsB,OAAO,CAACI,UAAU,CAAC,CAAC,CACjBC,QAAQ,CAAC,GAAG,CAAC,CACbb,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IACxB,CAAC,CAAC;EACN,CAAC;EAED,MAAMyB,gBAAgB,GAAG5E,mBAAmB,CAAC,CAAC;EAE9C,oBACEpB,OAAA;IAAKiG,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACxClG,OAAA;MAAKiG,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BlG,OAAA;QAAIiG,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnEtG,OAAA;QAAGiG,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAErC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAGNtG,OAAA;MAAKiG,SAAS,EAAC,0BAA0B;MAAAC,QAAA,gBACvClG,OAAA;QAAKiG,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BlG,OAAA;UAAOuG,OAAO,EAAC,aAAa;UAACN,SAAS,EAAC,qBAAqB;UAAAC,QAAA,EAAC;QAAyB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9FtG,OAAA;UACEwG,EAAE,EAAC,aAAa;UAChBP,SAAS,EAAC,wBAAwB;UAClCQ,KAAK,EAAEpG,YAAY,IAAI,EAAG;UAC1BqG,QAAQ,EAAGC,CAAC,IAAKnG,YAAY,CAACmG,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC9CI,QAAQ,EAAEvG,cAAc,CAACS,MAAM,KAAK,CAAE;UAAAmF,QAAA,EAErC5F,cAAc,CAACwD,GAAG,CAACvC,IAAI,iBACtBvB,OAAA;YAAmByG,KAAK,EAAElF,IAAK;YAAA2E,QAAA,EAC5B3E;UAAI,GADMA,IAAI;YAAA4E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAET,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAELN,gBAAgB,iBACfhG,OAAA;QAAKiG,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BlG,OAAA;UAAKiG,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChClG,OAAA;YAAKiG,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3CtG,OAAA;YAAKiG,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAEF,gBAAgB,CAAChE,KAAK,CAACsD,cAAc,CAAC;UAAC;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC,eACNtG,OAAA;UAAKiG,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChClG,OAAA;YAAKiG,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClDtG,OAAA;YAAKiG,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAEF,gBAAgB,CAACjE,KAAK,CAACuD,cAAc,CAAC;UAAC;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC,eACNtG,OAAA;UAAKiG,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChClG,OAAA;YAAKiG,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAChDtG,OAAA;YAAKiG,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAE3F,YAAY,CAACuG,SAAS,IAAI;UAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNtG,OAAA;MAAKiG,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BlG,OAAA;QAAKiG,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BlG,OAAA;UAAKiG,SAAS,EAAC,yBAAyB;UAAC1B,KAAK,EAAE;YAC9CwC,OAAO,EAAE,MAAM;YACfC,cAAc,EAAE,QAAQ;YACxBC,UAAU,EAAE,QAAQ;YACpB1E,KAAK,EAAE,MAAM;YACbM,MAAM,EAAE,QAAQ;YAChBoB,OAAO,EAAE,QAAQ;YACjBiD,YAAY,EAAE;UAChB,CAAE;UAAAhB,QAAA,eACAlG,OAAA;YAAKiG,SAAS,EAAC,uBAAuB;YAAC1B,KAAK,EAAE;cAC5CwC,OAAO,EAAE,MAAM;cACfI,YAAY,EAAE,KAAK;cACnBC,QAAQ,EAAE,QAAQ;cAClBC,MAAM,EAAE,mBAAmB;cAC3BC,SAAS,EAAE;YACb,CAAE;YAAApB,QAAA,gBACAlG,OAAA;cACEiG,SAAS,EAAE,wBAAwBpF,cAAc,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAE,EAAG;cAChF0D,KAAK,EAAE;gBACLwC,OAAO,EAAE,MAAM;gBACfC,cAAc,EAAE,QAAQ;gBACxBC,UAAU,EAAE,QAAQ;gBACpBI,MAAM,EAAE,MAAM;gBACdE,OAAO,EAAE,MAAM;gBACfC,UAAU,EAAE3G,cAAc,KAAK,OAAO,GAAG,SAAS,GAAG,SAAS;gBAC9D4G,KAAK,EAAE5G,cAAc,KAAK,OAAO,GAAG,OAAO,GAAG,SAAS;gBACvD6G,UAAU,EAAE7G,cAAc,KAAK,OAAO,GAAG,MAAM,GAAG,QAAQ;gBAC1D8G,MAAM,EAAE,SAAS;gBACjB1D,OAAO,EAAE,WAAW;gBACpB2D,QAAQ,EAAE,OAAO;gBACjB1E,MAAM,EAAE,MAAM;gBACd2E,SAAS,EAAE,QAAQ;gBACnB1C,UAAU,EAAE;cACd,CAAE;cACF2C,OAAO,EAAEA,CAAA,KAAMhH,iBAAiB,CAAC,OAAO,CAAE;cAAAoF,QAAA,EAC3C;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTtG,OAAA;cACEiG,SAAS,EAAE,wBAAwBpF,cAAc,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAE,EAAG;cAChF0D,KAAK,EAAE;gBACLwC,OAAO,EAAE,MAAM;gBACfC,cAAc,EAAE,QAAQ;gBACxBC,UAAU,EAAE,QAAQ;gBACpBI,MAAM,EAAE,MAAM;gBACdE,OAAO,EAAE,MAAM;gBACfC,UAAU,EAAE3G,cAAc,KAAK,OAAO,GAAG,SAAS,GAAG,SAAS;gBAC9D4G,KAAK,EAAE5G,cAAc,KAAK,OAAO,GAAG,OAAO,GAAG,SAAS;gBACvD6G,UAAU,EAAE7G,cAAc,KAAK,OAAO,GAAG,MAAM,GAAG,QAAQ;gBAC1D8G,MAAM,EAAE,SAAS;gBACjB1D,OAAO,EAAE,WAAW;gBACpB2D,QAAQ,EAAE,OAAO;gBACjB1E,MAAM,EAAE,MAAM;gBACd2E,SAAS,EAAE,QAAQ;gBACnB1C,UAAU,EAAE;cACd,CAAE;cACF2C,OAAO,EAAEA,CAAA,KAAMhH,iBAAiB,CAAC,OAAO,CAAE;cAAAoF,QAAA,EAC3C;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGNtG,OAAA,CAACF,cAAc;UACbI,UAAU,EAAEA,UAAW;UACvBE,iBAAiB,EAAEA,iBAAkB;UACrCE,cAAc,EAAEA,cAAe;UAC/BO,cAAc,EAAEA;QAAe;UAAAsF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNtG,OAAA;MAAKiG,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BlG,OAAA;QAAKiG,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BlG,OAAA;UAAIiG,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC3BlG,OAAA;YAAK+H,KAAK,EAAC,4BAA4B;YAAC9B,SAAS,EAAC,cAAc;YAAC+B,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,cAAc;YAAA/B,QAAA,eACtGlG,OAAA;cAAMkI,QAAQ,EAAC,SAAS;cAACnE,CAAC,EAAC,4KAA4K;cAACoE,QAAQ,EAAC;YAAS;cAAAhC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1N,CAAC,4BACkB,EAACjG,YAAY,IAAI,KAAK;QAAA;UAAA8F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACLtG,OAAA;UAAKiG,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAEnC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNtG,OAAA;UAAKiG,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3BlG,OAAA;YAAKoI,GAAG,EAAEzH,oBAAqB;YAAC4B,KAAK,EAAC,MAAM;YAACW,MAAM,EAAC;UAAK;YAAAiD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNtG,OAAA;MAAKiG,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BlG,OAAA;QAAKiG,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BlG,OAAA;UAAIiG,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC3BlG,OAAA;YAAK+H,KAAK,EAAC,4BAA4B;YAAC9B,SAAS,EAAC,cAAc;YAAC+B,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,cAAc;YAAA/B,QAAA,eACtGlG,OAAA;cAAMkI,QAAQ,EAAC,SAAS;cAACnE,CAAC,EAAC,0KAA0K;cAACoE,QAAQ,EAAC;YAAS;cAAAhC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxN,CAAC,4BACkB,EAACjG,YAAY,IAAI,KAAK;QAAA;UAAA8F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACLtG,OAAA;UAAKiG,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAEnC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNtG,OAAA;UAAKiG,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3BlG,OAAA;YAAKoI,GAAG,EAAExH,oBAAqB;YAAC2B,KAAK,EAAC,MAAM;YAACW,MAAM,EAAC;UAAK;YAAAiD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNtG,OAAA;MAAKiG,SAAS,EAAC,8BAA8B;MAAAC,QAAA,gBAC3ClG,OAAA;QAAIiG,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC3BlG,OAAA;UAAK+H,KAAK,EAAC,4BAA4B;UAAC9B,SAAS,EAAC,cAAc;UAAC+B,OAAO,EAAC,WAAW;UAACC,IAAI,EAAC,cAAc;UAAA/B,QAAA,eACtGlG,OAAA;YAAMkI,QAAQ,EAAC,SAAS;YAACnE,CAAC,EAAC,oJAAoJ;YAACoE,QAAQ,EAAC;UAAS;YAAAhC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClM,CAAC,0BACgB,EAACjG,YAAY,IAAI,KAAK;MAAA;QAAA8F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACLtG,OAAA;QAAKiG,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzBlG,OAAA;UAAOiG,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC9BlG,OAAA;YAAAkG,QAAA,eACElG,OAAA;cAAAkG,QAAA,gBACElG,OAAA;gBAAAkG,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACdtG,OAAA;gBAAAkG,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACdtG,OAAA;gBAAAkG,QAAA,EAAI;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrBtG,OAAA;gBAAAkG,QAAA,EAAI;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRtG,OAAA;YAAAkG,QAAA,EACG1E,kBAAkB,CAAC,CAAC,CAACsC,GAAG,CAAElC,SAAS,iBAClC5B,OAAA;cAA0BiG,SAAS,EAAErE,SAAS,CAACD,KAAK,KAAKpB,YAAY,CAACuG,SAAS,GAAG,YAAY,GAAG,EAAG;cAAAZ,QAAA,gBAClGlG,OAAA;gBAAAkG,QAAA,EAAKtE,SAAS,CAACD;cAAK;gBAAAwE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC1BtG,OAAA;gBAAAkG,QAAA,EAAKtE,SAAS,CAACI,KAAK,CAACsD,cAAc,CAAC;cAAC;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3CtG,OAAA;gBAAAkG,QAAA,EAAKtE,SAAS,CAACG,KAAK,CAACuD,cAAc,CAAC;cAAC;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3CtG,OAAA;gBAAAkG,QAAA,EAAKtE,SAAS,CAACI,KAAK,GAAG,CAAC,GAAGuD,IAAI,CAACC,KAAK,CAAC5D,SAAS,CAACG,KAAK,GAAGH,SAAS,CAACI,KAAK,CAAC,CAACsD,cAAc,CAAC,CAAC,GAAG;cAAK;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GAJhG1E,SAAS,CAACD,KAAK;cAAAwE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKpB,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC,eACRtG,OAAA;YAAAkG,QAAA,eACElG,OAAA;cAAAkG,QAAA,gBACElG,OAAA;gBAAAkG,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACdtG,OAAA;gBAAAkG,QAAA,EAAKF,gBAAgB,GAAGA,gBAAgB,CAAChE,KAAK,CAACsD,cAAc,CAAC,CAAC,GAAG;cAAC;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACzEtG,OAAA;gBAAAkG,QAAA,EAAKF,gBAAgB,GAAGA,gBAAgB,CAACjE,KAAK,CAACuD,cAAc,CAAC,CAAC,GAAG;cAAC;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACzEtG,OAAA;gBAAAkG,QAAA,EACGF,gBAAgB,IAAIA,gBAAgB,CAAChE,KAAK,GAAG,CAAC,GAC3CuD,IAAI,CAACC,KAAK,CAACQ,gBAAgB,CAACjE,KAAK,GAAGiE,gBAAgB,CAAChE,KAAK,CAAC,CAACsD,cAAc,CAAC,CAAC,GAC5E;cAAK;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNtG,OAAA;MAAKiG,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpClG,OAAA;QAAIiG,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC/BlG,OAAA;UAAK+H,KAAK,EAAC,4BAA4B;UAAC9B,SAAS,EAAC,kBAAkB;UAAC+B,OAAO,EAAC,WAAW;UAACC,IAAI,EAAC,cAAc;UAAA/B,QAAA,eAC1GlG,OAAA;YAAMkI,QAAQ,EAAC,SAAS;YAACnE,CAAC,EAAC,kIAAkI;YAACoE,QAAQ,EAAC;UAAS;YAAAhC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChL,CAAC,2BAER;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLtG,OAAA;QAAKiG,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClClG,OAAA;UAAAkG,QAAA,EAAG;QAGH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJtG,OAAA;UAAAkG,QAAA,EAAG;QAEH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJtG,OAAA;UAAGiG,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAEhC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENtG,OAAA;MAAKiG,SAAS,EAAC,0BAA0B;MAAAC,QAAA,eACvClG,OAAA;QAAQiG,SAAS,EAAC,gBAAgB;QAAC6B,OAAO,EAAErH,SAAU;QAAAyF,QAAA,gBACpDlG,OAAA;UAAK+H,KAAK,EAAC,4BAA4B;UAAC9B,SAAS,EAAC,cAAc;UAAC+B,OAAO,EAAC,WAAW;UAACC,IAAI,EAAC,cAAc;UAAA/B,QAAA,eACtGlG,OAAA;YAAMkI,QAAQ,EAAC,SAAS;YAACnE,CAAC,EAAC,sSAAsS;YAACoE,QAAQ,EAAC;UAAS;YAAAhC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpV,CAAC,gBAER;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5F,EAAA,CA/jBWT,+BAA+B;AAAAoI,EAAA,GAA/BpI,+BAA+B;AAAA,IAAAoI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}