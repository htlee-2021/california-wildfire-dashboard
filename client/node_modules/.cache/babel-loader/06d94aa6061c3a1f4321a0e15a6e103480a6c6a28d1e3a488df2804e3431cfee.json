{"ast":null,"code":"// MainDashboardD3.js - Main dashboard component with D3 charts\nclass MainDashboardD3 {\n  constructor(containerId, summaryStats, yearlyData, onRefresh) {\n    this.container = document.getElementById(containerId);\n    this.summaryStats = summaryStats;\n    this.yearlyData = yearlyData;\n    this.onRefresh = onRefresh;\n    this.init();\n  }\n  init() {\n    this.render();\n    this.createCharts();\n    this.setupEventListeners();\n  }\n\n  // Format large numbers\n  formatLargeNumber(num) {\n    if (num >= 1000000) {\n      return `${(num / 1000000).toFixed(1)}M`;\n    } else if (num >= 1000) {\n      return `${(num / 1000).toFixed(1)}K`;\n    }\n    return num;\n  }\n\n  // Get data for the overview chart (last 10 years)\n  getRecentYearsData() {\n    if (!this.yearlyData || this.yearlyData.length === 0) return [];\n\n    // Sort years in ascending order\n    const sortedData = [...this.yearlyData].sort((a, b) => parseInt(a.year) - parseInt(b.year));\n\n    // Take the last 10 years or all if less than 10\n    return sortedData.slice(Math.max(0, sortedData.length - 10));\n  }\n\n  // Data for acres by fire ratio pie chart\n  getAcresByFireData() {\n    // Calculate average acres per fire for the 5 worst years\n    const sortedByAcres = [...this.yearlyData].sort((a, b) => b.acres - a.acres).slice(0, 5).map(year => ({\n      name: year.year,\n      value: Math.round(year.acres / year.fires),\n      acres: year.acres,\n      fires: year.fires\n    }));\n    return sortedByAcres;\n  }\n  render() {\n    this.container.innerHTML = `\n      <div class=\"main-dashboard\">\n        <div class=\"dashboard-header\">\n          <h2 class=\"dashboard-title\">California Wildfire Dashboard</h2>\n          <p class=\"dashboard-description\">\n            Overview of California wildfire data with focus on recent trends and key metrics\n          </p>\n        </div>\n        \n        <!-- Key Statistics Cards -->\n        <div class=\"key-stats-container\">\n          <div class=\"key-stat-grid\">\n            <div class=\"key-stat-card primary\">\n              <div class=\"key-stat-title\">Most Recent Year (${this.summaryStats.recentYear})</div>\n              <div class=\"key-stat-value-container\">\n                <div class=\"key-stat-value-group\">\n                  <div class=\"key-stat-value\">${this.summaryStats.recentYearFires.toLocaleString()}</div>\n                  <div class=\"key-stat-label\">Fires</div>\n                </div>\n                <div class=\"key-stat-value-group\">\n                  <div class=\"key-stat-value\">${this.summaryStats.recentYearAcres.toLocaleString()}</div>\n                  <div class=\"key-stat-label\">Acres Burned</div>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"key-stat-card danger\">\n              <div class=\"key-stat-title\">Worst Fire Year (${this.summaryStats.worstYear})</div>\n              <div class=\"key-stat-value\">${this.summaryStats.worstYearAcres.toLocaleString()}</div>\n              <div class=\"key-stat-label\">Acres Burned</div>\n            </div>\n            \n            <div class=\"key-stat-card warning\">\n              <div class=\"key-stat-title\">Historical Totals</div>\n              <div class=\"key-stat-value-container\">\n                <div class=\"key-stat-value-group\">\n                  <div class=\"key-stat-value\">${this.summaryStats.totalFires.toLocaleString()}</div>\n                  <div class=\"key-stat-label\">Total Fires</div>\n                </div>\n                <div class=\"key-stat-value-group\">\n                  <div class=\"key-stat-value\">${this.summaryStats.totalAcres.toLocaleString()}</div>\n                  <div class=\"key-stat-label\">Total Acres</div>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"key-stat-card info\">\n              <div class=\"key-stat-title\">Annual Averages</div>\n              <div class=\"key-stat-value-container\">\n                <div class=\"key-stat-value-group\">\n                  <div class=\"key-stat-value\">${this.summaryStats.avgAnnualFires.toLocaleString()}</div>\n                  <div class=\"key-stat-label\">Fires per Year</div>\n                </div>\n                <div class=\"key-stat-value-group\">\n                  <div class=\"key-stat-value\">${this.summaryStats.avgAnnualAcres.toLocaleString()}</div>\n                  <div class=\"key-stat-label\">Acres per Year</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Recent Years Chart -->\n        <div class=\"chart-section\">\n          <div class=\"chart-container\">\n            <h3 class=\"section-title\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M5 2a1 1 0 011 1v1h1a1 1 0 010 2H6v1a1 1 0 01-2 0V6H3a1 1 0 010-2h1V3a1 1 0 011-1zm0 10a1 1 0 011 1v1h1a1 1 0 110 2H6v1a1 1 0 11-2 0v-1H3a1 1 0 110-2h1v-1a1 1 0 011-1zM12 2a1 1 0 01.967.744L14.146 7.2 17.5 9.134a1 1 0 010 1.732l-3.354 1.935-1.18 4.455a1 1 0 01-1.933 0L9.854 12.8 6.5 10.866a1 1 0 010-1.732l3.354-1.935 1.18-4.455A1 1 0 0112 2z\" clip-rule=\"evenodd\" />\n              </svg>\n              Fire Trends: Recent 10 Years\n            </h3>\n            <div class=\"chart-description\">\n              Shows the number of fires and acres burned in recent years, highlighting the increasing trend.\n            </div>\n            <div class=\"chart-canvas\">\n              <svg id=\"recent-years-chart\" width=\"100%\" height=\"400\"></svg>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Two-column charts section -->\n        <div class=\"two-column-chart-section\">\n          <div class=\"chart-container half-width\">\n            <h3 class=\"section-title\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path d=\"M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z\" />\n                <path d=\"M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z\" />\n              </svg>\n              Fire Intensity (Acres per Fire)\n            </h3>\n            <div class=\"chart-description\">\n              Comparison of acres burned per fire for the worst 5 years, indicating fire severity.\n            </div>\n            <div class=\"chart-canvas\">\n              <svg id=\"fire-intensity-chart\" width=\"100%\" height=\"300\"></svg>\n            </div>\n          </div>\n          \n          <div class=\"chart-container half-width\">\n            <h3 class=\"section-title\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\" clip-rule=\"evenodd\" />\n              </svg>\n              Top 5 Years by Acres Burned\n            </h3>\n            <div class=\"chart-description\">\n              The five years with the most acres burned, showing extreme fire seasons.\n            </div>\n            <div class=\"chart-canvas\">\n              <svg id=\"top-years-chart\" width=\"100%\" height=\"300\"></svg>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Data Source Info -->\n        <div class=\"data-source-container\">\n          <h3 class=\"data-source-title\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"data-source-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n            </svg>\n            Data Source Information\n          </h3>\n          <div class=\"data-source-content\">\n            <p>\n              This visualization uses data from the firep23_1.geojson file, which contains California wildfire records.\n              The dashboard presents an overview with focus on recent trends, key statistics, and most notable fire years.\n            </p>\n            <p class=\"data-source-note\">\n              Switch to the \"Yearly Analysis\" tab to explore data for specific years and view monthly breakdowns.\n            </p>\n          </div>\n        </div>\n        \n        <div class=\"refresh-button-container\">\n          <button id=\"refresh-button\" class=\"refresh-button\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"refresh-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\" clip-rule=\"evenodd\" />\n            </svg>\n            Refresh Data\n          </button>\n        </div>\n      </div>\n    `;\n  }\n  createCharts() {\n    this.createRecentYearsChart();\n    this.createFireIntensityChart();\n    this.createTopYearsChart();\n  }\n  createRecentYearsChart() {\n    const data = this.getRecentYearsData();\n    if (data.length === 0) return;\n    const margin = {\n      top: 40,\n      right: 80,\n      bottom: 60,\n      left: 60\n    };\n    const svgElement = document.getElementById('recent-years-chart');\n    const width = svgElement.clientWidth;\n    const height = 400;\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n\n    // Clear any existing SVG\n    d3.select('#recent-years-chart').selectAll('*').remove();\n\n    // Create SVG\n    const svg = d3.select('#recent-years-chart').attr('width', width).attr('height', height).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Define scales\n    const xScale = d3.scaleBand().domain(data.map(d => d.year)).range([0, chartWidth]).padding(0.1);\n    const yScaleLeft = d3.scaleLinear().domain([0, d3.max(data, d => d.fires) * 1.1]).range([chartHeight, 0]);\n    const yScaleRight = d3.scaleLinear().domain([0, d3.max(data, d => d.acres) * 1.1]).range([chartHeight, 0]);\n\n    // Create axes\n    const xAxis = svg.append('g').attr('transform', `translate(0,${chartHeight})`).call(d3.axisBottom(xScale));\n    const yAxisLeft = svg.append('g').call(d3.axisLeft(yScaleLeft).tickFormat(d => this.formatLargeNumber(d)));\n    const yAxisRight = svg.append('g').attr('transform', `translate(${chartWidth},0)`).call(d3.axisRight(yScaleRight).tickFormat(d => this.formatLargeNumber(d)));\n\n    // Add grid lines\n    svg.append('g').attr('class', 'grid-lines').selectAll('line').data(yScaleLeft.ticks()).enter().append('line').attr('x1', 0).attr('y1', d => yScaleLeft(d)).attr('x2', chartWidth).attr('y2', d => yScaleLeft(d)).attr('stroke', '#e5e7eb').attr('stroke-dasharray', '3,3');\n\n    // Create line generators\n    const lineGeneratorFires = d3.line().x(d => xScale(d.year) + xScale.bandwidth() / 2).y(d => yScaleLeft(d.fires));\n    const lineGeneratorAcres = d3.line().x(d => xScale(d.year) + xScale.bandwidth() / 2).y(d => yScaleRight(d.acres));\n\n    // Add the fire count line\n    svg.append('path').datum(data).attr('fill', 'none').attr('stroke', '#3b82f6').attr('stroke-width', 3).attr('d', lineGeneratorFires);\n\n    // Add the acres burned line\n    svg.append('path').datum(data).attr('fill', 'none').attr('stroke', '#f97316').attr('stroke-width', 3).attr('d', lineGeneratorAcres);\n\n    // Add dots for data points - Fires\n    svg.selectAll('.dot-fires').data(data).enter().append('circle').attr('class', 'dot-fires').attr('cx', d => xScale(d.year) + xScale.bandwidth() / 2).attr('cy', d => yScaleLeft(d.fires)).attr('r', 5).attr('fill', '#3b82f6');\n\n    // Add dots for data points - Acres\n    svg.selectAll('.dot-acres').data(data).enter().append('circle').attr('class', 'dot-acres').attr('cx', d => xScale(d.year) + xScale.bandwidth() / 2).attr('cy', d => yScaleRight(d.acres)).attr('r', 5).attr('fill', '#f97316');\n\n    // Add legend\n    const legend = svg.append('g').attr('class', 'legend').attr('transform', `translate(${chartWidth / 2 - 100}, -20)`);\n\n    // Fire Count legend\n    legend.append('circle').attr('cx', 0).attr('cy', 0).attr('r', 5).attr('fill', '#3b82f6');\n    legend.append('text').attr('x', 10).attr('y', 5).text('Fire Count').style('font-size', '12px');\n\n    // Acres Burned legend\n    legend.append('circle').attr('cx', 100).attr('cy', 0).attr('r', 5).attr('fill', '#f97316');\n    legend.append('text').attr('x', 110).attr('y', 5).text('Acres Burned').style('font-size', '12px');\n\n    // Create tooltip\n    const tooltip = d3.select('body').append('div').attr('class', 'tooltip').style('opacity', 0);\n\n    // Add event listeners for tooltips\n    svg.selectAll('.dot-fires, .dot-acres').on('mouseover', function (event, d) {\n      const isFireDot = d3.select(this).classed('dot-fires');\n      const value = isFireDot ? d.fires : d.acres;\n      const label = isFireDot ? 'Fire Count' : 'Acres Burned';\n      tooltip.transition().duration(200).style('opacity', 0.9);\n      tooltip.html(`\n          <strong>Year: ${d.year}</strong><br/>\n          ${label}: ${isFireDot ? value : value.toLocaleString()}\n        `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 28 + 'px');\n    }).on('mouseout', function () {\n      tooltip.transition().duration(500).style('opacity', 0);\n    });\n  }\n  createFireIntensityChart() {\n    const data = this.getAcresByFireData();\n    if (data.length === 0) return;\n\n    // Clear any existing SVG\n    d3.select('#fire-intensity-chart').selectAll('*').remove();\n    const svgElement = document.getElementById('fire-intensity-chart');\n    const width = svgElement.clientWidth;\n    const height = 300;\n    const radius = Math.min(width, height) / 2 - 40;\n\n    // Create SVG\n    const svg = d3.select('#fire-intensity-chart').attr('width', width).attr('height', height).append('g').attr('transform', `translate(${width / 2}, ${height / 2})`);\n\n    // Colors for the pie chart\n    const colors = ['#e03131', '#f08c00', '#2b8a3e', '#1971c2', '#5f3dc4'];\n\n    // Create color scale\n    const colorScale = d3.scaleOrdinal().domain(data.map(d => d.name)).range(colors);\n\n    // Compute the position of each group on the pie\n    const pie = d3.pie().value(d => d.value).sort(null);\n    const dataReady = pie(data);\n\n    // Build the pie chart\n    const arcGenerator = d3.arc().innerRadius(0).outerRadius(radius);\n\n    // Add the arcs\n    svg.selectAll('slices').data(dataReady).enter().append('path').attr('d', arcGenerator).attr('fill', d => colorScale(d.data.name)).attr('stroke', 'white').style('stroke-width', '2px').style('opacity', 0.8);\n\n    // Add labels\n    const labelArc = d3.arc().innerRadius(radius * 0.7).outerRadius(radius * 0.7);\n    svg.selectAll('labels').data(dataReady).enter().append('text').text(d => d.data.name).attr('transform', d => `translate(${labelArc.centroid(d)})`).style('text-anchor', 'middle').style('font-size', 12).style('font-weight', 'bold');\n\n    // Add value labels\n    const valueArc = d3.arc().innerRadius(radius * 0.9).outerRadius(radius * 0.9);\n    svg.selectAll('values').data(dataReady).enter().append('text').text(d => `${d.data.value}`).attr('transform', d => `translate(${valueArc.centroid(d)})`).style('text-anchor', 'middle').style('font-size', 10).style('fill', '#555');\n\n    // Create tooltip\n    const tooltip = d3.select('body').append('div').attr('class', 'tooltip').style('opacity', 0);\n\n    // Add hover effects\n    svg.selectAll('path').on('mouseover', function (event, d) {\n      d3.select(this).transition().duration(200).style('opacity', 1);\n      tooltip.transition().duration(200).style('opacity', 0.9);\n      tooltip.html(`\n          <strong>Year: ${d.data.name}</strong><br/>\n          ${d.data.value.toLocaleString()} acres per fire<br/>\n          Total Acres: ${d.data.acres.toLocaleString()}<br/>\n          Total Fires: ${d.data.fires.toLocaleString()}\n        `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 28 + 'px');\n    }).on('mouseout', function () {\n      d3.select(this).transition().duration(200).style('opacity', 0.8);\n      tooltip.transition().duration(500).style('opacity', 0);\n    });\n  }\n  createTopYearsChart() {\n    const data = this.getAcresByFireData();\n    if (data.length === 0) return;\n    const margin = {\n      top: 40,\n      right: 30,\n      bottom: 50,\n      left: 60\n    };\n    const svgElement = document.getElementById('top-years-chart');\n    const width = svgElement.clientWidth;\n    const height = 300;\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n\n    // Clear any existing SVG\n    d3.select('#top-years-chart').selectAll('*').remove();\n\n    // Create SVG\n    const svg = d3.select('#top-years-chart').attr('width', width).attr('height', height).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Colors for the bars\n    const colors = ['#e03131', '#f08c00', '#2b8a3e', '#1971c2', '#5f3dc4'];\n\n    // Define scales\n    const xScale = d3.scaleBand().domain(data.map(d => d.name)).range([0, chartWidth]).padding(0.3);\n    const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d.acres) * 1.1]).range([chartHeight, 0]);\n\n    // Create axes\n    svg.append('g').attr('transform', `translate(0,${chartHeight})`).call(d3.axisBottom(xScale));\n    svg.append('g').call(d3.axisLeft(yScale).tickFormat(d => this.formatLargeNumber(d)));\n\n    // Add grid lines\n    svg.append('g').attr('class', 'grid-lines').selectAll('line').data(yScale.ticks()).enter().append('line').attr('x1', 0).attr('y1', d => yScale(d)).attr('x2', chartWidth).attr('y2', d => yScale(d)).attr('stroke', '#e5e7eb').attr('stroke-dasharray', '3,3');\n\n    // Add the bars\n    svg.selectAll('bars').data(data).enter().append('rect').attr('x', d => xScale(d.name)).attr('y', d => yScale(d.acres)).attr('width', xScale.bandwidth()).attr('height', d => chartHeight - yScale(d.acres)).attr('fill', (d, i) => colors[i]).attr('rx', 4).attr('ry', 4);\n\n    // Create tooltip\n    const tooltip = d3.select('body').append('div').attr('class', 'tooltip').style('opacity', 0);\n\n    // Add hover effects\n    svg.selectAll('rect').on('mouseover', function (event, d) {\n      d3.select(this).transition().duration(200).attr('opacity', 0.8);\n      tooltip.transition().duration(200).style('opacity', 0.9);\n      tooltip.html(`\n          <strong>Year: ${d.name}</strong><br/>\n          Acres Burned: ${d.acres.toLocaleString()}<br/>\n          Fires: ${d.fires.toLocaleString()}<br/>\n          Acres per Fire: ${d.value.toLocaleString()}\n        `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 28 + 'px');\n    }).on('mouseout', function () {\n      d3.select(this).transition().duration(200).attr('opacity', 1);\n      tooltip.transition().duration(500).style('opacity', 0);\n    });\n  }\n  setupEventListeners() {\n    const refreshButton = document.getElementById('refresh-button');\n    if (refreshButton) {\n      refreshButton.addEventListener('click', this.onRefresh);\n    }\n  }\n  updateData(summaryStats, yearlyData) {\n    this.summaryStats = summaryStats;\n    this.yearlyData = yearlyData;\n    this.render();\n    this.createCharts();\n    this.setupEventListeners();\n  }\n}","map":{"version":3,"names":["MainDashboardD3","constructor","containerId","summaryStats","yearlyData","onRefresh","container","document","getElementById","init","render","createCharts","setupEventListeners","formatLargeNumber","num","toFixed","getRecentYearsData","length","sortedData","sort","a","b","parseInt","year","slice","Math","max","getAcresByFireData","sortedByAcres","acres","map","name","value","round","fires","innerHTML","recentYear","recentYearFires","toLocaleString","recentYearAcres","worstYear","worstYearAcres","totalFires","totalAcres","avgAnnualFires","avgAnnualAcres","createRecentYearsChart","createFireIntensityChart","createTopYearsChart","data","margin","top","right","bottom","left","svgElement","width","clientWidth","height","chartWidth","chartHeight","d3","select","selectAll","remove","svg","attr","append","xScale","scaleBand","domain","d","range","padding","yScaleLeft","scaleLinear","yScaleRight","xAxis","call","axisBottom","yAxisLeft","axisLeft","tickFormat","yAxisRight","axisRight","ticks","enter","lineGeneratorFires","line","x","bandwidth","y","lineGeneratorAcres","datum","legend","text","style","tooltip","on","event","isFireDot","classed","label","transition","duration","html","pageX","pageY","radius","min","colors","colorScale","scaleOrdinal","pie","dataReady","arcGenerator","arc","innerRadius","outerRadius","labelArc","centroid","valueArc","yScale","i","refreshButton","addEventListener","updateData"],"sources":["/Users/hongtenglee/Documents/geoviz-dashboard/client/src/components/MainDashboard.js"],"sourcesContent":["// MainDashboardD3.js - Main dashboard component with D3 charts\nclass MainDashboardD3 {\n  constructor(containerId, summaryStats, yearlyData, onRefresh) {\n    this.container = document.getElementById(containerId);\n    this.summaryStats = summaryStats;\n    this.yearlyData = yearlyData;\n    this.onRefresh = onRefresh;\n    \n    this.init();\n  }\n  \n  init() {\n    this.render();\n    this.createCharts();\n    this.setupEventListeners();\n  }\n  \n  // Format large numbers\n  formatLargeNumber(num) {\n    if (num >= 1000000) {\n      return `${(num / 1000000).toFixed(1)}M`;\n    } else if (num >= 1000) {\n      return `${(num / 1000).toFixed(1)}K`;\n    }\n    return num;\n  }\n  \n  // Get data for the overview chart (last 10 years)\n  getRecentYearsData() {\n    if (!this.yearlyData || this.yearlyData.length === 0) return [];\n    \n    // Sort years in ascending order\n    const sortedData = [...this.yearlyData].sort((a, b) => parseInt(a.year) - parseInt(b.year));\n    \n    // Take the last 10 years or all if less than 10\n    return sortedData.slice(Math.max(0, sortedData.length - 10));\n  }\n  \n  // Data for acres by fire ratio pie chart\n  getAcresByFireData() {\n    // Calculate average acres per fire for the 5 worst years\n    const sortedByAcres = [...this.yearlyData]\n      .sort((a, b) => b.acres - a.acres)\n      .slice(0, 5)\n      .map(year => ({\n        name: year.year,\n        value: Math.round(year.acres / year.fires),\n        acres: year.acres,\n        fires: year.fires\n      }));\n    \n    return sortedByAcres;\n  }\n  \n  render() {\n    this.container.innerHTML = `\n      <div class=\"main-dashboard\">\n        <div class=\"dashboard-header\">\n          <h2 class=\"dashboard-title\">California Wildfire Dashboard</h2>\n          <p class=\"dashboard-description\">\n            Overview of California wildfire data with focus on recent trends and key metrics\n          </p>\n        </div>\n        \n        <!-- Key Statistics Cards -->\n        <div class=\"key-stats-container\">\n          <div class=\"key-stat-grid\">\n            <div class=\"key-stat-card primary\">\n              <div class=\"key-stat-title\">Most Recent Year (${this.summaryStats.recentYear})</div>\n              <div class=\"key-stat-value-container\">\n                <div class=\"key-stat-value-group\">\n                  <div class=\"key-stat-value\">${this.summaryStats.recentYearFires.toLocaleString()}</div>\n                  <div class=\"key-stat-label\">Fires</div>\n                </div>\n                <div class=\"key-stat-value-group\">\n                  <div class=\"key-stat-value\">${this.summaryStats.recentYearAcres.toLocaleString()}</div>\n                  <div class=\"key-stat-label\">Acres Burned</div>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"key-stat-card danger\">\n              <div class=\"key-stat-title\">Worst Fire Year (${this.summaryStats.worstYear})</div>\n              <div class=\"key-stat-value\">${this.summaryStats.worstYearAcres.toLocaleString()}</div>\n              <div class=\"key-stat-label\">Acres Burned</div>\n            </div>\n            \n            <div class=\"key-stat-card warning\">\n              <div class=\"key-stat-title\">Historical Totals</div>\n              <div class=\"key-stat-value-container\">\n                <div class=\"key-stat-value-group\">\n                  <div class=\"key-stat-value\">${this.summaryStats.totalFires.toLocaleString()}</div>\n                  <div class=\"key-stat-label\">Total Fires</div>\n                </div>\n                <div class=\"key-stat-value-group\">\n                  <div class=\"key-stat-value\">${this.summaryStats.totalAcres.toLocaleString()}</div>\n                  <div class=\"key-stat-label\">Total Acres</div>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"key-stat-card info\">\n              <div class=\"key-stat-title\">Annual Averages</div>\n              <div class=\"key-stat-value-container\">\n                <div class=\"key-stat-value-group\">\n                  <div class=\"key-stat-value\">${this.summaryStats.avgAnnualFires.toLocaleString()}</div>\n                  <div class=\"key-stat-label\">Fires per Year</div>\n                </div>\n                <div class=\"key-stat-value-group\">\n                  <div class=\"key-stat-value\">${this.summaryStats.avgAnnualAcres.toLocaleString()}</div>\n                  <div class=\"key-stat-label\">Acres per Year</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Recent Years Chart -->\n        <div class=\"chart-section\">\n          <div class=\"chart-container\">\n            <h3 class=\"section-title\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M5 2a1 1 0 011 1v1h1a1 1 0 010 2H6v1a1 1 0 01-2 0V6H3a1 1 0 010-2h1V3a1 1 0 011-1zm0 10a1 1 0 011 1v1h1a1 1 0 110 2H6v1a1 1 0 11-2 0v-1H3a1 1 0 110-2h1v-1a1 1 0 011-1zM12 2a1 1 0 01.967.744L14.146 7.2 17.5 9.134a1 1 0 010 1.732l-3.354 1.935-1.18 4.455a1 1 0 01-1.933 0L9.854 12.8 6.5 10.866a1 1 0 010-1.732l3.354-1.935 1.18-4.455A1 1 0 0112 2z\" clip-rule=\"evenodd\" />\n              </svg>\n              Fire Trends: Recent 10 Years\n            </h3>\n            <div class=\"chart-description\">\n              Shows the number of fires and acres burned in recent years, highlighting the increasing trend.\n            </div>\n            <div class=\"chart-canvas\">\n              <svg id=\"recent-years-chart\" width=\"100%\" height=\"400\"></svg>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Two-column charts section -->\n        <div class=\"two-column-chart-section\">\n          <div class=\"chart-container half-width\">\n            <h3 class=\"section-title\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path d=\"M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z\" />\n                <path d=\"M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z\" />\n              </svg>\n              Fire Intensity (Acres per Fire)\n            </h3>\n            <div class=\"chart-description\">\n              Comparison of acres burned per fire for the worst 5 years, indicating fire severity.\n            </div>\n            <div class=\"chart-canvas\">\n              <svg id=\"fire-intensity-chart\" width=\"100%\" height=\"300\"></svg>\n            </div>\n          </div>\n          \n          <div class=\"chart-container half-width\">\n            <h3 class=\"section-title\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"section-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\" clip-rule=\"evenodd\" />\n              </svg>\n              Top 5 Years by Acres Burned\n            </h3>\n            <div class=\"chart-description\">\n              The five years with the most acres burned, showing extreme fire seasons.\n            </div>\n            <div class=\"chart-canvas\">\n              <svg id=\"top-years-chart\" width=\"100%\" height=\"300\"></svg>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Data Source Info -->\n        <div class=\"data-source-container\">\n          <h3 class=\"data-source-title\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"data-source-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n            </svg>\n            Data Source Information\n          </h3>\n          <div class=\"data-source-content\">\n            <p>\n              This visualization uses data from the firep23_1.geojson file, which contains California wildfire records.\n              The dashboard presents an overview with focus on recent trends, key statistics, and most notable fire years.\n            </p>\n            <p class=\"data-source-note\">\n              Switch to the \"Yearly Analysis\" tab to explore data for specific years and view monthly breakdowns.\n            </p>\n          </div>\n        </div>\n        \n        <div class=\"refresh-button-container\">\n          <button id=\"refresh-button\" class=\"refresh-button\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"refresh-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\" clip-rule=\"evenodd\" />\n            </svg>\n            Refresh Data\n          </button>\n        </div>\n      </div>\n    `;\n  }\n  \n  createCharts() {\n    this.createRecentYearsChart();\n    this.createFireIntensityChart();\n    this.createTopYearsChart();\n  }\n  \n  createRecentYearsChart() {\n    const data = this.getRecentYearsData();\n    if (data.length === 0) return;\n    \n    const margin = { top: 40, right: 80, bottom: 60, left: 60 };\n    const svgElement = document.getElementById('recent-years-chart');\n    const width = svgElement.clientWidth;\n    const height = 400;\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n    \n    // Clear any existing SVG\n    d3.select('#recent-years-chart').selectAll('*').remove();\n    \n    // Create SVG\n    const svg = d3.select('#recent-years-chart')\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n    \n    // Define scales\n    const xScale = d3.scaleBand()\n      .domain(data.map(d => d.year))\n      .range([0, chartWidth])\n      .padding(0.1);\n    \n    const yScaleLeft = d3.scaleLinear()\n      .domain([0, d3.max(data, d => d.fires) * 1.1])\n      .range([chartHeight, 0]);\n    \n    const yScaleRight = d3.scaleLinear()\n      .domain([0, d3.max(data, d => d.acres) * 1.1])\n      .range([chartHeight, 0]);\n    \n    // Create axes\n    const xAxis = svg.append('g')\n      .attr('transform', `translate(0,${chartHeight})`)\n      .call(d3.axisBottom(xScale));\n    \n    const yAxisLeft = svg.append('g')\n      .call(d3.axisLeft(yScaleLeft).tickFormat(d => this.formatLargeNumber(d)));\n    \n    const yAxisRight = svg.append('g')\n      .attr('transform', `translate(${chartWidth},0)`)\n      .call(d3.axisRight(yScaleRight).tickFormat(d => this.formatLargeNumber(d)));\n    \n    // Add grid lines\n    svg.append('g')\n      .attr('class', 'grid-lines')\n      .selectAll('line')\n      .data(yScaleLeft.ticks())\n      .enter()\n      .append('line')\n      .attr('x1', 0)\n      .attr('y1', d => yScaleLeft(d))\n      .attr('x2', chartWidth)\n      .attr('y2', d => yScaleLeft(d))\n      .attr('stroke', '#e5e7eb')\n      .attr('stroke-dasharray', '3,3');\n    \n    // Create line generators\n    const lineGeneratorFires = d3.line()\n      .x(d => xScale(d.year) + xScale.bandwidth() / 2)\n      .y(d => yScaleLeft(d.fires));\n    \n    const lineGeneratorAcres = d3.line()\n      .x(d => xScale(d.year) + xScale.bandwidth() / 2)\n      .y(d => yScaleRight(d.acres));\n    \n    // Add the fire count line\n    svg.append('path')\n      .datum(data)\n      .attr('fill', 'none')\n      .attr('stroke', '#3b82f6')\n      .attr('stroke-width', 3)\n      .attr('d', lineGeneratorFires);\n    \n    // Add the acres burned line\n    svg.append('path')\n      .datum(data)\n      .attr('fill', 'none')\n      .attr('stroke', '#f97316')\n      .attr('stroke-width', 3)\n      .attr('d', lineGeneratorAcres);\n    \n    // Add dots for data points - Fires\n    svg.selectAll('.dot-fires')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('class', 'dot-fires')\n      .attr('cx', d => xScale(d.year) + xScale.bandwidth() / 2)\n      .attr('cy', d => yScaleLeft(d.fires))\n      .attr('r', 5)\n      .attr('fill', '#3b82f6');\n    \n    // Add dots for data points - Acres\n    svg.selectAll('.dot-acres')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('class', 'dot-acres')\n      .attr('cx', d => xScale(d.year) + xScale.bandwidth() / 2)\n      .attr('cy', d => yScaleRight(d.acres))\n      .attr('r', 5)\n      .attr('fill', '#f97316');\n    \n    // Add legend\n    const legend = svg.append('g')\n      .attr('class', 'legend')\n      .attr('transform', `translate(${chartWidth / 2 - 100}, -20)`);\n    \n    // Fire Count legend\n    legend.append('circle')\n      .attr('cx', 0)\n      .attr('cy', 0)\n      .attr('r', 5)\n      .attr('fill', '#3b82f6');\n    \n    legend.append('text')\n      .attr('x', 10)\n      .attr('y', 5)\n      .text('Fire Count')\n      .style('font-size', '12px');\n    \n    // Acres Burned legend\n    legend.append('circle')\n      .attr('cx', 100)\n      .attr('cy', 0)\n      .attr('r', 5)\n      .attr('fill', '#f97316');\n    \n    legend.append('text')\n      .attr('x', 110)\n      .attr('y', 5)\n      .text('Acres Burned')\n      .style('font-size', '12px');\n    \n    // Create tooltip\n    const tooltip = d3.select('body').append('div')\n      .attr('class', 'tooltip')\n      .style('opacity', 0);\n    \n    // Add event listeners for tooltips\n    svg.selectAll('.dot-fires, .dot-acres')\n      .on('mouseover', function(event, d) {\n        const isFireDot = d3.select(this).classed('dot-fires');\n        const value = isFireDot ? d.fires : d.acres;\n        const label = isFireDot ? 'Fire Count' : 'Acres Burned';\n        \n        tooltip.transition()\n          .duration(200)\n          .style('opacity', 0.9);\n        \n        tooltip.html(`\n          <strong>Year: ${d.year}</strong><br/>\n          ${label}: ${isFireDot ? value : value.toLocaleString()}\n        `)\n          .style('left', (event.pageX + 10) + 'px')\n          .style('top', (event.pageY - 28) + 'px');\n      })\n      .on('mouseout', function() {\n        tooltip.transition()\n          .duration(500)\n          .style('opacity', 0);\n      });\n  }\n  \n  createFireIntensityChart() {\n    const data = this.getAcresByFireData();\n    if (data.length === 0) return;\n    \n    // Clear any existing SVG\n    d3.select('#fire-intensity-chart').selectAll('*').remove();\n    \n    const svgElement = document.getElementById('fire-intensity-chart');\n    const width = svgElement.clientWidth;\n    const height = 300;\n    const radius = Math.min(width, height) / 2 - 40;\n    \n    // Create SVG\n    const svg = d3.select('#fire-intensity-chart')\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('transform', `translate(${width / 2}, ${height / 2})`);\n    \n    // Colors for the pie chart\n    const colors = ['#e03131', '#f08c00', '#2b8a3e', '#1971c2', '#5f3dc4'];\n    \n    // Create color scale\n    const colorScale = d3.scaleOrdinal()\n      .domain(data.map(d => d.name))\n      .range(colors);\n    \n    // Compute the position of each group on the pie\n    const pie = d3.pie()\n      .value(d => d.value)\n      .sort(null);\n    \n    const dataReady = pie(data);\n    \n    // Build the pie chart\n    const arcGenerator = d3.arc()\n      .innerRadius(0)\n      .outerRadius(radius);\n    \n    // Add the arcs\n    svg.selectAll('slices')\n      .data(dataReady)\n      .enter()\n      .append('path')\n      .attr('d', arcGenerator)\n      .attr('fill', d => colorScale(d.data.name))\n      .attr('stroke', 'white')\n      .style('stroke-width', '2px')\n      .style('opacity', 0.8);\n    \n    // Add labels\n    const labelArc = d3.arc()\n      .innerRadius(radius * 0.7)\n      .outerRadius(radius * 0.7);\n    \n    svg.selectAll('labels')\n      .data(dataReady)\n      .enter()\n      .append('text')\n      .text(d => d.data.name)\n      .attr('transform', d => `translate(${labelArc.centroid(d)})`)\n      .style('text-anchor', 'middle')\n      .style('font-size', 12)\n      .style('font-weight', 'bold');\n    \n    // Add value labels\n    const valueArc = d3.arc()\n      .innerRadius(radius * 0.9)\n      .outerRadius(radius * 0.9);\n    \n    svg.selectAll('values')\n      .data(dataReady)\n      .enter()\n      .append('text')\n      .text(d => `${d.data.value}`)\n      .attr('transform', d => `translate(${valueArc.centroid(d)})`)\n      .style('text-anchor', 'middle')\n      .style('font-size', 10)\n      .style('fill', '#555');\n    \n    // Create tooltip\n    const tooltip = d3.select('body').append('div')\n      .attr('class', 'tooltip')\n      .style('opacity', 0);\n    \n    // Add hover effects\n    svg.selectAll('path')\n      .on('mouseover', function(event, d) {\n        d3.select(this)\n          .transition()\n          .duration(200)\n          .style('opacity', 1);\n        \n        tooltip.transition()\n          .duration(200)\n          .style('opacity', 0.9);\n        \n        tooltip.html(`\n          <strong>Year: ${d.data.name}</strong><br/>\n          ${d.data.value.toLocaleString()} acres per fire<br/>\n          Total Acres: ${d.data.acres.toLocaleString()}<br/>\n          Total Fires: ${d.data.fires.toLocaleString()}\n        `)\n          .style('left', (event.pageX + 10) + 'px')\n          .style('top', (event.pageY - 28) + 'px');\n      })\n      .on('mouseout', function() {\n        d3.select(this)\n          .transition()\n          .duration(200)\n          .style('opacity', 0.8);\n        \n        tooltip.transition()\n          .duration(500)\n          .style('opacity', 0);\n      });\n  }\n  \n  createTopYearsChart() {\n    const data = this.getAcresByFireData();\n    if (data.length === 0) return;\n    \n    const margin = { top: 40, right: 30, bottom: 50, left: 60 };\n    const svgElement = document.getElementById('top-years-chart');\n    const width = svgElement.clientWidth;\n    const height = 300;\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n    \n    // Clear any existing SVG\n    d3.select('#top-years-chart').selectAll('*').remove();\n    \n    // Create SVG\n    const svg = d3.select('#top-years-chart')\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n    \n    // Colors for the bars\n    const colors = ['#e03131', '#f08c00', '#2b8a3e', '#1971c2', '#5f3dc4'];\n    \n    // Define scales\n    const xScale = d3.scaleBand()\n      .domain(data.map(d => d.name))\n      .range([0, chartWidth])\n      .padding(0.3);\n    \n    const yScale = d3.scaleLinear()\n      .domain([0, d3.max(data, d => d.acres) * 1.1])\n      .range([chartHeight, 0]);\n    \n    // Create axes\n    svg.append('g')\n      .attr('transform', `translate(0,${chartHeight})`)\n      .call(d3.axisBottom(xScale));\n    \n    svg.append('g')\n      .call(d3.axisLeft(yScale).tickFormat(d => this.formatLargeNumber(d)));\n    \n    // Add grid lines\n    svg.append('g')\n      .attr('class', 'grid-lines')\n      .selectAll('line')\n      .data(yScale.ticks())\n      .enter()\n      .append('line')\n      .attr('x1', 0)\n      .attr('y1', d => yScale(d))\n      .attr('x2', chartWidth)\n      .attr('y2', d => yScale(d))\n      .attr('stroke', '#e5e7eb')\n      .attr('stroke-dasharray', '3,3');\n    \n    // Add the bars\n    svg.selectAll('bars')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('x', d => xScale(d.name))\n      .attr('y', d => yScale(d.acres))\n      .attr('width', xScale.bandwidth())\n      .attr('height', d => chartHeight - yScale(d.acres))\n      .attr('fill', (d, i) => colors[i])\n      .attr('rx', 4)\n      .attr('ry', 4);\n    \n    // Create tooltip\n    const tooltip = d3.select('body').append('div')\n      .attr('class', 'tooltip')\n      .style('opacity', 0);\n    \n    // Add hover effects\n    svg.selectAll('rect')\n      .on('mouseover', function(event, d) {\n        d3.select(this)\n          .transition()\n          .duration(200)\n          .attr('opacity', 0.8);\n        \n        tooltip.transition()\n          .duration(200)\n          .style('opacity', 0.9);\n        \n        tooltip.html(`\n          <strong>Year: ${d.name}</strong><br/>\n          Acres Burned: ${d.acres.toLocaleString()}<br/>\n          Fires: ${d.fires.toLocaleString()}<br/>\n          Acres per Fire: ${d.value.toLocaleString()}\n        `)\n          .style('left', (event.pageX + 10) + 'px')\n          .style('top', (event.pageY - 28) + 'px');\n      })\n      .on('mouseout', function() {\n        d3.select(this)\n          .transition()\n          .duration(200)\n          .attr('opacity', 1);\n        \n        tooltip.transition()\n          .duration(500)\n          .style('opacity', 0);\n      });\n  }\n  \n  setupEventListeners() {\n    const refreshButton = document.getElementById('refresh-button');\n    if (refreshButton) {\n      refreshButton.addEventListener('click', this.onRefresh);\n    }\n  }\n  \n  updateData(summaryStats, yearlyData) {\n    this.summaryStats = summaryStats;\n    this.yearlyData = yearlyData;\n    this.render();\n    this.createCharts();\n    this.setupEventListeners();\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}